/* This file was auto-generated by KreMLin! */
#include "kremlib.h"
#ifndef __Hacl_RSAPSS_H
#define __Hacl_RSAPSS_H

bool Hacl_Impl_Lib_eq_b(Prims_nat len, uint32_t clen, uint8_t *b1, uint8_t *b2);

typedef struct 
{
  uint64_t fst;
  uint64_t snd;
}
K___uint64_t_uint64_t;


typedef enum { Hacl_Impl_Multiplication_Positive, Hacl_Impl_Multiplication_Negative }
Hacl_Impl_Multiplication_sign;

void
Hacl_Impl_Multiplication_karatsuba(
  uint32_t k,
  Prims_nat aLen,
  uint32_t pow2_i,
  uint32_t iLen,
  uint32_t aaLen,
  uint64_t *a,
  uint64_t *b,
  uint64_t *st_mult,
  uint64_t *res
);

void
Hacl_Impl_Multiplication_bn_mul(
  Prims_nat aLen,
  Prims_nat bLen,
  uint32_t aaLen,
  uint64_t *a,
  uint32_t bbLen,
  uint64_t *b,
  uint64_t *res
);
#endif
