/* This file auto-generated by KreMLin! */
#ifndef __Hacl_UInt8_H
#define __Hacl_UInt8_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "FStar_BitVector.h"
#include "FStar_UInt.h"
#include "FStar_Int.h"
#include "FStar_FunctionalExtensionality.h"
#include "FStar_PropositionalExtensionality.h"
#include "FStar_PredicateExtensionality.h"
#include "FStar_TSet.h"
#include "FStar_Set.h"
#include "FStar_Map.h"
#include "FStar_Ghost.h"
#include "FStar_All.h"
#include "Hacl_UInt64.h"
#include "Hacl_UInt128.h"
#include "Hacl_UInt32.h"
#include "kremlib.h"

extern Prims_int Hacl_UInt8_n;

typedef uint8_t Hacl_UInt8_t;

Prims_int Hacl_UInt8_v(uint8_t x);

uint8_t Hacl_UInt8_add(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_add_mod(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_sub(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_sub_mod(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_mul(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_mul_mod(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_logand(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_logxor(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_logor(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_lognot(uint8_t a);

uint8_t Hacl_UInt8_shift_right(uint8_t a, uint32_t s);

uint8_t Hacl_UInt8_shift_left(uint8_t a, uint32_t s);

uint8_t Hacl_UInt8_eq_mask(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_gte_mask(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_gt_mask(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_lt_mask(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_lte_mask(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_op_Plus_Hat(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_op_Plus_Percent_Hat(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_op_Subtraction_Hat(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_op_Subtraction_Percent_Hat(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_op_Star_Hat(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_op_Star_Percent_Hat(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_op_Amp_Hat(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_op_Hat_Hat(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_op_Bar_Hat(uint8_t a, uint8_t b);

uint8_t Hacl_UInt8_op_Greater_Greater_Hat(uint8_t a, uint32_t s);

uint8_t Hacl_UInt8_op_Less_Less_Hat(uint8_t a, uint32_t s);

extern uint8_t Hacl_UInt8_of_string(Prims_string x0);

typedef uint8_t Hacl_UInt8_byte;
#endif
