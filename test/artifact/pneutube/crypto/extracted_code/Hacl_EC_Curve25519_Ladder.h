/* This file auto-generated by KreMLin! */
#ifndef __Hacl_EC_Curve25519_Ladder_H
#define __Hacl_EC_Curve25519_Ladder_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "FStar_BitVector.h"
#include "FStar_UInt.h"
#include "FStar_Int.h"
#include "FStar_FunctionalExtensionality.h"
#include "FStar_PropositionalExtensionality.h"
#include "FStar_PredicateExtensionality.h"
#include "FStar_TSet.h"
#include "FStar_Set.h"
#include "FStar_Map.h"
#include "FStar_Ghost.h"
#include "FStar_All.h"
#include "Hacl_UInt64.h"
#include "Hacl_UInt128.h"
#include "Hacl_UInt32.h"
#include "Hacl_UInt8.h"
#include "Hacl_Cast.h"
#include "FStar_Buffer.h"
#include "FStar_Buffer_Quantifiers.h"
#include "Hacl_EC_Curve25519_Parameters.h"
#include "Hacl_EC_Curve25519_Bigint.h"
#include "Hacl_EC_Curve25519_Utils.h"
#include "Hacl_EC_Curve25519_Bignum_Fproduct.h"
#include "Hacl_EC_Curve25519_Bignum_Fscalar.h"
#include "Hacl_EC_Curve25519_Bignum_Fdifference.h"
#include "Hacl_EC_Curve25519_Bignum_Fsum.h"
#include "Hacl_EC_Curve25519_Bignum_Modulo.h"
#include "Hacl_EC_Curve25519_Bignum.h"
#include "Hacl_EC_Curve25519_PPoint.h"
#include "Hacl_EC_Curve25519_AddAndDouble.h"
#include "Hacl_UInt16.h"
#include "Hacl_Types.h"
#include "Hacl_Symmetric_Poly1305_64_Parameters.h"
#include "Hacl_Symmetric_Poly1305_64_Bigint.h"
#include "Hacl_Symmetric_HSalsa20.h"
#include "Hacl_Symmetric_Poly1305_64.h"
#include "Hacl_Symmetric_Salsa20.h"
#include "Hacl_Policies.h"
#include "Hacl_Constants.h"
#include "Hacl_SecretBox.h"
#include "kremlib.h"

uint64_t Hacl_EC_Curve25519_Ladder_mk_mask(uint8_t x);

uint8_t Hacl_EC_Curve25519_Ladder_nth_bit(uint8_t byte, uint32_t idx);

void
Hacl_EC_Curve25519_Ladder_small_step_exit(
  Hacl_EC_Curve25519_PPoint_point pp,
  Hacl_EC_Curve25519_PPoint_point ppq,
  Hacl_EC_Curve25519_PPoint_point p,
  Hacl_EC_Curve25519_PPoint_point pq,
  Hacl_EC_Curve25519_PPoint_point q,
  void *n,
  uint8_t byte,
  void *scalar
);

void
Hacl_EC_Curve25519_Ladder_lemma_helper_0(
  FStar_HyperHeap_rid r,
  Prims_prop (*s)(FStar_Heap_aref x0),
  FStar_HyperStack_mem h0,
  FStar_HyperStack_mem h1,
  FStar_HyperStack_mem h2,
  FStar_HyperStack_mem h3
);

void
Hacl_EC_Curve25519_Ladder_lemma_helper_00(
  Hacl_EC_Curve25519_PPoint_point a,
  Hacl_EC_Curve25519_PPoint_point b,
  Hacl_EC_Curve25519_PPoint_point c,
  FStar_HyperStack_mem h0,
  FStar_HyperStack_mem h1
);

void
Hacl_EC_Curve25519_Ladder_lemma_helper_02(
  FStar_HyperHeap_rid r,
  Hacl_EC_Curve25519_PPoint_point c,
  FStar_HyperStack_mem h0,
  FStar_HyperStack_mem h1
);

void
Hacl_EC_Curve25519_Ladder_lemma_distinct_symm(
  Hacl_EC_Curve25519_PPoint_point a,
  Hacl_EC_Curve25519_PPoint_point b
);

void
Hacl_EC_Curve25519_Ladder_lemma_helper_001(
  Hacl_EC_Curve25519_PPoint_point a,
  Hacl_EC_Curve25519_PPoint_point b,
  Hacl_EC_Curve25519_PPoint_point c,
  Hacl_EC_Curve25519_PPoint_point d,
  Hacl_EC_Curve25519_PPoint_point e,
  FStar_HyperStack_mem h0,
  FStar_HyperStack_mem h1
);

void
Hacl_EC_Curve25519_Ladder_small_step_core(
  Hacl_EC_Curve25519_PPoint_point pp,
  Hacl_EC_Curve25519_PPoint_point ppq,
  Hacl_EC_Curve25519_PPoint_point p,
  Hacl_EC_Curve25519_PPoint_point pq,
  Hacl_EC_Curve25519_PPoint_point q,
  void *n,
  uint32_t ctr,
  uint8_t b,
  void *scalar
);

void
Hacl_EC_Curve25519_Ladder_small_step(
  Hacl_EC_Curve25519_PPoint_point pp,
  Hacl_EC_Curve25519_PPoint_point ppq,
  Hacl_EC_Curve25519_PPoint_point p,
  Hacl_EC_Curve25519_PPoint_point pq,
  Hacl_EC_Curve25519_PPoint_point q,
  void *n,
  uint32_t ctr,
  uint8_t b,
  void *scalar
);

void
Hacl_EC_Curve25519_Ladder_lemma_helper_1(
  FStar_HyperHeap_rid r,
  Prims_prop (*s)(FStar_Heap_aref x0),
  FStar_HyperStack_mem h0,
  FStar_HyperStack_mem h1,
  FStar_HyperStack_mem h2
);

void
Hacl_EC_Curve25519_Ladder_big_step(
  uint8_t *n,
  Hacl_EC_Curve25519_PPoint_point pp,
  Hacl_EC_Curve25519_PPoint_point ppq,
  Hacl_EC_Curve25519_PPoint_point p,
  Hacl_EC_Curve25519_PPoint_point pq,
  Hacl_EC_Curve25519_PPoint_point q,
  uint32_t ctr
);

void Hacl_EC_Curve25519_Ladder_init_points(Hacl_EC_Curve25519_PPoint_point q, uint64_t *tmp);

void
Hacl_EC_Curve25519_Ladder_lemma_helper_2(
  FStar_HyperStack_mem hinit,
  FStar_HyperStack_mem h0,
  FStar_HyperStack_mem h1,
  FStar_HyperStack_mem h2,
  FStar_HyperStack_mem hfin,
  FStar_HyperHeap_rid r
);

void
Hacl_EC_Curve25519_Ladder_montgomery_ladder(
  Hacl_EC_Curve25519_PPoint_point res,
  uint8_t *n,
  Hacl_EC_Curve25519_PPoint_point q
);
#endif
