/* This file auto-generated by KreMLin! */
#ifndef __Hacl_EC_Point_H
#define __Hacl_EC_Point_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "FStar_BitVector.h"
#include "FStar_UInt.h"
#include "FStar_Int.h"
#include "FStar_FunctionalExtensionality.h"
#include "FStar_PropositionalExtensionality.h"
#include "FStar_PredicateExtensionality.h"
#include "FStar_TSet.h"
#include "FStar_Set.h"
#include "FStar_Map.h"
#include "FStar_Ghost.h"
#include "FStar_All.h"
#include "Hacl_UInt64.h"
#include "Hacl_UInt128.h"
#include "Hacl_UInt32.h"
#include "Hacl_UInt8.h"
#include "Hacl_Cast.h"
#include "Hacl_Bignum_Constants.h"
#include "FStar_Buffer.h"
#include "Hacl_Bignum_Parameters.h"
#include "Hacl_Bignum_Predicates.h"
#include "Hacl_Bignum_Limb.h"
#include "Hacl_Bignum_Wide.h"
#include "Hacl_Bignum_Bigint.h"
#include "Hacl_Bignum_Fsum_Spec.h"
#include "Hacl_Bignum_Fsum.h"
#include "Hacl_Bignum_Fscalar_Spec.h"
#include "Hacl_Bignum_Modulo.h"
#include "Hacl_Bignum_Fproduct_Spec.h"
#include "Hacl_Bignum_Fdifference_Spec.h"
#include "Hacl_Bignum_Fproduct.h"
#include "Hacl_Bignum_Crecip.h"
#include "Hacl_Bignum_Fdifference.h"
#include "Hacl_Bignum_Fscalar.h"
#include "Hacl_Bignum.h"
#include "kremlib.h"
#include "testlib.h"

typedef uint64_t *Hacl_EC_Point_point;

uint64_t *Hacl_EC_Point_getx(uint64_t *p);

uint64_t *Hacl_EC_Point_gety(uint64_t *p);

uint64_t *Hacl_EC_Point_getz(uint64_t *p);

uint64_t *Hacl_EC_Point_make(uint64_t *x, uint64_t *y, uint64_t *z);

bool Hacl_EC_Point_valid(FStar_HyperStack_mem h, uint64_t *p);

void Hacl_EC_Point_swap_conditional_(uint64_t *a, uint64_t *b, uint64_t swap, uint32_t ctr);

void Hacl_EC_Point_swap_conditional(uint64_t *a, uint64_t *b, uint64_t iswap);

void Hacl_EC_Point_copy(uint64_t *output, uint64_t *input);
#endif
