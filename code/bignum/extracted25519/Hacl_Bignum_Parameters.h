/* This file auto-generated by KreMLin! */
#ifndef __Hacl_Bignum_Parameters_H
#define __Hacl_Bignum_Parameters_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "FStar_BitVector.h"
#include "FStar_UInt.h"
#include "FStar_Int.h"
#include "FStar_FunctionalExtensionality.h"
#include "FStar_PropositionalExtensionality.h"
#include "FStar_PredicateExtensionality.h"
#include "FStar_TSet.h"
#include "FStar_Set.h"
#include "FStar_Map.h"
#include "FStar_Ghost.h"
#include "FStar_All.h"
#include "Hacl_UInt64.h"
#include "Hacl_UInt128.h"
#include "Hacl_UInt32.h"
#include "Hacl_UInt8.h"
#include "Hacl_Cast.h"
#include "Hacl_Bignum_Constants.h"
#include "FStar_Buffer.h"
#include "kremlib.h"
#include "testlib.h"

extern Prims_int Hacl_Bignum_Parameters_prime;

extern Prims_int Hacl_Bignum_Parameters_word_size;

typedef uint64_t Hacl_Bignum_Parameters_limb;

typedef FStar_UInt128_t Hacl_Bignum_Parameters_wide;

typedef uint32_t Hacl_Bignum_Parameters_ctr;

extern Prims_int Hacl_Bignum_Parameters_len;

extern uint32_t Hacl_Bignum_Parameters_clen;

typedef uint64_t *Hacl_Bignum_Parameters_felem;

typedef FStar_UInt128_t *Hacl_Bignum_Parameters_felem_wide;

typedef void *Hacl_Bignum_Parameters_seqelem;

typedef void *Hacl_Bignum_Parameters_seqelem_wide;

extern uint32_t Hacl_Bignum_Parameters_climb_size;

void Hacl_Bignum_Parameters_lemma_prime_limb_size();

extern Prims_int Hacl_Bignum_Parameters_limb_n;

Prims_int Hacl_Bignum_Parameters_v(uint64_t x);

void Hacl_Bignum_Parameters_lemma_limb_injectivity(uint64_t a, uint64_t b);

extern uint64_t Hacl_Bignum_Parameters_limb_zero;

extern uint64_t Hacl_Bignum_Parameters_limb_one;

uint64_t Hacl_Bignum_Parameters_limb_add(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_add_mod(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_sub(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_sub_mod(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_mul(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_mul_mod(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_logand(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_logxor(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_logor(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_lognot(uint64_t a);

uint64_t Hacl_Bignum_Parameters_limb_shift_right(uint64_t a, uint32_t s);

uint64_t Hacl_Bignum_Parameters_limb_shift_left(uint64_t a, uint32_t s);

uint64_t Hacl_Bignum_Parameters_limb_eq_mask(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_gte_mask(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_gt_mask(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_lt_mask(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Parameters_limb_lte_mask(uint64_t a, uint64_t b);

uint8_t Hacl_Bignum_Parameters_limb_to_byte(uint64_t x);

uint64_t Hacl_Bignum_Parameters_byte_to_limb(uint8_t x);

extern Prims_int Hacl_Bignum_Parameters_wide_n;

Prims_int Hacl_Bignum_Parameters_w(FStar_UInt128_t x);

void Hacl_Bignum_Parameters_lemma_wide_injectivity(FStar_UInt128_t a, FStar_UInt128_t b);

extern FStar_UInt128_t Hacl_Bignum_Parameters_wide_zero;

extern FStar_UInt128_t Hacl_Bignum_Parameters_wide_one;

FStar_UInt128_t Hacl_Bignum_Parameters_wide_add(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_add_mod(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_sub(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_sub_mod(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_logand(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_logxor(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_logor(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_lognot(FStar_UInt128_t a);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_shift_right(FStar_UInt128_t a, uint32_t s);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_shift_left(FStar_UInt128_t a, uint32_t s);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_eq_mask(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_gte_mask(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_gt_mask(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_lt_mask(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_wide_lte_mask(FStar_UInt128_t a, FStar_UInt128_t b);

FStar_UInt128_t Hacl_Bignum_Parameters_mul_wide(uint64_t x, uint64_t y);

FStar_UInt128_t Hacl_Bignum_Parameters_limb_to_wide(uint64_t x);

uint64_t Hacl_Bignum_Parameters_wide_to_limb(FStar_UInt128_t x);

uint64_t Hacl_Bignum_Parameters_uint64_to_limb(uint64_t x);
#endif
