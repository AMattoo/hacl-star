/* This file was auto-generated by KreMLin! */
#include "kremlib.h"
#ifndef __Hacl_Curve25519_H
#define __Hacl_Curve25519_H



#include "testlib.h"
#include "Hacl_Curve25519_BN.h"

typedef uint64_t Hacl_Bignum_Constants_limb;

typedef FStar_UInt128_t Hacl_Bignum_Constants_wide;

typedef uint64_t Hacl_Bignum_Parameters_limb;

typedef FStar_UInt128_t Hacl_Bignum_Parameters_wide;

typedef uint32_t Hacl_Bignum_Parameters_ctr;

typedef uint64_t *Hacl_Bignum_Parameters_felem;

typedef FStar_UInt128_t *Hacl_Bignum_Parameters_felem_wide;

typedef void *Hacl_Bignum_Parameters_seqelem;

typedef void *Hacl_Bignum_Parameters_seqelem_wide;

typedef uint64_t Hacl_Bignum_Limb_t;

typedef uint8_t *Hacl_Bignum_uint8_p;


typedef struct 
{
  uint8_t fst;
  uint64_t snd;
}
K___uint8_t_uint64_t;

typedef struct 
{
  uint8_t fst;
  uint8_t snd;
}
K___uint8_t_uint8_t;

typedef struct 
{
  K___uint8_t_uint8_t fst;
  uint64_t snd;
}
K___K___uint8_t_uint8_t_uint64_t;

typedef FStar_UInt128_t Hacl_Bignum_Wide_t;

extern void Hacl_Bignum_Fdifference_lemma_diff(Prims_int x0, Prims_int x1, Prims_pos x2);

typedef uint64_t *Hacl_EC_Point_point;

typedef uint8_t *Hacl_EC_Ladder_SmallLoop_uint8_p;

typedef uint8_t *Hacl_EC_Ladder_uint8_p;

typedef uint8_t *Hacl_EC_Format_uint8_p;

void Hacl_EC_crypto_scalarmult(uint8_t *mypublic, uint8_t *secret, uint8_t *basepoint);

typedef uint8_t *Hacl_Curve25519_uint8_p;

void Hacl_Curve25519_crypto_scalarmult(uint8_t *mypublic, uint8_t *secret, uint8_t *basepoint);
#endif
