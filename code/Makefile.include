UNAME := $(shell uname)

HACL_HOME?=../..
FSTAR_HOME?=$(HACL_HOME)/dependencies/FStar
KREMLIN_HOME?=$(HACL_HOME)/dependencies/kremlin
HINTS_ENABLED?=--use_hints

HACL_LIB=$(HACL_HOME)/code/lib
HACL_FILES=Hacl.UInt8.fst Hacl.UInt16.fst Hacl.UInt32.fst Hacl.UInt64.fst Hacl.UInt128.fst Hacl.Cast.fst Hacl.Types.fst Hacl.Policies.fst
HACL_LIB_FILES=$(addprefix $(HACL_LIB)/, $(HACL_FILES))
HACL_KREMLIN=$(HACL_LIB)/kremlin
HACL_KREMLIN_FILES=$(addprefix $(HACL_KREMLIN)/, $(HACL_FILES))
HACL_API=$(HACL_HOME)/code/api
HACL_CRYPTO_UTILS=$(HACL_HOME)/code/lib

ifeq ($(CI),true)
VERBOSE=
else
VERBOSE=-verbose
endif

KREMLIN=$(KREMLIN_HOME)/krml
ifeq ($(CC),ccomp)
  KREMLIN_ARGS=-cc compcert $(VERBOSE)
else
  KREMLIN_ARGS=-ccopt -march=native $(VERBOSE) -ldopt -flto
endif

# Linux specific compilation instruction for PneuTube
ifeq ($(UNAME), Linux)
KREMLIN_ARGS+= -ccopt -D_GNU_SOURCE
endif

KREMLIB=$(KREMLIN_HOME)/kremlib
KREMTEST=$(KREMLIN_HOME)/test
KREMLIN_ARGS+=-I $(HACL_KREMLIN) -I $(HACL_HOME)/specs

# FSTAR_OPTIONS_VER=-fsopt $(HINTS_ENABLED) -skip-extraction
# FSTAR_OPTIONS_KREMLIN=
# FSTAR=$(KREMLIN) -verify $(VERBOSE) -skip-compilation

FSTAR_INCLUDES+=--include $(HACL_KREMLIN) --include $(KREMLIB) --include $(HACL_HOME)/specs 

ifndef CLOUD_VERIFY  
  FSTAR=$(FSTAR_HOME)/bin/fstar.exe $(HINTS_ENABLED) $(OTHERFLAGS) $(FSTAR_INCLUDES)
else
  KREMLIN_HOME=\$$H/kremlin
  CURRENT_SUBDIR:=$(subst $(abspath $(HACL_HOME))/,,$(abspath $(shell pwd)))
  FSTAR=/mnt/f/dev/sec/FStar-cloud-verify/bin/fabc-make.exe add -i $(HACL_HOME)/tmpids -d '$(CURRENT_SUBDIR)' $(FABC_EXTRA) -- \$$H/bin/fstar.exe $(HINTS_ENABLED) $(OTHERFLAGS) $(FSTAR_INCLUDES)
endif

include $(FSTAR_HOME)/ulib/ml/Makefile.include

OCAMLOPT=$(OCAMLOPT) -thread -package batteries,zarith,stdint -w -20-26-3-8-58
OCAML_OPTIONS=-fsopt "--lax" -fsopt "--codegen OCaml" -fsopt "--no_location_info"

ml-lib:
	$(MAKE) -C $(ULIB_ML)

import-lib:
	@cp $(HACL_LIB_FILES) .

import-kremlin:
	@cp $(HACL_KREMLIN_FILES)) .

%.fst-lax: %.fst
	$(FSTAR) --lax $^
%.fsti-lax: %.fsti
	$(FSTAR) --lax $^

%.fst-krml: %.fst
	$(KREMLIN) $(KREMLIN_INCLUDES) $^

%.fst-verify: %.fst
	$(FSTAR) $^
%.fsti-verify: %.fsti
	$(FSTAR) $^

%.fst.hints: %.fst
	$(FSTAR) --record_hints $^
%.fsti.hints: %.fsti
	$(FSTAR) --record_hints $^

# Custom verification targets for re-located hint files
%.fst-reloc-verify: %.fst
	$(FSTAR) --hint_file $(subst -reloc-verify,,$(@F)).hints $^
%.fsti-reloc-verify: %.fsti
	$(FSTAR) --hint_file $(subst -reloc-verify,,$(@F)).hints $^
%.fst.reloc.hints: %.fst
	$(FSTAR) --hint_file $(subst .reloc,,$(@F)) --record_hints $^
%.fsti.reloc.hints: %.fsti
	$(FSTAR) --hint_file $(subst .reloc,,$(@F)) --record_hints $^
