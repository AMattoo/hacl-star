# This makefile can be safely included from a subdirectory for the purposes of
# exposing the %.fst-in target
HACL_HOME	?= ..
FSTAR_HOME	?= $(HACL_HOME)/../FStar
KREMLIN_HOME	?= $(HACL_HOME)/../kremlin
MLCRYPTO_HOME	?= $(HACL_HOME)/../MLCrypto
OPENSSL_HOME	?= $(MLCRYPTO_HOME)/openssl

# The noopenssl config no means: enable bcrypt + disable openssl
ifeq (,$(EVEREST_WINDOWS))
ifeq (,$(KAIZALA))
CONFIG		?= default
else
CONFIG		= kaizala
endif
else
CONFIG		= noopenssl
endif

CACHE_DIR	= .cache
OUTPUT_DIR	= .output
HINT_DIR	= .hints
GENERATED_DIR	= generated
OUT_DIR		= out
INCLUDE_DIR	= include

HACL_CODE	= $(HACL_HOME)/code
HACL_SPEC	= $(HACL_HOME)/specs

VALE_OBJ_DIR	= $(HACL_HOME)/vale/obj

# We include:
# - both old and new kremlib (for the purposes of bringing old HACL* code in our
#   dependency graph)
# - the algorithms in code/ that we need
# - everything needed for the fsti of Vale to be parsed
# - the directories containing .checked files from vale, in the hope that we can
#   reuse them
# We do not include:
# - vale/obj/external, since it contains copies of files that already exist
#   elsewhere, thus defeating reusability of checked files
FSTAR_INCLUDES = \
  $(KREMLIN_HOME)/kremlib/compat \
  $(KREMLIN_HOME)/kremlib \
  $(HACL_HOME)/providers/evercrypt \
  $(HACL_HOME)/providers/evercrypt/fst \
  $(HACL_HOME)/providers/evercrypt/config/$(CONFIG) \
  $(HACL_CODE)/hash \
  $(HACL_CODE)/old/lib/kremlin \
  $(HACL_CODE)/old/experimental/aesgcm \
  $(HACL_CODE)/old/curve25519/interfaces \
  $(HACL_CODE)/old/api/interfaces \
  $(HACL_CODE)/old/api \
  $(HACL_CODE)/old/salsa-family \
  $(HACL_CODE)/old/poly1305 \
  $(HACL_CODE)/old/bignum \
  $(HACL_HOME)/vale/code/lib/math \
  $(HACL_HOME)/vale/code/lib/util \
  $(HACL_HOME)/vale/code/lib/collections \
  $(HACL_HOME)/vale/code/arch/x64/interop \
  $(HACL_HOME)/vale/code/arch/x64 \
  $(HACL_HOME)/vale/code/arch \
  $(HACL_HOME)/vale/code/crypto/poly1305/x64 \
  $(HACL_HOME)/vale/code/crypto/aes \
  $(HACL_HOME)/vale/code/crypto/sha \
  $(HACL_HOME)/vale/code/crypto/ecc/curve25519 \
  $(HACL_HOME)/vale/specs/math \
  $(HACL_HOME)/vale/specs/defs \
  $(HACL_HOME)/vale/specs/crypto \
  $(HACL_HOME)/vale/specs/hardware \
  $(HACL_HOME)/vale/obj/external \
  $(HACL_HOME)/vale/obj/code/lib/util/x64/stdcalls \
  $(HACL_HOME)/vale/obj/code/lib/util/x64 \
  $(HACL_HOME)/vale/obj/code/lib/util \
  $(HACL_HOME)/vale/obj/code/arch/x64 \
  $(HACL_HOME)/vale/obj/code/crypto/aes/x64/stdcalls \
  $(HACL_HOME)/vale/obj/code/crypto/aes/x64 \
  $(HACL_HOME)/vale/obj/code/thirdPartyPorts/Intel/aes/x64 \
  $(HACL_HOME)/vale/obj/code/thirdPartyPorts/OpenSSL/poly1305/x64 \
  $(HACL_HOME)/vale/obj/code/thirdPartyPorts/OpenSSL/sha \
  $(HACL_HOME)/vale/obj/code/thirdPartyPorts/rfc7748/curve25519/x64 \
  $(HACL_HOME)/vale/obj/code/test \
  $(HACL_SPEC)

VALE_CACHE_DIR=$(VALE_OBJ_DIR)/cache_checked

# Still be cool with a not-built Vale in interactive mode
ifneq (,$(wildcard $(VALE_CACHE_DIR)))
  FSTAR_INCLUDES += $(VALE_CACHE_DIR)
endif

%.fst-in %.fsti-in:
	@echo $(addprefix --include ,$(FSTAR_INCLUDES))
