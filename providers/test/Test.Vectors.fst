module Test.Vectors

module LB = LowStar.Buffer

/// Hash algorithms

module HS = FStar.HyperStack
open FStar.HyperStack.ST

open EverCrypt.Hash

type hash_alg = EverCrypt.Hash.alg

noeq
type hash_vector = {
  (* The input [input] is repeated [repeat] times. *)
  hash_alg: hash_alg;
  input: C.String.t;
  output: LB.buffer UInt8.t;
  output_len: UInt32.t;
  repeat: UInt32.t;
}

let hash_vector_wf { output; output_len } =
  LB.len output = output_len

noextract inline_for_extraction
let (!*) = C.String.of_literal

// TODO: need to switch to the style found in Hacl.Impl.SHA2_256, wherein the
// list is a top-level constant opaque to z3, marked as inline for extraction,
// which we then use to derive properties about the length of v1, so that one
// can assert (LB.len v1 = v1_len). Right now we can't assert this so we can't
// have the well-formedness predicate on the elements of hash_vectors.

let v1: LB.buffer UInt8.t  = LB.gcmalloc_of_list HS.root [
  0xd4uy; 0x1duy; 0x8cuy; 0xd9uy; 0x8fuy; 0x00uy; 0xb2uy; 0x04uy; 0xe9uy; 0x80uy; 0x09uy; 0x98uy; 0xecuy; 0xf8uy; 0x42uy; 0x7euy;
]

let v1_len = 16ul

let v2: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x0cuy; 0xc1uy; 0x75uy; 0xb9uy; 0xc0uy; 0xf1uy; 0xb6uy; 0xa8uy; 0x31uy; 0xc3uy; 0x99uy; 0xe2uy; 0x69uy; 0x77uy; 0x26uy; 0x61uy;
]

let v2_len = 16ul

let v3: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x90uy; 0x01uy; 0x50uy; 0x98uy; 0x3cuy; 0xd2uy; 0x4fuy; 0xb0uy; 0xd6uy; 0x96uy; 0x3fuy; 0x7duy; 0x28uy; 0xe1uy; 0x7fuy; 0x72uy;
]

let v3_len = 16ul

let v4: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xf9uy; 0x6buy; 0x69uy; 0x7duy; 0x7cuy; 0xb7uy; 0x93uy; 0x8duy; 0x52uy; 0x5auy; 0x2fuy; 0x31uy; 0xaauy; 0xf1uy; 0x61uy; 0xd0uy;
]

let v4_len = 16ul

let v5: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xc3uy; 0xfcuy; 0xd3uy; 0xd7uy; 0x61uy; 0x92uy; 0xe4uy; 0x00uy; 0x7duy; 0xfbuy; 0x49uy; 0x6cuy; 0xcauy; 0x67uy; 0xe1uy; 0x3buy;
]

let v5_len = 16ul

let v6: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xd1uy; 0x74uy; 0xabuy; 0x98uy; 0xd2uy; 0x77uy; 0xd9uy; 0xf5uy; 0xa5uy; 0x61uy; 0x1cuy; 0x2cuy; 0x9fuy; 0x41uy; 0x9duy; 0x9fuy;
]

let v6_len = 16ul

let v7: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x57uy; 0xeduy; 0xf4uy; 0xa2uy; 0x2buy; 0xe3uy; 0xc9uy; 0x55uy; 0xacuy; 0x49uy; 0xdauy; 0x2euy; 0x21uy; 0x07uy; 0xb6uy; 0x7auy;
]

let v7_len = 16ul

let v8: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xa9uy; 0x99uy; 0x3euy; 0x36uy; 0x47uy; 0x06uy; 0x81uy; 0x6auy; 0xbauy; 0x3euy; 0x25uy; 0x71uy; 0x78uy; 0x50uy; 0xc2uy; 0x6cuy; 0x9cuy; 0xd0uy; 0xd8uy; 0x9duy;
]

let v8_len = 20ul

let v9: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x84uy; 0x98uy; 0x3euy; 0x44uy; 0x1cuy; 0x3buy; 0xd2uy; 0x6euy; 0xbauy; 0xaeuy; 0x4auy; 0xa1uy; 0xf9uy; 0x51uy; 0x29uy; 0xe5uy; 0xe5uy; 0x46uy; 0x70uy; 0xf1uy;
]

let v9_len = 20ul

let v10: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x34uy; 0xaauy; 0x97uy; 0x3cuy; 0xd4uy; 0xc4uy; 0xdauy; 0xa4uy; 0xf6uy; 0x1euy; 0xebuy; 0x2buy; 0xdbuy; 0xaduy; 0x27uy; 0x31uy; 0x65uy; 0x34uy; 0x01uy; 0x6fuy;
]

let v10_len = 21ul

let v11: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xdeuy; 0xa3uy; 0x56uy; 0xa2uy; 0xcduy; 0xdduy; 0x90uy; 0xc7uy; 0xa7uy; 0xecuy; 0xeduy; 0xc5uy; 0xebuy; 0xb5uy; 0x63uy; 0x93uy; 0x4fuy; 0x46uy; 0x04uy; 0x52uy;
]

let v11_len = 20ul

let v12: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xbauy; 0x78uy; 0x16uy; 0xbfuy; 0x8fuy; 0x01uy; 0xcfuy; 0xeauy; 0x41uy; 0x41uy; 0x40uy; 0xdeuy; 0x5duy; 0xaeuy; 0x22uy; 0x23uy; 0xb0uy; 0x03uy; 0x61uy; 0xa3uy; 0x96uy; 0x17uy; 0x7auy; 0x9cuy; 0xb4uy; 0x10uy; 0xffuy; 0x61uy; 0xf2uy; 0x00uy; 0x15uy; 0xaduy;
]

let v12_len = 32ul

let v13: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x24uy; 0x8duy; 0x6auy; 0x61uy; 0xd2uy; 0x06uy; 0x38uy; 0xb8uy; 0xe5uy; 0xc0uy; 0x26uy; 0x93uy; 0x0cuy; 0x3euy; 0x60uy; 0x39uy; 0xa3uy; 0x3cuy; 0xe4uy; 0x59uy; 0x64uy; 0xffuy; 0x21uy; 0x67uy; 0xf6uy; 0xecuy; 0xeduy; 0xd4uy; 0x19uy; 0xdbuy; 0x06uy; 0xc1uy;
]

let v13_len = 32ul

let v14: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xcduy; 0xc7uy; 0x6euy; 0x5cuy; 0x99uy; 0x14uy; 0xfbuy; 0x92uy; 0x81uy; 0xa1uy; 0xc7uy; 0xe2uy; 0x84uy; 0xd7uy; 0x3euy; 0x67uy; 0xf1uy; 0x80uy; 0x9auy; 0x48uy; 0xa4uy; 0x97uy; 0x20uy; 0x0euy; 0x04uy; 0x6duy; 0x39uy; 0xccuy; 0xc7uy; 0x11uy; 0x2cuy; 0xd0uy;
]

let v14_len = 32ul

let v15: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x59uy; 0x48uy; 0x47uy; 0x32uy; 0x84uy; 0x51uy; 0xbduy; 0xfauy; 0x85uy; 0x05uy; 0x62uy; 0x25uy; 0x46uy; 0x2cuy; 0xc1uy; 0xd8uy; 0x67uy; 0xd8uy; 0x77uy; 0xfbuy; 0x38uy; 0x8duy; 0xf0uy; 0xceuy; 0x35uy; 0xf2uy; 0x5auy; 0xb5uy; 0x56uy; 0x2buy; 0xfbuy; 0xb5uy;
]

let v15_len = 32ul

let v16: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x68uy; 0xaauy; 0x2euy; 0x2euy; 0xe5uy; 0xdfuy; 0xf9uy; 0x6euy; 0x33uy; 0x55uy; 0xe6uy; 0xc7uy; 0xeeuy; 0x37uy; 0x3euy; 0x3duy; 0x6auy; 0x4euy; 0x17uy; 0xf7uy; 0x5fuy; 0x95uy; 0x18uy; 0xd8uy; 0x43uy; 0x70uy; 0x9cuy; 0x0cuy; 0x9buy; 0xc3uy; 0xe3uy; 0xd4uy;
]

let v16_len = 32ul

let v17: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x17uy; 0x5euy; 0xe6uy; 0x9buy; 0x02uy; 0xbauy; 0x9buy; 0x58uy; 0xe2uy; 0xb0uy; 0xa5uy; 0xfduy; 0x13uy; 0x81uy; 0x9cuy; 0xeauy; 0x57uy; 0x3fuy; 0x39uy; 0x40uy; 0xa9uy; 0x4fuy; 0x82uy; 0x51uy; 0x28uy; 0xcfuy; 0x42uy; 0x09uy; 0xbeuy; 0xabuy; 0xb4uy; 0xe8uy;
]

let v17_len = 32ul

let v18: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xcbuy; 0x00uy; 0x75uy; 0x3fuy; 0x45uy; 0xa3uy; 0x5euy; 0x8buy; 0xb5uy; 0xa0uy; 0x3duy; 0x69uy; 0x9auy; 0xc6uy; 0x50uy; 0x07uy; 0x27uy; 0x2cuy; 0x32uy; 0xabuy; 0x0euy; 0xdeuy; 0xd1uy; 0x63uy; 0x1auy; 0x8buy; 0x60uy; 0x5auy; 0x43uy; 0xffuy; 0x5buy; 0xeduy; 0x80uy; 0x86uy; 0x07uy; 0x2buy; 0xa1uy; 0xe7uy; 0xccuy; 0x23uy; 0x58uy; 0xbauy; 0xecuy; 0xa1uy; 0x34uy; 0xc8uy; 0x25uy; 0xa7uy;
]

let v18_len = 48ul

let v19: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x09uy; 0x33uy; 0x0cuy; 0x33uy; 0xf7uy; 0x11uy; 0x47uy; 0xe8uy; 0x3duy; 0x19uy; 0x2fuy; 0xc7uy; 0x82uy; 0xcduy; 0x1buy; 0x47uy; 0x53uy; 0x11uy; 0x1buy; 0x17uy; 0x3buy; 0x3buy; 0x05uy; 0xd2uy; 0x2fuy; 0xa0uy; 0x80uy; 0x86uy; 0xe3uy; 0xb0uy; 0xf7uy; 0x12uy; 0xfcuy; 0xc7uy; 0xc7uy; 0x1auy; 0x55uy; 0x7euy; 0x2duy; 0xb9uy; 0x66uy; 0xc3uy; 0xe9uy; 0xfauy; 0x91uy; 0x74uy; 0x60uy; 0x39uy;
]

let v19_len = 48ul

let v20: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x9duy; 0x0euy; 0x18uy; 0x09uy; 0x71uy; 0x64uy; 0x74uy; 0xcbuy; 0x08uy; 0x6euy; 0x83uy; 0x4euy; 0x31uy; 0x0auy; 0x4auy; 0x1cuy; 0xeduy; 0x14uy; 0x9euy; 0x9cuy; 0x00uy; 0xf2uy; 0x48uy; 0x52uy; 0x79uy; 0x72uy; 0xceuy; 0xc5uy; 0x70uy; 0x4cuy; 0x2auy; 0x5buy; 0x07uy; 0xb8uy; 0xb3uy; 0xdcuy; 0x38uy; 0xecuy; 0xc4uy; 0xebuy; 0xaeuy; 0x97uy; 0xdduy; 0xd8uy; 0x7fuy; 0x3duy; 0x89uy; 0x85uy;
]

let v20_len = 48ul

let v21: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x2fuy; 0xc6uy; 0x4auy; 0x4fuy; 0x50uy; 0x0duy; 0xdbuy; 0x68uy; 0x28uy; 0xf6uy; 0xa3uy; 0x43uy; 0x0buy; 0x8duy; 0xd7uy; 0x2auy; 0x36uy; 0x8euy; 0xb7uy; 0xf3uy; 0xa8uy; 0x32uy; 0x2auy; 0x70uy; 0xbcuy; 0x84uy; 0x27uy; 0x5buy; 0x9cuy; 0x0buy; 0x3auy; 0xb0uy; 0x0duy; 0x27uy; 0xa5uy; 0xccuy; 0x3cuy; 0x2duy; 0x22uy; 0x4auy; 0xa6uy; 0xb6uy; 0x1auy; 0x0duy; 0x79uy; 0xfbuy; 0x45uy; 0x96uy;
]

let v21_len = 48ul

let v22: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xdduy; 0xafuy; 0x35uy; 0xa1uy; 0x93uy; 0x61uy; 0x7auy; 0xbauy; 0xccuy; 0x41uy; 0x73uy; 0x49uy; 0xaeuy; 0x20uy; 0x41uy; 0x31uy; 0x12uy; 0xe6uy; 0xfauy; 0x4euy; 0x89uy; 0xa9uy; 0x7euy; 0xa2uy; 0x0auy; 0x9euy; 0xeeuy; 0xe6uy; 0x4buy; 0x55uy; 0xd3uy; 0x9auy; 0x21uy; 0x92uy; 0x99uy; 0x2auy; 0x27uy; 0x4fuy; 0xc1uy; 0xa8uy; 0x36uy; 0xbauy; 0x3cuy; 0x23uy; 0xa3uy; 0xfeuy; 0xebuy; 0xbduy; 0x45uy; 0x4duy; 0x44uy; 0x23uy; 0x64uy; 0x3cuy; 0xe8uy; 0x0euy; 0x2auy; 0x9auy; 0xc9uy; 0x4fuy; 0xa5uy; 0x4cuy; 0xa4uy; 0x9fuy;
]

let v22_len = 64ul

let v23: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x8euy; 0x95uy; 0x9buy; 0x75uy; 0xdauy; 0xe3uy; 0x13uy; 0xdauy; 0x8cuy; 0xf4uy; 0xf7uy; 0x28uy; 0x14uy; 0xfcuy; 0x14uy; 0x3fuy; 0x8fuy; 0x77uy; 0x79uy; 0xc6uy; 0xebuy; 0x9fuy; 0x7fuy; 0xa1uy; 0x72uy; 0x99uy; 0xaeuy; 0xaduy; 0xb6uy; 0x88uy; 0x90uy; 0x18uy; 0x50uy; 0x1duy; 0x28uy; 0x9euy; 0x49uy; 0x00uy; 0xf7uy; 0xe4uy; 0x33uy; 0x1buy; 0x99uy; 0xdeuy; 0xc4uy; 0xb5uy; 0x43uy; 0x3auy; 0xc7uy; 0xd3uy; 0x29uy; 0xeeuy; 0xb6uy; 0xdduy; 0x26uy; 0x54uy; 0x5euy; 0x96uy; 0xe5uy; 0x5buy; 0x87uy; 0x4buy; 0xe9uy; 0x09uy;
]

let v23_len = 64ul

let v24: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xe7uy; 0x18uy; 0x48uy; 0x3duy; 0x0cuy; 0xe7uy; 0x69uy; 0x64uy; 0x4euy; 0x2euy; 0x42uy; 0xc7uy; 0xbcuy; 0x15uy; 0xb4uy; 0x63uy; 0x8euy; 0x1fuy; 0x98uy; 0xb1uy; 0x3buy; 0x20uy; 0x44uy; 0x28uy; 0x56uy; 0x32uy; 0xa8uy; 0x03uy; 0xafuy; 0xa9uy; 0x73uy; 0xebuy; 0xdeuy; 0x0fuy; 0xf2uy; 0x44uy; 0x87uy; 0x7euy; 0xa6uy; 0x0auy; 0x4cuy; 0xb0uy; 0x43uy; 0x2cuy; 0xe5uy; 0x77uy; 0xc3uy; 0x1buy; 0xebuy; 0x00uy; 0x9cuy; 0x5cuy; 0x2cuy; 0x49uy; 0xaauy; 0x2euy; 0x4euy; 0xaduy; 0xb2uy; 0x17uy; 0xaduy; 0x8cuy; 0xc0uy; 0x9buy;
]

let v24_len = 64ul

let v25: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x89uy; 0xd0uy; 0x5buy; 0xa6uy; 0x32uy; 0xc6uy; 0x99uy; 0xc3uy; 0x12uy; 0x31uy; 0xdeuy; 0xd4uy; 0xffuy; 0xc1uy; 0x27uy; 0xd5uy; 0xa8uy; 0x94uy; 0xdauy; 0xd4uy; 0x12uy; 0xc0uy; 0xe0uy; 0x24uy; 0xdbuy; 0x87uy; 0x2duy; 0x1auy; 0xbduy; 0x2buy; 0xa8uy; 0x14uy; 0x1auy; 0x0fuy; 0x85uy; 0x07uy; 0x2auy; 0x9buy; 0xe1uy; 0xe2uy; 0xaauy; 0x04uy; 0xcfuy; 0x33uy; 0xc7uy; 0x65uy; 0xcbuy; 0x51uy; 0x08uy; 0x13uy; 0xa3uy; 0x9cuy; 0xd5uy; 0xa8uy; 0x4cuy; 0x4auy; 0xcauy; 0xa6uy; 0x4duy; 0x3fuy; 0x3fuy; 0xb7uy; 0xbauy; 0xe9uy;
]

let v25_len = 64ul

let v26: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x80uy; 0x81uy; 0x82uy; 0x83uy; 0x84uy; 0x85uy; 0x86uy; 0x87uy; 0x88uy; 0x89uy; 0x8auy; 0x8buy; 0x8cuy; 0x8duy; 0x8euy; 0x8fuy; 0x90uy; 0x91uy; 0x92uy; 0x93uy; 0x94uy; 0x95uy; 0x96uy; 0x97uy; 0x98uy; 0x99uy; 0x9auy; 0x9buy; 0x9cuy; 0x9duy; 0x9euy; 0x9fuy;
]

let v26_len = 32ul

let v27: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x07uy; 0x00uy; 0x00uy; 0x00uy; 0x40uy; 0x41uy; 0x42uy; 0x43uy; 0x44uy; 0x45uy; 0x46uy; 0x47uy;
]

let v27_len = 12ul

let v28: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x50uy; 0x51uy; 0x52uy; 0x53uy; 0xc0uy; 0xc1uy; 0xc2uy; 0xc3uy; 0xc4uy; 0xc5uy; 0xc6uy; 0xc7uy;
]

let v28_len = 12ul

let v29: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x1auy; 0xe1uy; 0x0buy; 0x59uy; 0x4fuy; 0x09uy; 0xe2uy; 0x6auy; 0x7euy; 0x90uy; 0x2euy; 0xcbuy; 0xd0uy; 0x60uy; 0x06uy; 0x91uy;
]

let v29_len = 16ul

let v30: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x4cuy; 0x61uy; 0x64uy; 0x69uy; 0x65uy; 0x73uy; 0x20uy; 0x61uy; 0x6euy; 0x64uy; 0x20uy; 0x47uy; 0x65uy; 0x6euy; 0x74uy; 0x6cuy; 0x65uy; 0x6duy; 0x65uy; 0x6euy; 0x20uy; 0x6fuy; 0x66uy; 0x20uy; 0x74uy; 0x68uy; 0x65uy; 0x20uy; 0x63uy; 0x6cuy; 0x61uy; 0x73uy; 0x73uy; 0x20uy; 0x6fuy; 0x66uy; 0x20uy; 0x27uy; 0x39uy; 0x39uy; 0x3auy; 0x20uy; 0x49uy; 0x66uy; 0x20uy; 0x49uy; 0x20uy; 0x63uy; 0x6fuy; 0x75uy; 0x6cuy; 0x64uy; 0x20uy; 0x6fuy; 0x66uy; 0x66uy; 0x65uy; 0x72uy; 0x20uy; 0x79uy; 0x6fuy; 0x75uy; 0x20uy; 0x6fuy; 0x6euy; 0x6cuy; 0x79uy; 0x20uy; 0x6fuy; 0x6euy; 0x65uy; 0x20uy; 0x74uy; 0x69uy; 0x70uy; 0x20uy; 0x66uy; 0x6fuy; 0x72uy; 0x20uy; 0x74uy; 0x68uy; 0x65uy; 0x20uy; 0x66uy; 0x75uy; 0x74uy; 0x75uy; 0x72uy; 0x65uy; 0x2cuy; 0x20uy; 0x73uy; 0x75uy; 0x6euy; 0x73uy; 0x63uy; 0x72uy; 0x65uy; 0x65uy; 0x6euy; 0x20uy; 0x77uy; 0x6fuy; 0x75uy; 0x6cuy; 0x64uy; 0x20uy; 0x62uy; 0x65uy; 0x20uy; 0x69uy; 0x74uy; 0x2euy;
]

let v30_len = 114ul

let v31: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xd3uy; 0x1auy; 0x8duy; 0x34uy; 0x64uy; 0x8euy; 0x60uy; 0xdbuy; 0x7buy; 0x86uy; 0xafuy; 0xbcuy; 0x53uy; 0xefuy; 0x7euy; 0xc2uy; 0xa4uy; 0xaduy; 0xeduy; 0x51uy; 0x29uy; 0x6euy; 0x08uy; 0xfeuy; 0xa9uy; 0xe2uy; 0xb5uy; 0xa7uy; 0x36uy; 0xeeuy; 0x62uy; 0xd6uy; 0x3duy; 0xbeuy; 0xa4uy; 0x5euy; 0x8cuy; 0xa9uy; 0x67uy; 0x12uy; 0x82uy; 0xfauy; 0xfbuy; 0x69uy; 0xdauy; 0x92uy; 0x72uy; 0x8buy; 0x1auy; 0x71uy; 0xdeuy; 0x0auy; 0x9euy; 0x06uy; 0x0buy; 0x29uy; 0x05uy; 0xd6uy; 0xa5uy; 0xb6uy; 0x7euy; 0xcduy; 0x3buy; 0x36uy; 0x92uy; 0xdduy; 0xbduy; 0x7fuy; 0x2duy; 0x77uy; 0x8buy; 0x8cuy; 0x98uy; 0x03uy; 0xaeuy; 0xe3uy; 0x28uy; 0x09uy; 0x1buy; 0x58uy; 0xfauy; 0xb3uy; 0x24uy; 0xe4uy; 0xfauy; 0xd6uy; 0x75uy; 0x94uy; 0x55uy; 0x85uy; 0x80uy; 0x8buy; 0x48uy; 0x31uy; 0xd7uy; 0xbcuy; 0x3fuy; 0xf4uy; 0xdeuy; 0xf0uy; 0x8euy; 0x4buy; 0x7auy; 0x9duy; 0xe5uy; 0x76uy; 0xd2uy; 0x65uy; 0x86uy; 0xceuy; 0xc6uy; 0x4buy; 0x61uy; 0x16uy;
]

let v31_len = 114ul

let v32: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x1cuy; 0x92uy; 0x40uy; 0xa5uy; 0xebuy; 0x55uy; 0xd3uy; 0x8auy; 0xf3uy; 0x33uy; 0x88uy; 0x86uy; 0x04uy; 0xf6uy; 0xb5uy; 0xf0uy; 0x47uy; 0x39uy; 0x17uy; 0xc1uy; 0x40uy; 0x2buy; 0x80uy; 0x09uy; 0x9duy; 0xcauy; 0x5cuy; 0xbcuy; 0x20uy; 0x70uy; 0x75uy; 0xc0uy;
]

let v32_len = 32ul

let v33: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x01uy; 0x02uy; 0x03uy; 0x04uy; 0x05uy; 0x06uy; 0x07uy; 0x08uy;
]

let v33_len = 12ul

let v34: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xf3uy; 0x33uy; 0x88uy; 0x86uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x4euy; 0x91uy;
]

let v34_len = 12ul

let v35: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xeeuy; 0xaduy; 0x9duy; 0x67uy; 0x89uy; 0x0cuy; 0xbbuy; 0x22uy; 0x39uy; 0x23uy; 0x36uy; 0xfeuy; 0xa1uy; 0x85uy; 0x1fuy; 0x38uy;
]

let v35_len = 16ul

let v36: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x49uy; 0x6euy; 0x74uy; 0x65uy; 0x72uy; 0x6euy; 0x65uy; 0x74uy; 0x2duy; 0x44uy; 0x72uy; 0x61uy; 0x66uy; 0x74uy; 0x73uy; 0x20uy; 0x61uy; 0x72uy; 0x65uy; 0x20uy; 0x64uy; 0x72uy; 0x61uy; 0x66uy; 0x74uy; 0x20uy; 0x64uy; 0x6fuy; 0x63uy; 0x75uy; 0x6duy; 0x65uy; 0x6euy; 0x74uy; 0x73uy; 0x20uy; 0x76uy; 0x61uy; 0x6cuy; 0x69uy; 0x64uy; 0x20uy; 0x66uy; 0x6fuy; 0x72uy; 0x20uy; 0x61uy; 0x20uy; 0x6duy; 0x61uy; 0x78uy; 0x69uy; 0x6duy; 0x75uy; 0x6duy; 0x20uy; 0x6fuy; 0x66uy; 0x20uy; 0x73uy; 0x69uy; 0x78uy; 0x20uy; 0x6duy; 0x6fuy; 0x6euy; 0x74uy; 0x68uy; 0x73uy; 0x20uy; 0x61uy; 0x6euy; 0x64uy; 0x20uy; 0x6duy; 0x61uy; 0x79uy; 0x20uy; 0x62uy; 0x65uy; 0x20uy; 0x75uy; 0x70uy; 0x64uy; 0x61uy; 0x74uy; 0x65uy; 0x64uy; 0x2cuy; 0x20uy; 0x72uy; 0x65uy; 0x70uy; 0x6cuy; 0x61uy; 0x63uy; 0x65uy; 0x64uy; 0x2cuy; 0x20uy; 0x6fuy; 0x72uy; 0x20uy; 0x6fuy; 0x62uy; 0x73uy; 0x6fuy; 0x6cuy; 0x65uy; 0x74uy; 0x65uy; 0x64uy; 0x20uy; 0x62uy; 0x79uy; 0x20uy; 0x6fuy; 0x74uy; 0x68uy; 0x65uy; 0x72uy; 0x20uy; 0x64uy; 0x6fuy; 0x63uy; 0x75uy; 0x6duy; 0x65uy; 0x6euy; 0x74uy; 0x73uy; 0x20uy; 0x61uy; 0x74uy; 0x20uy; 0x61uy; 0x6euy; 0x79uy; 0x20uy; 0x74uy; 0x69uy; 0x6duy; 0x65uy; 0x2euy; 0x20uy; 0x49uy; 0x74uy; 0x20uy; 0x69uy; 0x73uy; 0x20uy; 0x69uy; 0x6euy; 0x61uy; 0x70uy; 0x70uy; 0x72uy; 0x6fuy; 0x70uy; 0x72uy; 0x69uy; 0x61uy; 0x74uy; 0x65uy; 0x20uy; 0x74uy; 0x6fuy; 0x20uy; 0x75uy; 0x73uy; 0x65uy; 0x20uy; 0x49uy; 0x6euy; 0x74uy; 0x65uy; 0x72uy; 0x6euy; 0x65uy; 0x74uy; 0x2duy; 0x44uy; 0x72uy; 0x61uy; 0x66uy; 0x74uy; 0x73uy; 0x20uy; 0x61uy; 0x73uy; 0x20uy; 0x72uy; 0x65uy; 0x66uy; 0x65uy; 0x72uy; 0x65uy; 0x6euy; 0x63uy; 0x65uy; 0x20uy; 0x6duy; 0x61uy; 0x74uy; 0x65uy; 0x72uy; 0x69uy; 0x61uy; 0x6cuy; 0x20uy; 0x6fuy; 0x72uy; 0x20uy; 0x74uy; 0x6fuy; 0x20uy; 0x63uy; 0x69uy; 0x74uy; 0x65uy; 0x20uy; 0x74uy; 0x68uy; 0x65uy; 0x6duy; 0x20uy; 0x6fuy; 0x74uy; 0x68uy; 0x65uy; 0x72uy; 0x20uy; 0x74uy; 0x68uy; 0x61uy; 0x6euy; 0x20uy; 0x61uy; 0x73uy; 0x20uy; 0x2fuy; 0xe2uy; 0x80uy; 0x9cuy; 0x77uy; 0x6fuy; 0x72uy; 0x6buy; 0x20uy; 0x69uy; 0x6euy; 0x20uy; 0x70uy; 0x72uy; 0x6fuy; 0x67uy; 0x72uy; 0x65uy; 0x73uy; 0x73uy; 0x2euy; 0x2fuy; 0xe2uy; 0x80uy; 0x9duy;
]

let v36_len = 265ul

let v37: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x64uy; 0xa0uy; 0x86uy; 0x15uy; 0x75uy; 0x86uy; 0x1auy; 0xf4uy; 0x60uy; 0xf0uy; 0x62uy; 0xc7uy; 0x9buy; 0xe6uy; 0x43uy; 0xbduy; 0x5euy; 0x80uy; 0x5cuy; 0xfduy; 0x34uy; 0x5cuy; 0xf3uy; 0x89uy; 0xf1uy; 0x08uy; 0x67uy; 0x0auy; 0xc7uy; 0x6cuy; 0x8cuy; 0xb2uy; 0x4cuy; 0x6cuy; 0xfcuy; 0x18uy; 0x75uy; 0x5duy; 0x43uy; 0xeeuy; 0xa0uy; 0x9euy; 0xe9uy; 0x4euy; 0x38uy; 0x2duy; 0x26uy; 0xb0uy; 0xbduy; 0xb7uy; 0xb7uy; 0x3cuy; 0x32uy; 0x1buy; 0x01uy; 0x00uy; 0xd4uy; 0xf0uy; 0x3buy; 0x7fuy; 0x35uy; 0x58uy; 0x94uy; 0xcfuy; 0x33uy; 0x2fuy; 0x83uy; 0x0euy; 0x71uy; 0x0buy; 0x97uy; 0xceuy; 0x98uy; 0xc8uy; 0xa8uy; 0x4auy; 0xbduy; 0x0buy; 0x94uy; 0x81uy; 0x14uy; 0xaduy; 0x17uy; 0x6euy; 0x00uy; 0x8duy; 0x33uy; 0xbduy; 0x60uy; 0xf9uy; 0x82uy; 0xb1uy; 0xffuy; 0x37uy; 0xc8uy; 0x55uy; 0x97uy; 0x97uy; 0xa0uy; 0x6euy; 0xf4uy; 0xf0uy; 0xefuy; 0x61uy; 0xc1uy; 0x86uy; 0x32uy; 0x4euy; 0x2buy; 0x35uy; 0x06uy; 0x38uy; 0x36uy; 0x06uy; 0x90uy; 0x7buy; 0x6auy; 0x7cuy; 0x02uy; 0xb0uy; 0xf9uy; 0xf6uy; 0x15uy; 0x7buy; 0x53uy; 0xc8uy; 0x67uy; 0xe4uy; 0xb9uy; 0x16uy; 0x6cuy; 0x76uy; 0x7buy; 0x80uy; 0x4duy; 0x46uy; 0xa5uy; 0x9buy; 0x52uy; 0x16uy; 0xcduy; 0xe7uy; 0xa4uy; 0xe9uy; 0x90uy; 0x40uy; 0xc5uy; 0xa4uy; 0x04uy; 0x33uy; 0x22uy; 0x5euy; 0xe2uy; 0x82uy; 0xa1uy; 0xb0uy; 0xa0uy; 0x6cuy; 0x52uy; 0x3euy; 0xafuy; 0x45uy; 0x34uy; 0xd7uy; 0xf8uy; 0x3fuy; 0xa1uy; 0x15uy; 0x5buy; 0x00uy; 0x47uy; 0x71uy; 0x8cuy; 0xbcuy; 0x54uy; 0x6auy; 0x0duy; 0x07uy; 0x2buy; 0x04uy; 0xb3uy; 0x56uy; 0x4euy; 0xeauy; 0x1buy; 0x42uy; 0x22uy; 0x73uy; 0xf5uy; 0x48uy; 0x27uy; 0x1auy; 0x0buy; 0xb2uy; 0x31uy; 0x60uy; 0x53uy; 0xfauy; 0x76uy; 0x99uy; 0x19uy; 0x55uy; 0xebuy; 0xd6uy; 0x31uy; 0x59uy; 0x43uy; 0x4euy; 0xceuy; 0xbbuy; 0x4euy; 0x46uy; 0x6duy; 0xaeuy; 0x5auy; 0x10uy; 0x73uy; 0xa6uy; 0x72uy; 0x76uy; 0x27uy; 0x09uy; 0x7auy; 0x10uy; 0x49uy; 0xe6uy; 0x17uy; 0xd9uy; 0x1duy; 0x36uy; 0x10uy; 0x94uy; 0xfauy; 0x68uy; 0xf0uy; 0xffuy; 0x77uy; 0x98uy; 0x71uy; 0x30uy; 0x30uy; 0x5buy; 0xeauy; 0xbauy; 0x2euy; 0xdauy; 0x04uy; 0xdfuy; 0x99uy; 0x7buy; 0x71uy; 0x4duy; 0x6cuy; 0x6fuy; 0x2cuy; 0x29uy; 0xa6uy; 0xaduy; 0x5cuy; 0xb4uy; 0x02uy; 0x2buy; 0x02uy; 0x70uy; 0x9buy;
]

let v37_len = 265ul

let v38: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v38_len = 16ul

let v39: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v39_len = 12ul

let v40: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x58uy; 0xe2uy; 0xfcuy; 0xceuy; 0xfauy; 0x7euy; 0x30uy; 0x61uy; 0x36uy; 0x7fuy; 0x1duy; 0x57uy; 0xa4uy; 0xe7uy; 0x45uy; 0x5auy;
]

let v40_len = 16ul

let v41: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v41_len = 16ul

let v42: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v42_len = 12ul

let v43: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xabuy; 0x6euy; 0x47uy; 0xd4uy; 0x2cuy; 0xecuy; 0x13uy; 0xbduy; 0xf5uy; 0x3auy; 0x67uy; 0xb2uy; 0x12uy; 0x57uy; 0xbduy; 0xdfuy;
]

let v43_len = 16ul

let v44: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v44_len = 16ul

let v45: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x03uy; 0x88uy; 0xdauy; 0xceuy; 0x60uy; 0xb6uy; 0xa3uy; 0x92uy; 0xf3uy; 0x28uy; 0xc2uy; 0xb9uy; 0x71uy; 0xb2uy; 0xfeuy; 0x78uy;
]

let v45_len = 16ul

let v46: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xfeuy; 0xffuy; 0xe9uy; 0x92uy; 0x86uy; 0x65uy; 0x73uy; 0x1cuy; 0x6duy; 0x6auy; 0x8fuy; 0x94uy; 0x67uy; 0x30uy; 0x83uy; 0x08uy;
]

let v46_len = 16ul

let v47: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xcauy; 0xfeuy; 0xbauy; 0xbeuy; 0xfauy; 0xceuy; 0xdbuy; 0xaduy; 0xdeuy; 0xcauy; 0xf8uy; 0x88uy;
]

let v47_len = 12ul

let v48: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x4duy; 0x5cuy; 0x2auy; 0xf3uy; 0x27uy; 0xcduy; 0x64uy; 0xa6uy; 0x2cuy; 0xf3uy; 0x5auy; 0xbduy; 0x2buy; 0xa6uy; 0xfauy; 0xb4uy;
]

let v48_len = 16ul

let v49: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xd9uy; 0x31uy; 0x32uy; 0x25uy; 0xf8uy; 0x84uy; 0x06uy; 0xe5uy; 0xa5uy; 0x59uy; 0x09uy; 0xc5uy; 0xafuy; 0xf5uy; 0x26uy; 0x9auy; 0x86uy; 0xa7uy; 0xa9uy; 0x53uy; 0x15uy; 0x34uy; 0xf7uy; 0xdauy; 0x2euy; 0x4cuy; 0x30uy; 0x3duy; 0x8auy; 0x31uy; 0x8auy; 0x72uy; 0x1cuy; 0x3cuy; 0x0cuy; 0x95uy; 0x95uy; 0x68uy; 0x09uy; 0x53uy; 0x2fuy; 0xcfuy; 0x0euy; 0x24uy; 0x49uy; 0xa6uy; 0xb5uy; 0x25uy; 0xb1uy; 0x6auy; 0xeduy; 0xf5uy; 0xaauy; 0x0duy; 0xe6uy; 0x57uy; 0xbauy; 0x63uy; 0x7buy; 0x39uy; 0x1auy; 0xafuy; 0xd2uy; 0x55uy;
]

let v49_len = 64ul

let v50: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x42uy; 0x83uy; 0x1euy; 0xc2uy; 0x21uy; 0x77uy; 0x74uy; 0x24uy; 0x4buy; 0x72uy; 0x21uy; 0xb7uy; 0x84uy; 0xd0uy; 0xd4uy; 0x9cuy; 0xe3uy; 0xaauy; 0x21uy; 0x2fuy; 0x2cuy; 0x02uy; 0xa4uy; 0xe0uy; 0x35uy; 0xc1uy; 0x7euy; 0x23uy; 0x29uy; 0xacuy; 0xa1uy; 0x2euy; 0x21uy; 0xd5uy; 0x14uy; 0xb2uy; 0x54uy; 0x66uy; 0x93uy; 0x1cuy; 0x7duy; 0x8fuy; 0x6auy; 0x5auy; 0xacuy; 0x84uy; 0xaauy; 0x05uy; 0x1buy; 0xa3uy; 0x0buy; 0x39uy; 0x6auy; 0x0auy; 0xacuy; 0x97uy; 0x3duy; 0x58uy; 0xe0uy; 0x91uy; 0x47uy; 0x3fuy; 0x59uy; 0x85uy;
]

let v50_len = 64ul

let v51: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xfeuy; 0xffuy; 0xe9uy; 0x92uy; 0x86uy; 0x65uy; 0x73uy; 0x1cuy; 0x6duy; 0x6auy; 0x8fuy; 0x94uy; 0x67uy; 0x30uy; 0x83uy; 0x08uy;
]

let v51_len = 16ul

let v52: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xcauy; 0xfeuy; 0xbauy; 0xbeuy; 0xfauy; 0xceuy; 0xdbuy; 0xaduy; 0xdeuy; 0xcauy; 0xf8uy; 0x88uy;
]

let v52_len = 12ul

let v53: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xfeuy; 0xeduy; 0xfauy; 0xceuy; 0xdeuy; 0xaduy; 0xbeuy; 0xefuy; 0xfeuy; 0xeduy; 0xfauy; 0xceuy; 0xdeuy; 0xaduy; 0xbeuy; 0xefuy; 0xabuy; 0xaduy; 0xdauy; 0xd2uy;
]

let v53_len = 20ul

let v54: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x5buy; 0xc9uy; 0x4fuy; 0xbcuy; 0x32uy; 0x21uy; 0xa5uy; 0xdbuy; 0x94uy; 0xfauy; 0xe9uy; 0x5auy; 0xe7uy; 0x12uy; 0x1auy; 0x47uy;
]

let v54_len = 16ul

let v55: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xd9uy; 0x31uy; 0x32uy; 0x25uy; 0xf8uy; 0x84uy; 0x06uy; 0xe5uy; 0xa5uy; 0x59uy; 0x09uy; 0xc5uy; 0xafuy; 0xf5uy; 0x26uy; 0x9auy; 0x86uy; 0xa7uy; 0xa9uy; 0x53uy; 0x15uy; 0x34uy; 0xf7uy; 0xdauy; 0x2euy; 0x4cuy; 0x30uy; 0x3duy; 0x8auy; 0x31uy; 0x8auy; 0x72uy; 0x1cuy; 0x3cuy; 0x0cuy; 0x95uy; 0x95uy; 0x68uy; 0x09uy; 0x53uy; 0x2fuy; 0xcfuy; 0x0euy; 0x24uy; 0x49uy; 0xa6uy; 0xb5uy; 0x25uy; 0xb1uy; 0x6auy; 0xeduy; 0xf5uy; 0xaauy; 0x0duy; 0xe6uy; 0x57uy; 0xbauy; 0x63uy; 0x7buy; 0x39uy;
]

let v55_len = 60ul

let v56: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x42uy; 0x83uy; 0x1euy; 0xc2uy; 0x21uy; 0x77uy; 0x74uy; 0x24uy; 0x4buy; 0x72uy; 0x21uy; 0xb7uy; 0x84uy; 0xd0uy; 0xd4uy; 0x9cuy; 0xe3uy; 0xaauy; 0x21uy; 0x2fuy; 0x2cuy; 0x02uy; 0xa4uy; 0xe0uy; 0x35uy; 0xc1uy; 0x7euy; 0x23uy; 0x29uy; 0xacuy; 0xa1uy; 0x2euy; 0x21uy; 0xd5uy; 0x14uy; 0xb2uy; 0x54uy; 0x66uy; 0x93uy; 0x1cuy; 0x7duy; 0x8fuy; 0x6auy; 0x5auy; 0xacuy; 0x84uy; 0xaauy; 0x05uy; 0x1buy; 0xa3uy; 0x0buy; 0x39uy; 0x6auy; 0x0auy; 0xacuy; 0x97uy; 0x3duy; 0x58uy; 0xe0uy; 0x91uy;
]

let v56_len = 60ul

let v57: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v57_len = 32ul

let v58: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v58_len = 12ul

let v59: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x53uy; 0x0fuy; 0x8auy; 0xfbuy; 0xc7uy; 0x45uy; 0x36uy; 0xb9uy; 0xa9uy; 0x63uy; 0xb4uy; 0xf1uy; 0xc4uy; 0xcbuy; 0x73uy; 0x8buy;
]

let v59_len = 16ul

let v60: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xfeuy; 0xffuy; 0xe9uy; 0x92uy; 0x86uy; 0x65uy; 0x73uy; 0x1cuy; 0x6duy; 0x6auy; 0x8fuy; 0x94uy; 0x67uy; 0x30uy; 0x83uy; 0x08uy; 0xfeuy; 0xffuy; 0xe9uy; 0x92uy; 0x86uy; 0x65uy; 0x73uy; 0x1cuy; 0x6duy; 0x6auy; 0x8fuy; 0x94uy; 0x67uy; 0x30uy; 0x83uy; 0x08uy;
]

let v60_len = 32ul

let v61: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xcauy; 0xfeuy; 0xbauy; 0xbeuy; 0xfauy; 0xceuy; 0xdbuy; 0xaduy; 0xdeuy; 0xcauy; 0xf8uy; 0x88uy;
]

let v61_len = 12ul

let v62: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xb0uy; 0x94uy; 0xdauy; 0xc5uy; 0xd9uy; 0x34uy; 0x71uy; 0xbduy; 0xecuy; 0x1auy; 0x50uy; 0x22uy; 0x70uy; 0xe3uy; 0xccuy; 0x6cuy;
]

let v62_len = 16ul

let v63: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xd9uy; 0x31uy; 0x32uy; 0x25uy; 0xf8uy; 0x84uy; 0x06uy; 0xe5uy; 0xa5uy; 0x59uy; 0x09uy; 0xc5uy; 0xafuy; 0xf5uy; 0x26uy; 0x9auy; 0x86uy; 0xa7uy; 0xa9uy; 0x53uy; 0x15uy; 0x34uy; 0xf7uy; 0xdauy; 0x2euy; 0x4cuy; 0x30uy; 0x3duy; 0x8auy; 0x31uy; 0x8auy; 0x72uy; 0x1cuy; 0x3cuy; 0x0cuy; 0x95uy; 0x95uy; 0x68uy; 0x09uy; 0x53uy; 0x2fuy; 0xcfuy; 0x0euy; 0x24uy; 0x49uy; 0xa6uy; 0xb5uy; 0x25uy; 0xb1uy; 0x6auy; 0xeduy; 0xf5uy; 0xaauy; 0x0duy; 0xe6uy; 0x57uy; 0xbauy; 0x63uy; 0x7buy; 0x39uy; 0x1auy; 0xafuy; 0xd2uy; 0x55uy;
]

let v63_len = 64ul

let v64: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x52uy; 0x2duy; 0xc1uy; 0xf0uy; 0x99uy; 0x56uy; 0x7duy; 0x07uy; 0xf4uy; 0x7fuy; 0x37uy; 0xa3uy; 0x2auy; 0x84uy; 0x42uy; 0x7duy; 0x64uy; 0x3auy; 0x8cuy; 0xdcuy; 0xbfuy; 0xe5uy; 0xc0uy; 0xc9uy; 0x75uy; 0x98uy; 0xa2uy; 0xbduy; 0x25uy; 0x55uy; 0xd1uy; 0xaauy; 0x8cuy; 0xb0uy; 0x8euy; 0x48uy; 0x59uy; 0x0duy; 0xbbuy; 0x3duy; 0xa7uy; 0xb0uy; 0x8buy; 0x10uy; 0x56uy; 0x82uy; 0x88uy; 0x38uy; 0xc5uy; 0xf6uy; 0x1euy; 0x63uy; 0x93uy; 0xbauy; 0x7auy; 0x0auy; 0xbcuy; 0xc9uy; 0xf6uy; 0x62uy; 0x89uy; 0x80uy; 0x15uy; 0xaduy;
]

let v64_len = 64ul

let v65: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xfeuy; 0xffuy; 0xe9uy; 0x92uy; 0x86uy; 0x65uy; 0x73uy; 0x1cuy; 0x6duy; 0x6auy; 0x8fuy; 0x94uy; 0x67uy; 0x30uy; 0x83uy; 0x08uy; 0xfeuy; 0xffuy; 0xe9uy; 0x92uy; 0x86uy; 0x65uy; 0x73uy; 0x1cuy; 0x6duy; 0x6auy; 0x8fuy; 0x94uy; 0x67uy; 0x30uy; 0x83uy; 0x08uy;
]

let v65_len = 32ul

let v66: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xcauy; 0xfeuy; 0xbauy; 0xbeuy; 0xfauy; 0xceuy; 0xdbuy; 0xaduy; 0xdeuy; 0xcauy; 0xf8uy; 0x88uy;
]

let v66_len = 12ul

let v67: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xb0uy; 0x94uy; 0xdauy; 0xc5uy; 0xd9uy; 0x34uy; 0x71uy; 0xbduy; 0xecuy; 0x1auy; 0x50uy; 0x22uy; 0x70uy; 0xe3uy; 0xccuy; 0x6cuy;
]

let v67_len = 16ul

let v68: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xd9uy; 0x31uy; 0x32uy; 0x25uy; 0xf8uy; 0x84uy; 0x06uy; 0xe5uy; 0xa5uy; 0x59uy; 0x09uy; 0xc5uy; 0xafuy; 0xf5uy; 0x26uy; 0x9auy; 0x86uy; 0xa7uy; 0xa9uy; 0x53uy; 0x15uy; 0x34uy; 0xf7uy; 0xdauy; 0x2euy; 0x4cuy; 0x30uy; 0x3duy; 0x8auy; 0x31uy; 0x8auy; 0x72uy; 0x1cuy; 0x3cuy; 0x0cuy; 0x95uy; 0x95uy; 0x68uy; 0x09uy; 0x53uy; 0x2fuy; 0xcfuy; 0x0euy; 0x24uy; 0x49uy; 0xa6uy; 0xb5uy; 0x25uy; 0xb1uy; 0x6auy; 0xeduy; 0xf5uy; 0xaauy; 0x0duy; 0xe6uy; 0x57uy; 0xbauy; 0x63uy; 0x7buy; 0x39uy; 0x1auy; 0xafuy; 0xd2uy; 0x55uy;
]

let v68_len = 64ul

let v69: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x52uy; 0x2duy; 0xc1uy; 0xf0uy; 0x99uy; 0x56uy; 0x7duy; 0x07uy; 0xf4uy; 0x7fuy; 0x37uy; 0xa3uy; 0x2auy; 0x84uy; 0x42uy; 0x7duy; 0x64uy; 0x3auy; 0x8cuy; 0xdcuy; 0xbfuy; 0xe5uy; 0xc0uy; 0xc9uy; 0x75uy; 0x98uy; 0xa2uy; 0xbduy; 0x25uy; 0x55uy; 0xd1uy; 0xaauy; 0x8cuy; 0xb0uy; 0x8euy; 0x48uy; 0x59uy; 0x0duy; 0xbbuy; 0x3duy; 0xa7uy; 0xb0uy; 0x8buy; 0x10uy; 0x56uy; 0x82uy; 0x88uy; 0x38uy; 0xc5uy; 0xf6uy; 0x1euy; 0x63uy; 0x93uy; 0xbauy; 0x7auy; 0x0auy; 0xbcuy; 0xc9uy; 0xf6uy; 0x62uy; 0x89uy; 0x80uy; 0x15uy; 0xaduy;
]

let v69_len = 64ul

let v70: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xfeuy; 0xffuy; 0xe9uy; 0x92uy; 0x86uy; 0x65uy; 0x73uy; 0x1cuy; 0x6duy; 0x6auy; 0x8fuy; 0x94uy; 0x67uy; 0x30uy; 0x83uy; 0x08uy; 0xfeuy; 0xffuy; 0xe9uy; 0x92uy; 0x86uy; 0x65uy; 0x73uy; 0x1cuy; 0x6duy; 0x6auy; 0x8fuy; 0x94uy; 0x67uy; 0x30uy; 0x83uy; 0x08uy;
]

let v70_len = 32ul

let v71: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xcauy; 0xfeuy; 0xbauy; 0xbeuy; 0xfauy; 0xceuy; 0xdbuy; 0xaduy; 0xdeuy; 0xcauy; 0xf8uy; 0x88uy;
]

let v71_len = 12ul

let v72: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xfeuy; 0xeduy; 0xfauy; 0xceuy; 0xdeuy; 0xaduy; 0xbeuy; 0xefuy; 0xfeuy; 0xeduy; 0xfauy; 0xceuy; 0xdeuy; 0xaduy; 0xbeuy; 0xefuy; 0xabuy; 0xaduy; 0xdauy; 0xd2uy;
]

let v72_len = 20ul

let v73: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x76uy; 0xfcuy; 0x6euy; 0xceuy; 0x0fuy; 0x4euy; 0x17uy; 0x68uy; 0xcduy; 0xdfuy; 0x88uy; 0x53uy; 0xbbuy; 0x2duy; 0x55uy; 0x1buy;
]

let v73_len = 16ul

let v74: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xd9uy; 0x31uy; 0x32uy; 0x25uy; 0xf8uy; 0x84uy; 0x06uy; 0xe5uy; 0xa5uy; 0x59uy; 0x09uy; 0xc5uy; 0xafuy; 0xf5uy; 0x26uy; 0x9auy; 0x86uy; 0xa7uy; 0xa9uy; 0x53uy; 0x15uy; 0x34uy; 0xf7uy; 0xdauy; 0x2euy; 0x4cuy; 0x30uy; 0x3duy; 0x8auy; 0x31uy; 0x8auy; 0x72uy; 0x1cuy; 0x3cuy; 0x0cuy; 0x95uy; 0x95uy; 0x68uy; 0x09uy; 0x53uy; 0x2fuy; 0xcfuy; 0x0euy; 0x24uy; 0x49uy; 0xa6uy; 0xb5uy; 0x25uy; 0xb1uy; 0x6auy; 0xeduy; 0xf5uy; 0xaauy; 0x0duy; 0xe6uy; 0x57uy; 0xbauy; 0x63uy; 0x7buy; 0x39uy;
]

let v74_len = 60ul

let v75: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x52uy; 0x2duy; 0xc1uy; 0xf0uy; 0x99uy; 0x56uy; 0x7duy; 0x07uy; 0xf4uy; 0x7fuy; 0x37uy; 0xa3uy; 0x2auy; 0x84uy; 0x42uy; 0x7duy; 0x64uy; 0x3auy; 0x8cuy; 0xdcuy; 0xbfuy; 0xe5uy; 0xc0uy; 0xc9uy; 0x75uy; 0x98uy; 0xa2uy; 0xbduy; 0x25uy; 0x55uy; 0xd1uy; 0xaauy; 0x8cuy; 0xb0uy; 0x8euy; 0x48uy; 0x59uy; 0x0duy; 0xbbuy; 0x3duy; 0xa7uy; 0xb0uy; 0x8buy; 0x10uy; 0x56uy; 0x82uy; 0x88uy; 0x38uy; 0xc5uy; 0xf6uy; 0x1euy; 0x63uy; 0x93uy; 0xbauy; 0x7auy; 0x0auy; 0xbcuy; 0xc9uy; 0xf6uy; 0x62uy;
]

let v75_len = 60ul

let v76: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v76_len = 16ul

let v77: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v77_len = 12ul

let v78: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xd9uy; 0x31uy; 0x32uy; 0x25uy; 0xf8uy; 0x84uy; 0x06uy; 0xe5uy; 0xa5uy; 0x59uy; 0x09uy; 0xc5uy; 0xafuy; 0xf5uy; 0x26uy; 0x9auy; 0x86uy; 0xa7uy; 0xa9uy; 0x53uy; 0x15uy; 0x34uy; 0xf7uy; 0xdauy; 0x2euy; 0x4cuy; 0x30uy; 0x3duy; 0x8auy; 0x31uy; 0x8auy; 0x72uy; 0x1cuy; 0x3cuy; 0x0cuy; 0x95uy; 0x95uy; 0x68uy; 0x09uy; 0x53uy; 0x2fuy; 0xcfuy; 0x0euy; 0x24uy; 0x49uy; 0xa6uy; 0xb5uy; 0x25uy; 0xb1uy; 0x6auy; 0xeduy; 0xf5uy; 0xaauy; 0x0duy; 0xe6uy; 0x57uy; 0xbauy; 0x63uy; 0x7buy; 0x39uy; 0x1auy; 0xafuy; 0xd2uy; 0x55uy; 0x52uy; 0x2duy; 0xc1uy; 0xf0uy; 0x99uy; 0x56uy; 0x7duy; 0x07uy; 0xf4uy; 0x7fuy; 0x37uy; 0xa3uy; 0x2auy; 0x84uy; 0x42uy; 0x7duy; 0x64uy; 0x3auy; 0x8cuy; 0xdcuy; 0xbfuy; 0xe5uy; 0xc0uy; 0xc9uy; 0x75uy; 0x98uy; 0xa2uy; 0xbduy; 0x25uy; 0x55uy; 0xd1uy; 0xaauy; 0x8cuy; 0xb0uy; 0x8euy; 0x48uy; 0x59uy; 0x0duy; 0xbbuy; 0x3duy; 0xa7uy; 0xb0uy; 0x8buy; 0x10uy; 0x56uy; 0x82uy; 0x88uy; 0x38uy; 0xc5uy; 0xf6uy; 0x1euy; 0x63uy; 0x93uy; 0xbauy; 0x7auy; 0x0auy; 0xbcuy; 0xc9uy; 0xf6uy; 0x62uy; 0x89uy; 0x80uy; 0x15uy; 0xaduy;
]

let v78_len = 128ul

let v79: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x5fuy; 0xeauy; 0x79uy; 0x3auy; 0x2duy; 0x6fuy; 0x97uy; 0x4duy; 0x37uy; 0xe6uy; 0x8euy; 0x0cuy; 0xb8uy; 0xffuy; 0x94uy; 0x92uy;
]

let v79_len = 16ul

let v80: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v80_len = 16ul

let v81: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v81_len = 12ul

let v82: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x9duy; 0xd0uy; 0xa3uy; 0x76uy; 0xb0uy; 0x8euy; 0x40uy; 0xebuy; 0x00uy; 0xc3uy; 0x5fuy; 0x29uy; 0xf9uy; 0xeauy; 0x61uy; 0xa4uy;
]

let v82_len = 16ul

let v83: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v83_len = 48ul

let v84: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x03uy; 0x88uy; 0xdauy; 0xceuy; 0x60uy; 0xb6uy; 0xa3uy; 0x92uy; 0xf3uy; 0x28uy; 0xc2uy; 0xb9uy; 0x71uy; 0xb2uy; 0xfeuy; 0x78uy; 0xf7uy; 0x95uy; 0xaauy; 0xabuy; 0x49uy; 0x4buy; 0x59uy; 0x23uy; 0xf7uy; 0xfduy; 0x89uy; 0xffuy; 0x94uy; 0x8buy; 0xc1uy; 0xe0uy; 0x20uy; 0x02uy; 0x11uy; 0x21uy; 0x4euy; 0x73uy; 0x94uy; 0xdauy; 0x20uy; 0x89uy; 0xb6uy; 0xacuy; 0xd0uy; 0x93uy; 0xabuy; 0xe0uy;
]

let v84_len = 48ul

let v85: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v85_len = 16ul

let v86: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v86_len = 12ul

let v87: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x98uy; 0x88uy; 0x5auy; 0x3auy; 0x22uy; 0xbduy; 0x47uy; 0x42uy; 0xfeuy; 0x7buy; 0x72uy; 0x17uy; 0x21uy; 0x93uy; 0xb1uy; 0x63uy;
]

let v87_len = 16ul

let v88: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v88_len = 80ul

let v89: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x03uy; 0x88uy; 0xdauy; 0xceuy; 0x60uy; 0xb6uy; 0xa3uy; 0x92uy; 0xf3uy; 0x28uy; 0xc2uy; 0xb9uy; 0x71uy; 0xb2uy; 0xfeuy; 0x78uy; 0xf7uy; 0x95uy; 0xaauy; 0xabuy; 0x49uy; 0x4buy; 0x59uy; 0x23uy; 0xf7uy; 0xfduy; 0x89uy; 0xffuy; 0x94uy; 0x8buy; 0xc1uy; 0xe0uy; 0x20uy; 0x02uy; 0x11uy; 0x21uy; 0x4euy; 0x73uy; 0x94uy; 0xdauy; 0x20uy; 0x89uy; 0xb6uy; 0xacuy; 0xd0uy; 0x93uy; 0xabuy; 0xe0uy; 0xc9uy; 0x4duy; 0xa2uy; 0x19uy; 0x11uy; 0x8euy; 0x29uy; 0x7duy; 0x7buy; 0x7euy; 0xbcuy; 0xbcuy; 0xc9uy; 0xc3uy; 0x88uy; 0xf2uy; 0x8auy; 0xdeuy; 0x7duy; 0x85uy; 0xa8uy; 0xeeuy; 0x35uy; 0x61uy; 0x6fuy; 0x71uy; 0x24uy; 0xa9uy; 0xd5uy; 0x27uy; 0x02uy; 0x91uy;
]

let v89_len = 80ul

let v90: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v90_len = 16ul

let v91: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v91_len = 12ul

let v92: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xcauy; 0xc4uy; 0x5fuy; 0x60uy; 0xe3uy; 0x1euy; 0xfduy; 0x3buy; 0x5auy; 0x43uy; 0xb9uy; 0x8auy; 0x22uy; 0xceuy; 0x1auy; 0xa1uy;
]

let v92_len = 16ul

let v93: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy;
]

let v93_len = 128ul

let v94: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x03uy; 0x88uy; 0xdauy; 0xceuy; 0x60uy; 0xb6uy; 0xa3uy; 0x92uy; 0xf3uy; 0x28uy; 0xc2uy; 0xb9uy; 0x71uy; 0xb2uy; 0xfeuy; 0x78uy; 0xf7uy; 0x95uy; 0xaauy; 0xabuy; 0x49uy; 0x4buy; 0x59uy; 0x23uy; 0xf7uy; 0xfduy; 0x89uy; 0xffuy; 0x94uy; 0x8buy; 0xc1uy; 0xe0uy; 0x20uy; 0x02uy; 0x11uy; 0x21uy; 0x4euy; 0x73uy; 0x94uy; 0xdauy; 0x20uy; 0x89uy; 0xb6uy; 0xacuy; 0xd0uy; 0x93uy; 0xabuy; 0xe0uy; 0xc9uy; 0x4duy; 0xa2uy; 0x19uy; 0x11uy; 0x8euy; 0x29uy; 0x7duy; 0x7buy; 0x7euy; 0xbcuy; 0xbcuy; 0xc9uy; 0xc3uy; 0x88uy; 0xf2uy; 0x8auy; 0xdeuy; 0x7duy; 0x85uy; 0xa8uy; 0xeeuy; 0x35uy; 0x61uy; 0x6fuy; 0x71uy; 0x24uy; 0xa9uy; 0xd5uy; 0x27uy; 0x02uy; 0x91uy; 0x95uy; 0xb8uy; 0x4duy; 0x1buy; 0x96uy; 0xc6uy; 0x90uy; 0xffuy; 0x2fuy; 0x2duy; 0xe3uy; 0x0buy; 0xf2uy; 0xecuy; 0x89uy; 0xe0uy; 0x02uy; 0x53uy; 0x78uy; 0x6euy; 0x12uy; 0x65uy; 0x04uy; 0xf0uy; 0xdauy; 0xb9uy; 0x0cuy; 0x48uy; 0xa3uy; 0x03uy; 0x21uy; 0xdeuy; 0x33uy; 0x45uy; 0xe6uy; 0xb0uy; 0x46uy; 0x1euy; 0x7cuy; 0x9euy; 0x6cuy; 0x6buy; 0x7auy; 0xfeuy; 0xdduy; 0xe8uy; 0x3fuy; 0x40uy;
]

let v94_len = 128ul

let v95: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x84uy; 0x3fuy; 0xfcuy; 0xf5uy; 0xd2uy; 0xb7uy; 0x26uy; 0x94uy; 0xd1uy; 0x9euy; 0xd0uy; 0x1duy; 0x01uy; 0x24uy; 0x94uy; 0x12uy;
]

let v95_len = 16ul

let v96: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0xdbuy; 0xccuy; 0xa3uy; 0x2euy; 0xbfuy; 0x9buy; 0x80uy; 0x46uy; 0x17uy; 0xc3uy; 0xaauy; 0x9euy;
]

let v96_len = 12ul

let v97: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x10uy; 0x11uy; 0x12uy; 0x13uy; 0x14uy; 0x15uy; 0x16uy; 0x17uy; 0x18uy; 0x19uy; 0x1auy; 0x1buy; 0x1cuy; 0x1duy; 0x1euy; 0x1fuy;
]

let v97_len = 32ul

let v98: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x3buy; 0x62uy; 0x9cuy; 0xcfuy; 0xbcuy; 0x11uy; 0x19uy; 0xb7uy; 0x31uy; 0x9euy; 0x1duy; 0xceuy; 0x2cuy; 0xd6uy; 0xfduy; 0x6duy;
]

let v98_len = 16ul

let v99: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x00uy; 0x01uy; 0x02uy; 0x03uy; 0x04uy; 0x05uy; 0x06uy; 0x07uy; 0x08uy; 0x09uy; 0x0auy; 0x0buy; 0x0cuy; 0x0duy; 0x0euy; 0x0fuy; 0x10uy; 0x11uy; 0x12uy; 0x13uy; 0x14uy; 0x15uy; 0x16uy; 0x17uy; 0x18uy; 0x19uy; 0x1auy; 0x1buy; 0x1cuy; 0x1duy; 0x1euy; 0x1fuy; 0x20uy; 0x21uy; 0x22uy; 0x23uy; 0x24uy; 0x25uy; 0x26uy; 0x27uy; 0x28uy; 0x29uy; 0x2auy; 0x2buy; 0x2cuy; 0x2duy; 0x2euy; 0x2fuy; 0x30uy; 0x31uy; 0x32uy; 0x33uy; 0x34uy; 0x35uy; 0x36uy; 0x37uy; 0x38uy; 0x39uy; 0x3auy; 0x3buy; 0x3cuy; 0x3duy; 0x3euy; 0x3fuy; 0x40uy; 0x41uy; 0x42uy; 0x43uy; 0x44uy; 0x45uy; 0x46uy; 0x47uy; 0x48uy; 0x49uy; 0x4auy; 0x4buy; 0x4cuy; 0x4duy; 0x4euy; 0x4fuy;
]

let v99_len = 80ul

let v100: LB.buffer UInt8.t = LB.gcmalloc_of_list HS.root [
  0x62uy; 0x68uy; 0xc6uy; 0xfauy; 0x2auy; 0x80uy; 0xb2uy; 0xd1uy; 0x37uy; 0x46uy; 0x7fuy; 0x09uy; 0x2fuy; 0x65uy; 0x7auy; 0xc0uy; 0x4duy; 0x89uy; 0xbeuy; 0x2buy; 0xeauy; 0xa6uy; 0x23uy; 0xd6uy; 0x1buy; 0x5auy; 0x86uy; 0x8cuy; 0x8fuy; 0x03uy; 0xffuy; 0x95uy; 0xd3uy; 0xdcuy; 0xeeuy; 0x23uy; 0xaduy; 0x2fuy; 0x1auy; 0xb3uy; 0xa6uy; 0xc8uy; 0x0euy; 0xafuy; 0x4buy; 0x14uy; 0x0euy; 0xb0uy; 0x5duy; 0xe3uy; 0x45uy; 0x7fuy; 0x0fuy; 0xbcuy; 0x11uy; 0x1auy; 0x6buy; 0x43uy; 0xd0uy; 0x76uy; 0x3auy; 0xa4uy; 0x22uy; 0xa3uy; 0x01uy; 0x3cuy; 0xf1uy; 0xdcuy; 0x37uy; 0xfeuy; 0x41uy; 0x7duy; 0x1fuy; 0xbfuy; 0xc4uy; 0x49uy; 0xb7uy; 0x5duy; 0x4cuy; 0xc5uy;
]

let v100_len = 80ul

let hash_vectors: LB.buffer hash_vector = LB.gcmalloc_of_list HS.root
[
   (*{
    hash_alg = MD5;
    input = !*"";
    output = v1;
    output_len = v1_len;
    repeat = 1ul
  }; {
    hash_alg = MD5;
    input = !*"a";
    output = v2;
    output_len = v2_len;
    repeat = 1ul
  }; {
    hash_alg = MD5;
    input = !*"abc";
    output = v3;
    output_len = v3_len;
    repeat = 1ul
  }; {
    hash_alg = MD5;
    input = !*"message digest";
    output = v4;
    output_len = v4_len;
    repeat = 1ul
  }; {
    hash_alg = MD5;
    input = !*"abcdefghijklmnopqrstuvwxyz";
    output = v5;
    output_len = v5_len;
    repeat = 1ul
  }; {
    hash_alg = MD5;
    input = !*"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    output = v6;
    output_len = v6_len;
    repeat = 1ul
  }; {
    hash_alg = MD5;
    input = !*"12345678901234567890123456789012345678901234567890123456789012345678901234567890";
    output = v7;
    output_len = v7_len;
    repeat = 1ul
  }; {
    hash_alg = SHA1;
    input = !*"abc";
    output = v8;
    output_len = v8_len;
    repeat = 1ul
  }; {
    hash_alg = SHA1;
    input = !*"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq";
    output = v9;
    output_len = v9_len;
    repeat = 1ul
  }; {
    hash_alg = SHA1;
    input = !*"a";
    output = v10;
    output_len = v10_len;
    repeat = 1000000ul
  }; {
    hash_alg = SHA1;
    input = !*"0123456701234567012345670123456701234567012345670123456701234567";
    output = v11;
    output_len = v11_len;
    repeat = 10ul
  };*) {
    hash_alg = SHA256;
    input = !*"abc";
    output = v12;
    output_len = v12_len;
    repeat = 1ul
  }; {
    hash_alg = SHA256;
    input = !*"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq";
    output = v13;
    output_len = v13_len;
    repeat = 1ul
  }; {
    hash_alg = SHA256;
    input = !*"a";
    output = v14;
    output_len = v14_len;
    repeat = 1000000ul
  }; {
    hash_alg = SHA256;
    input = !*"0123456701234567012345670123456701234567012345670123456701234567";
    output = v15;
    output_len = v15_len;
    repeat = 10ul
  }; {
    hash_alg = SHA256;
    input = !*"\x19";
    output = v16;
    output_len = v16_len;
    repeat = 1ul
  };(* {
    hash_alg = SHA256;
    // 2018.05.26: Don't know how to encode byte literals in strings; this doesn't work
    // as in OCaml
    input = !*"\xe3\xd7\x25\x70\xdc\xdd\x78\x7c\xe3\x88\x7a\xb2\xcd\x68\x46\x52";
    output = v17;
    output_len = v17_len;
    repeat = 1ul
  }; *){
    hash_alg = SHA384;
    input = !*"abc";
    output = v18;
    output_len = v18_len;
    repeat = 1ul
  }; {
    hash_alg = SHA384;
    input = !*"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu";
    output = v19;
    output_len = v19_len;
    repeat = 1ul
  }; {
    hash_alg = SHA384;
    input = !*"a";
    output = v20;
    output_len = v20_len;
    repeat = 1000000ul
  }; {
    hash_alg = SHA384;
    input = !*"0123456701234567012345670123456701234567012345670123456701234567";
    output = v21;
    output_len = v21_len;
    repeat = 10ul
  }; (*{
    hash_alg = SHA512;
    input = !*"abc";
    output = v22;
    output_len = v22_len;
    repeat = 1ul
  }; {
    hash_alg = SHA512;
    input = !*"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu";
    output = v23;
    output_len = v23_len;
    repeat = 1ul
  }; {
    hash_alg = SHA512;
    input = !*"a";
    output = v24;
    output_len = v24_len;
    repeat = 1000000ul
  }; {
    hash_alg = SHA512;
    input = !*"0123456701234567012345670123456701234567012345670123456701234567";
    output = v25;
    output_len = v25_len;
    repeat = 10ul
  }*)
]

let hash_vectors_len = 25ul

/// AEAD

type cipher =
  | AES_128_GCM
  | AES_256_GCM
  | CHACHA20_POLY1305

noeq
type aead_vector = {
  cipher: cipher;
  key: LB.buffer UInt8.t;
  key_len: UInt32.t;
  iv : LB.buffer UInt8.t;
  iv_len: UInt32.t;
  aad: LB.buffer UInt8.t;
  aad_len: UInt32.t;
  tag: LB.buffer UInt8.t;
  tag_len: UInt32.t;
  plaintext: LB.buffer UInt8.t;
  plaintext_len: UInt32.t;
  ciphertext: LB.buffer UInt8.t;
  ciphertext_len: UInt32.t;
}

let aead_vectors: LB.buffer aead_vector = LB.gcmalloc_of_list HS.root [
  { (* rfc7539#page-22 *)
    cipher = CHACHA20_POLY1305;
    key = v26;
    key_len = v26_len;
    iv  = v27;
    iv_len  = v27_len;
    aad = v28;
    aad_len = v28_len;
    tag = v29;
    tag_len = v29_len;
    plaintext  = v30;
    plaintext_len  = v30_len;
    ciphertext = v31;
    ciphertext_len = v31_len;
  };
  {
    cipher = CHACHA20_POLY1305;
    key = v32;
    key_len = v32_len;
    iv  = v33;
    iv_len  = v33_len;
    aad = v34;
    aad_len = v34_len;
    tag = v35;
    tag_len = v35_len;
    plaintext  = v36;
    plaintext_len  = v36_len;
    ciphertext = v37;
    ciphertext_len = v37_len;
  };
  {
    cipher = AES_128_GCM;
    key = v38;
    key_len = v38_len;
    iv  = v39;
    iv_len  = v39_len;
    aad = LB.null;
    aad_len = 0ul;
    tag = v40;
    tag_len = v40_len;
    plaintext  = LB.null;
    plaintext_len = 0ul;
    ciphertext = LB.null;
    ciphertext_len = 0ul;
  };
  {
    cipher = AES_128_GCM;
    key = v41;
    key_len = v41_len;
    iv  = v42;
    iv_len  = v42_len;
    aad = LB.null;
    aad_len = 0ul;
    tag = v43;
    tag_len = v43_len;
    plaintext  = v44;
    plaintext_len  = v44_len;
    ciphertext = v45;
    ciphertext_len = v45_len;
  };
  {
    cipher = AES_128_GCM;
    key = v46;
    key_len = v46_len;
    iv  = v47;
    iv_len  = v47_len;
    aad = LB.null;
    aad_len = 0ul;
    tag = v48;
    tag_len = v48_len;
    plaintext  = v49;
    plaintext_len  = v49_len;
    ciphertext = v50;
    ciphertext_len = v50_len;
  };
  {
    cipher = AES_128_GCM;
    key = v51;
    key_len = v51_len;
    iv  = v52;
    iv_len  = v52_len;
    aad = v53;
    aad_len = v53_len;
    tag = v54;
    tag_len = v54_len;
    plaintext  = v55;
    plaintext_len  = v55_len;
    ciphertext = v56;
    ciphertext_len = v56_len;
  };
(* Not 12 byte IV
  {
    cipher = AES_128_GCM;
    key = "feffe9928665731c6d6a8f9467308308";
    iv  = "cafebabefacedbad";
    aad = "feedfacedeadbeeffeedfacedeadbeefabaddad2";
    tag = "3612d2e79e3b0785561be14aaca2fccb";
    plaintext  = "d9313225f88406e5a55909c5aff5269a86a7a9531534f7da2e4c303d8a318a721c3c0c95956809532fcf0e2449a6b525b16aedf5aa0de657ba637b39";
    ciphertext = "61353b4c2806934a777ff51fa22a4755699b2a714fcdc6f83766e5f97b6c742373806900e49f24b22b097544d4896b424989b5e1ebac0f07c23f4598";
  };
  {
    cipher = AES_128_GCM;
    key = "feffe9928665731c6d6a8f9467308308";
    iv  = "9313225df88406e555909c5aff5269aa6a7a9538534f7da1e4c303d2a318a728c3c0c95156809539fcf0e2429a6b525416aedbf5a0de6a57a637b39b";
    aad = "feedfacedeadbeeffeedfacedeadbeefabaddad2";
    tag = "619cc5aefffe0bfa462af43c1699d050";
    plaintext  = "d9313225f88406e5a55909c5aff5269a86a7a9531534f7da2e4c303d8a318a721c3c0c95956809532fcf0e2449a6b525b16aedf5aa0de657ba637b39";
    ciphertext = "8ce24998625615b603a033aca13fb894be9112a5c3a211a8ba262a3cca7e2ca701e4a9a4fba43c90ccdcb281d48c7c6fd62875d2aca417034c34aee5";
  };
*)
  {
    cipher = AES_256_GCM;
    key = v57;
    key_len = v57_len;
    iv  = v58;
    iv_len  = v58_len;
    aad = LB.null;
    aad_len = 0ul;
    tag = v59;
    tag_len = v59_len;
    plaintext  = LB.null;
    plaintext_len = 0ul;
    ciphertext = LB.null;
    ciphertext_len = 0ul;
  };
  {
    cipher = AES_256_GCM;
    key = v60;
    key_len = v60_len;
    iv  = v61;
    iv_len  = v61_len;
    aad = LB.null;
    aad_len = 0ul;
    tag = v62;
    tag_len = v62_len;
    plaintext  = v63;
    plaintext_len  = v63_len;
    ciphertext = v64;
    ciphertext_len = v64_len;
  };
  {
    cipher = AES_256_GCM;
    key = v65;
    key_len = v65_len;
    iv  = v66;
    iv_len  = v66_len;
    aad = LB.null;
    aad_len = 0ul;
    tag = v67;
    tag_len = v67_len;
    plaintext  = v68;
    plaintext_len  = v68_len;
    ciphertext = v69;
    ciphertext_len = v69_len;
  };
  {
    cipher = AES_256_GCM;
    key = v70;
    key_len = v70_len;
    iv  = v71;
    iv_len  = v71_len;
    aad = v72;
    aad_len = v72_len;
    tag = v73;
    tag_len = v73_len;
    plaintext  = v74;
    plaintext_len  = v74_len;
    ciphertext = v75;
    ciphertext_len = v75_len;
  };
(*
  {
    cipher = AES_256_GCM;
    key = "feffe9928665731c6d6a8f9467308308feffe9928665731c6d6a8f9467308308";
    iv  = "cafebabefacedbad";
    aad = "feedfacedeadbeeffeedfacedeadbeefabaddad2";
    tag = "3a337dbf46a792c45e454913fe2ea8f2";
    plaintext  = "d9313225f88406e5a55909c5aff5269a86a7a9531534f7da2e4c303d8a318a721c3c0c95956809532fcf0e2449a6b525b16aedf5aa0de657ba637b39";
    ciphertext = "c3762df1ca787d32ae47c13bf19844cbaf1ae14d0b976afac52ff7d79bba9de0feb582d33934a4f0954cc2363bc73f7862ac430e64abe499f47c9b1f";
  };
  {
    cipher = AES_256_GCM;
    key = "feffe9928665731c6d6a8f9467308308feffe9928665731c6d6a8f9467308308";
    iv  = "9313225df88406e555909c5aff5269aa6a7a9538534f7da1e4c303d2a318a728c3c0c95156809539fcf0e2429a6b525416aedbf5a0de6a57a637b39b";
    aad = "feedfacedeadbeeffeedfacedeadbeefabaddad2";
    tag = "a44a8266ee1c8eb0c8b5d4cf5ae9f19a";
    plaintext  = "d9313225f88406e5a55909c5aff5269a86a7a9531534f7da2e4c303d8a318a721c3c0c95956809532fcf0e2449a6b525b16aedf5aa0de657ba637b39";
    ciphertext = "5a8def2f0c9e53f1f75d7853659e2a20eeb2b22aafde6419a058ab4f6f746bf40fc0c3b780f244452da3ebf1c5d82cdea2418997200ef82e44ae7e3f";
  };
*)
  {
    cipher = AES_128_GCM;
    key = v76;
    key_len = v76_len;
    iv  = v77;
    iv_len  = v77_len;
    aad = v78;
    aad_len = v78_len;
    tag = v79;
    tag_len = v79_len;
    plaintext  = LB.null;
    plaintext_len = 0ul;
    ciphertext = LB.null;
    ciphertext_len = 0ul;
  };
  {
    cipher = AES_128_GCM;
    key = v80;
    key_len = v80_len;
    iv  = v81;
    iv_len  = v81_len;
    aad = LB.null;
    aad_len = 0ul;
    tag = v82;
    tag_len = v82_len;
    plaintext  = v83;
    plaintext_len  = v83_len;
    ciphertext = v84;
    ciphertext_len = v84_len;
  };
  {
    cipher = AES_128_GCM;
    key = v85;
    key_len = v85_len;
    iv  = v86;
    iv_len  = v86_len;
    aad = LB.null;
    aad_len = 0ul;
    tag = v87;
    tag_len = v87_len;
    plaintext  = v88;
    plaintext_len  = v88_len;
    ciphertext = v89;
    ciphertext_len = v89_len;
  };
  {
    cipher = AES_128_GCM;
    key = v90;
    key_len = v90_len;
    iv  = v91;
    iv_len  = v91_len;
    aad = LB.null;
    aad_len = 0ul;
    tag = v92;
    tag_len = v92_len;
    plaintext  = v93;
    plaintext_len  = v93_len;
    ciphertext = v94;
    ciphertext_len = v94_len;
  };
(*
  {
    cipher = AES_128_GCM;
    key = "00000000000000000000000000000000";
    iv  = "ffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    aad = LB.null;
    aad_len = 0ul;
    tag = "566f8ef683078bfdeeffa869d751a017";
    plaintext  = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    ciphertext = "56b3373ca9ef6e4a2b64fe1e9a17b61425f10d47a75a5fce13efc6bc784af24f4141bdd48cf7c770887afd573cca5418a9aeffcd7c5ceddfc6a78397b9a85b499da558257267caab2ad0b23ca476a53cb17fb41c4b8b475cb4f3f7165094c229c9e8c4dc0a2a5ff1903e501511221376a1cdb8364c5061a20cae74bc4acd76ceb0abc9fd3217ef9f8c90be402ddf6d8697f4f880dff15bfb7a6b28241ec8fe183c2d59e3f9dfff653c7126f0acb9e64211f42bae12af462b1070bef1ab5e3606";
  };
  {
    cipher = AES_128_GCM;
    key = "00000000000000000000000000000000";
    iv  = "ffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    aad = LB.null;
    aad_len = 0ul;
    tag = "8b307f6b33286d0ab026a9ed3fe1e85f";
    plaintext
    ciphertext = "56b3373ca9ef6e4a2b64fe1e9a17b61425f10d47a75a5fce13efc6bc784af24f4141bdd48cf7c770887afd573cca5418a9aeffcd7c5ceddfc6a78397b9a85b499da558257267caab2ad0b23ca476a53cb17fb41c4b8b475cb4f3f7165094c229c9e8c4dc0a2a5ff1903e501511221376a1cdb8364c5061a20cae74bc4acd76ceb0abc9fd3217ef9f8c90be402ddf6d8697f4f880dff15bfb7a6b28241ec8fe183c2d59e3f9dfff653c7126f0acb9e64211f42bae12af462b1070bef1ab5e3606872ca10dee15b3249b1a1b958f23134c4bccb7d03200bce420a2f8eb66dcf3644d1423c1b5699003c13ecef4bf38a3b60eedc34033bac1902783dc6d89e2e774188a439c7ebcc0672dbda4ddcfb2794613b0be41315ef778708a70ee7d75165c";
  };
*)
  {
    cipher = AES_128_GCM;
    key = v95;
    key_len = v95_len;
    iv  = v96;
    iv_len  = v96_len;
    aad = v97;
    aad_len = v97_len;
    tag = v98;
    tag_len = v98_len;
    plaintext  = v99;
    plaintext_len  = v99_len;
    ciphertext = v100;
    ciphertext_len = v100_len;
  };
]

let aead_vectors_len = 15ul
