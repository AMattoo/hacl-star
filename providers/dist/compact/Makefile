# A hand-written Makefile because there's too much logic to have it
# auto-generated by KreMLin

# 1. The usual pseudo auto-configuration

UNAME		= $(shell uname)
MARCH		= x86_64
ifeq ($(UNAME),Darwin)
  VARIANT	= -darwin
  SO		= so
else ifeq ($(UNAME),Linux)
  CFLAGS	+= -fPIC -fstack-check
  LDFLAGS += -ldl -lpthread
  VARIANT	= -linux
  SO 		= so
  LDFLAGS	+= -Xlinker -z -Xlinker noexecstack -Xlinker --unresolved-symbols=report-all
else ifeq ($(OS),Windows_NT)
  CC		= $(MARCH)-w64-mingw32-gcc
  AR		= $(MARCH)-w64-mingw32-ar
  VARIANT	= -mingw
  SO		= dll
endif

# 2. Parameters we want to compile with, for the generated Makefile

CFLAGS		+= -Wno-parentheses -g

# This is a regular (with OpenSSL) build; compact-msvc contains a build that is
# windows-compatible and wants -lbcrypt instead of this
CFLAGS += -I $(OPENSSL_HOME)/include
LDFLAGS += -L$(OPENSSL_HOME) -lcrypto

# 3. Some sanity checks

include Makefile.basic

OBJS += $(patsubst %.S,%.o,$(wildcard *-$(MARCH)$(VARIANT).S))

$(HACL_A):
	@echo "Please run make in the $(KREMLIN_HOME)/kremlib directory before invoking this Makefile" && false

$(KREMLIB_A):
	@echo "Please run make in the $(HACL_HOME)/code directory before invoking this Makefile" && false

HACL_A = $(HACL_HOME)/code/dist/compact/libhacl.a
KREMLIB_A = $(KREMLIN_HOME)/kremlib/dist/generic/libkremlib.a

all: libevercrypt.$(SO)

libevercrypt.$(SO): $(OBJS) $(HACL_A) $(KREMLIB_A)
	$(CC) $(CFLAGS) $(LDFLAGS) -shared -o $@ $^

libevercrypt.a: aes-$(MARCH)$(VARIANT).o \
  $(addsuffix -$(MARCH)$(VARIANT).o,sha256 aesgcm curve25519 cpuid)
