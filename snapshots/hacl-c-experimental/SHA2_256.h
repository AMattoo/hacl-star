/* This file was auto-generated by KreMLin! */
#ifndef __SHA2_256_H
#define __SHA2_256_H


#include "Hacl_Utils_Experimental.h"
#include "kremlib.h"
#include "testlib.h"

typedef uint8_t SHA2_256_uint8_t;

typedef uint32_t SHA2_256_uint32_t;

typedef uint64_t SHA2_256_uint64_t;

typedef uint8_t SHA2_256_suint8_t;

typedef uint32_t SHA2_256_suint32_t;

typedef uint64_t SHA2_256_suint64_t;

typedef uint32_t *SHA2_256_suint32_p;

typedef uint8_t *SHA2_256_suint8_p;

uint8_t SHA2_256_u8_to_s8(uint8_t a);

uint32_t SHA2_256_u32_to_s32(uint32_t a);

uint64_t SHA2_256_u32_to_s64(uint32_t a);

uint8_t SHA2_256_s32_to_s8(uint32_t a);

uint64_t SHA2_256_s32_to_s64(uint32_t a);

uint64_t SHA2_256_u64_to_s64(uint64_t a);

extern uint32_t SHA2_256_hashsize;

extern uint32_t SHA2_256_blocksize;

extern uint32_t SHA2_256_size_md_len;

extern uint32_t SHA2_256_size_k;

extern uint32_t SHA2_256_size_ws;

extern uint32_t SHA2_256_size_whash;

extern uint32_t SHA2_256_size_count;

extern uint32_t SHA2_256_size_state;

extern uint32_t SHA2_256_pos_k;

extern uint32_t SHA2_256_pos_ws;

extern uint32_t SHA2_256_pos_whash;

extern uint32_t SHA2_256_pos_count;

uint32_t SHA2_256__Ch(uint32_t x, uint32_t y, uint32_t z);

uint32_t SHA2_256__Maj(uint32_t x, uint32_t y, uint32_t z);

uint32_t SHA2_256__Sigma0(uint32_t x);

uint32_t SHA2_256__Sigma1(uint32_t x);

uint32_t SHA2_256__sigma0(uint32_t x);

uint32_t SHA2_256__sigma1(uint32_t x);

void SHA2_256_set_k(uint32_t *state);

void SHA2_256_set_whash(uint32_t *state);

void SHA2_256_ws_upd(uint32_t *state, uint32_t *wblock, uint32_t t);

void SHA2_256_init(uint32_t *state);

void SHA2_256_update_inner(uint32_t *state, uint32_t t1, uint32_t t2, uint32_t t);

void SHA2_256_update(uint32_t *state, uint8_t *data_8);

void SHA2_256_update_multi(uint32_t *state, uint8_t *data, uint32_t n, uint32_t idx);

void SHA2_256_update_last(uint32_t *state, uint8_t *data, uint32_t len);

void SHA2_256_finish(uint32_t *state, uint8_t *hash);

void SHA2_256_hash(uint8_t *hash, uint8_t *input, uint32_t len);
#endif
