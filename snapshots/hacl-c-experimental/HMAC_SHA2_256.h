/* This file was auto-generated by KreMLin! */
#ifndef __HMAC_SHA2_256_H
#define __HMAC_SHA2_256_H



#include "kremlib.h"
#include "testlib.h"

typedef uint8_t uint8_t;

typedef uint32_t uint32_t;

typedef uint64_t uint64_t;

typedef uint8_t suint8_t;

typedef uint32_t suint32_t;

typedef uint64_t suint64_t;

typedef uint32_t *suint32_p;

typedef uint8_t *suint8_p;

typedef uint8_t Hacl_Hash_SHA2_L256_uint8_t;

typedef uint32_t Hacl_Hash_SHA2_L256_uint32_t;

typedef uint64_t Hacl_Hash_SHA2_L256_uint64_t;

typedef uint8_t Hacl_Hash_SHA2_L256_suint8_t;

typedef uint32_t Hacl_Hash_SHA2_L256_suint32_t;

typedef uint64_t Hacl_Hash_SHA2_L256_suint64_t;

typedef uint32_t *Hacl_Hash_SHA2_L256_suint32_p;

typedef uint8_t *Hacl_Hash_SHA2_L256_suint8_p;

typedef uint8_t uint8_t0;

typedef uint32_t uint32_t0;

typedef uint64_t uint64_t0;

typedef uint8_t suint8_t0;

typedef uint32_t suint32_t0;

typedef uint64_t suint64_t0;

typedef uint32_t *suint32_p0;

typedef uint8_t *suint8_p0;

typedef uint8_t uint8_t1;

typedef uint32_t uint32_t1;

typedef uint64_t uint64_t1;

typedef uint8_t suint8_t1;

typedef uint32_t suint32_t1;

typedef uint64_t suint64_t1;

typedef uint32_t *suint32_p1;

typedef uint8_t *suint8_p1;

extern uint32_t hmac_hashsize_256;

extern uint32_t hmac_blocksize_256;

extern uint32_t hmac_size_state_256;

void hmac_sha2_init_256(uint32_t *state, uint8_t *key, uint32_t len);

void hmac_sha2_update_256(uint32_t *state, uint8_t *data);

void hmac_sha2_update_multi_256(uint32_t *state, uint8_t *data, uint32_t n, uint32_t idx);

void hmac_sha2_update_last_256(uint32_t *state, uint8_t *data, uint32_t len);

void hmac_sha2_finish_256(uint32_t *state, uint8_t *mac);

void
hmac_sha2_256(uint8_t *mac, uint8_t *key, uint32_t keylen, uint8_t *data, uint32_t datalen);
#endif
