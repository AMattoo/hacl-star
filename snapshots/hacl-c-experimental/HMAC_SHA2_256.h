/* This file was auto-generated by KreMLin! */
#ifndef __HMAC_SHA2_256_H
#define __HMAC_SHA2_256_H



#include "kremlib.h"
#include "testlib.h"

typedef uint8_t Hacl_Utils_Experimental_uint8_t;

typedef uint32_t Hacl_Utils_Experimental_uint32_t;

typedef uint64_t Hacl_Utils_Experimental_uint64_t;

typedef uint8_t Hacl_Utils_Experimental_suint8_t;

typedef uint32_t Hacl_Utils_Experimental_suint32_t;

typedef uint64_t Hacl_Utils_Experimental_suint64_t;

typedef uint32_t *Hacl_Utils_Experimental_suint32_p;

typedef uint8_t *Hacl_Utils_Experimental_suint8_p;

typedef uint8_t Hacl_Hash_SHA2_L256_uint8_t;

typedef uint32_t Hacl_Hash_SHA2_L256_uint32_t;

typedef uint64_t Hacl_Hash_SHA2_L256_uint64_t;

typedef uint8_t Hacl_Hash_SHA2_L256_suint8_t;

typedef uint32_t Hacl_Hash_SHA2_L256_suint32_t;

typedef uint64_t Hacl_Hash_SHA2_L256_suint64_t;

typedef uint32_t *Hacl_Hash_SHA2_L256_suint32_p;

typedef uint8_t *Hacl_Hash_SHA2_L256_suint8_p;

typedef uint8_t Hacl_HMAC_SHA2_L256_uint8_t;

typedef uint32_t Hacl_HMAC_SHA2_L256_uint32_t;

typedef uint64_t Hacl_HMAC_SHA2_L256_uint64_t;

typedef uint8_t Hacl_HMAC_SHA2_L256_suint8_t;

typedef uint32_t Hacl_HMAC_SHA2_L256_suint32_t;

typedef uint64_t Hacl_HMAC_SHA2_L256_suint64_t;

typedef uint32_t *Hacl_HMAC_SHA2_L256_suint32_p;

typedef uint8_t *Hacl_HMAC_SHA2_L256_suint8_p;

typedef uint8_t HMAC_SHA2_256_uint8_t;

typedef uint32_t HMAC_SHA2_256_uint32_t;

typedef uint64_t HMAC_SHA2_256_uint64_t;

typedef uint8_t HMAC_SHA2_256_suint8_t;

typedef uint32_t HMAC_SHA2_256_suint32_t;

typedef uint64_t HMAC_SHA2_256_suint64_t;

typedef uint32_t *HMAC_SHA2_256_suint32_p;

typedef uint8_t *HMAC_SHA2_256_suint8_p;

extern uint32_t HMAC_SHA2_256_hashsize_256;

extern uint32_t HMAC_SHA2_256_blocksize_256;

extern uint32_t HMAC_SHA2_256_size_state_256;

void HMAC_SHA2_256_hmac_sha2_init_256(uint32_t *state, uint8_t *key, uint32_t len);

void HMAC_SHA2_256_hmac_sha2_update_256(uint32_t *state, uint8_t *data);

void
HMAC_SHA2_256_hmac_sha2_update_multi_256(
  uint32_t *state,
  uint8_t *data,
  uint32_t n,
  uint32_t idx
);

void HMAC_SHA2_256_hmac_sha2_update_last_256(uint32_t *state, uint8_t *data, uint32_t len);

void HMAC_SHA2_256_hmac_sha2_finish_256(uint32_t *state, uint8_t *mac);

void
HMAC_SHA2_256_hmac_sha2_256(
  uint8_t *mac,
  uint8_t *key,
  uint32_t keylen,
  uint8_t *data,
  uint32_t datalen
);
#endif
