/* This file was auto-generated by KreMLin! */
#ifndef __Chacha20_H
#define __Chacha20_H

#include "kremlib.h"
#include "testlib.h"

typedef uint32_t Hacl_Symmetric_Chacha20_u32;

typedef uint32_t Hacl_Symmetric_Chacha20_h32;

typedef uint8_t *Hacl_Symmetric_Chacha20_uint8_p;

typedef uint32_t *Hacl_Symmetric_Chacha20_chacha_ctx;

void Hacl_Symmetric_Chacha20_chacha_keysetup(uint32_t *ctx, uint8_t *k);

void Hacl_Symmetric_Chacha20_chacha_ietf_ivsetup(uint32_t *ctx, uint8_t *iv, uint32_t counter);

void
Hacl_Symmetric_Chacha20_chacha_encrypt_bytes(
  uint32_t *ctx,
  uint8_t *m,
  uint8_t *c,
  uint32_t len
);

void Hacl_Symmetric_Chacha20_chacha20_update(uint32_t *ctx, uint8_t *m, uint8_t *c);

void
Hacl_Symmetric_Chacha20_chacha20_finish(uint32_t *ctx, uint8_t *m, uint8_t *c, uint32_t len);

typedef uint32_t Chacha20_u32;

typedef uint32_t Chacha20_h32;

typedef uint8_t *Chacha20_uint8_p;

typedef uint32_t *Chacha20_chacha_ctx;

void Chacha20_chacha_keysetup(uint32_t *ctx, uint8_t *k);

void Chacha20_chacha_ietf_ivsetup(uint32_t *ctx, uint8_t *k, uint32_t ctr);

void Chacha20_chacha_encrypt_bytes(uint32_t *ctx, uint8_t *m, uint8_t *c, uint32_t l);
#endif
