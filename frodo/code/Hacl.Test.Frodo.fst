module Hacl.Test.Frodo

open FStar.HyperStack.All
open FStar.Mul

open LowStar.Buffer

open Lib.IntTypes
open Lib.PQ.Buffer

open Hacl.Impl.Frodo.KEM
open Hacl.Impl.PQ.Lib
open Hacl.Frodo.Random
open Frodo.Params

#reset-options "--z3rlimit 50 --max_fuel 0 --max_ifuel 0 --using_facts_from '* -FStar.Seq'"

val test_frodo:
    seed:lbytes (size 48)
  -> ss_expected:lbytes crypto_bytes
  -> pk_expected:lbytes crypto_publickeybytes
  -> ct_expected:lbytes crypto_ciphertextbytes
  -> sk_expected:lbytes crypto_secretkeybytes
  -> Stack unit
  (requires fun h ->
    live h seed /\ live h ss_expected /\ live h pk_expected /\ live h ct_expected /\ live h sk_expected)
  (ensures  fun h0 r h1 -> True)
let test_frodo seed ss_expected pk_expected ct_expected sk_expected =
  push_frame();
  randombytes_init_ seed;
  let pk_len = crypto_publickeybytes in
  let sk_len = crypto_secretkeybytes in
  let ct_len = crypto_ciphertextbytes in
  let ss_len = crypto_bytes in
  assert_norm (v crypto_publickeybytes =
    v bytes_seed_a + (v params_logq * v params_n * v params_nbar) / 8);
  assert_norm (v crypto_ciphertextbytes =
    ((v params_nbar * v params_n + v params_nbar * v params_nbar)
      * v params_logq) / 8 + v crypto_bytes);
  assert_norm (v crypto_secretkeybytes =
    v crypto_bytes + v crypto_publickeybytes + 2 * v params_n * v params_nbar);
  let pk  = create #_ #(v crypto_publickeybytes) pk_len (u8 0) in
  let sk  = create #_ #(v sk_len) sk_len (u8 0) in
  let ss1 = create #_ #(v ss_len) ss_len (u8 0) in
  let ct  = create #_ #(v ct_len) ct_len (u8 0) in
  let ss2 = create #_ #(v ss_len) ss_len (u8 0) in
  let _ = crypto_kem_keypair pk sk in
  let _ = crypto_kem_enc ct ss1 pk in
  let _ = crypto_kem_dec ss2 ct sk in
  print_compare_display pk_len pk pk_expected;
  print_compare_display sk_len sk sk_expected;
  print_compare_display ss_len ss1 ss_expected;
  print_compare_display ss_len ss1 ss2;
  print_compare_display ct_len ct ct_expected;
  pop_frame()


/// Test1. FrodoKEM-64. CSHAKE128

val u8: n:nat{n < 0x100} -> uint8
let u8 n = u8 n

let test1_ss_expected: b:lbytes crypto_bytes{ recallable b } =
  [@ inline_let]
  let l:list uint8 =
    normalize_term (List.Tot.map u8
    [0xdf; 0xc5; 0x2a; 0x95; 0x6c; 0xe4; 0xbc; 0xa5;
     0x53; 0x70; 0x46; 0x5a; 0x7e; 0xf8; 0x4f; 0x68])
  in
  assert_norm (List.Tot.length l == v crypto_bytes);
  createL_global l

// Verifies, but takes too long
#set-options "--lax"

let test1_pk_expected: b:lbytes crypto_publickeybytes{ recallable b } =
  [@ inline_let]
  let l:list uint8 =
    normalize_term (List.Tot.map u8
    [0x92; 0x44; 0x4d; 0x91; 0xa2; 0xad; 0xad; 0x05; 0x2c; 0xa2; 0x3d; 0xe5; 0xfb; 0x9d; 0xf9; 0xe1;
     0x95; 0xe3; 0x8f; 0xc2; 0x21; 0xb8; 0xb8; 0x34; 0x14; 0xfb; 0xd3; 0xef; 0x7c; 0xa2; 0x6b; 0x36;
     0x8c; 0x7b; 0x9d; 0x81; 0x78; 0xc9; 0x49; 0x64; 0x4d; 0x79; 0xfd; 0x8b; 0x19; 0xb9; 0x51; 0x4c;
     0xce; 0x27; 0x4d; 0x64; 0xaa; 0xe0; 0x29; 0x69; 0x10; 0xaa; 0x9f; 0x49; 0xac; 0x16; 0x1d; 0xbc;
     0x4e; 0xa0; 0x85; 0xf4; 0xf4; 0x58; 0x3a; 0xb9; 0xaa; 0xa9; 0xbd; 0x30; 0xf3; 0xc9; 0x1b; 0x6b;
     0x4d; 0x26; 0xfe; 0x4b; 0x3e; 0xc1; 0x88; 0xeb; 0xde; 0x99; 0x0a; 0xa9; 0xb1; 0x27; 0xc0; 0x28;
     0x96; 0x65; 0xfe; 0x3a; 0xf9; 0x0e; 0x67; 0x7a; 0x7f; 0x10; 0x4c; 0x16; 0xae; 0x2c; 0x0c; 0x72;
     0x62; 0x5b; 0x4d; 0x3c; 0x12; 0x21; 0x9a; 0x7e; 0x8f; 0x07; 0x51; 0xe0; 0x86; 0x3e; 0x33; 0x98;
     0x9b; 0x81; 0x2a; 0x96; 0x99; 0xe2; 0xf9; 0x99; 0x4f; 0x28; 0x0b; 0x76; 0xcb; 0x32; 0xb8; 0xea;
     0x77; 0xad; 0xa3; 0xe9; 0xad; 0x82; 0x76; 0xe3; 0x8c; 0x4f; 0x71; 0x8f; 0xd8; 0xd4; 0xad; 0xb4;
     0x5b; 0x3f; 0x84; 0xb3; 0xef; 0x91; 0x01; 0xb4; 0xaa; 0xfe; 0x7b; 0xda; 0xe3; 0x6b; 0x9e; 0x02;
     0xc2; 0xb7; 0x35; 0xec; 0x77; 0x15; 0xe1; 0x13; 0x95; 0x68; 0xd4; 0x18; 0x44; 0x29; 0x78; 0x55;
     0x47; 0xf5; 0x50; 0x98; 0x8e; 0xf3; 0x01; 0xa1; 0x71; 0xf5; 0x18; 0xa6; 0xd1; 0xfa; 0xac; 0x90;
     0xe1; 0xa8; 0x4d; 0x83; 0xd7; 0xcd; 0xc5; 0x14; 0x1d; 0xce; 0x24; 0x9e; 0xc4; 0x7b; 0x15; 0x9f;
     0x07; 0x3d; 0x85; 0xf6; 0x1b; 0x0d; 0xe6; 0xc1; 0x3f; 0x1e; 0x3f; 0x6c; 0x0a; 0xc7; 0x2d; 0xa4;
     0x9d; 0xb2; 0x6e; 0x2c; 0xba; 0xb8; 0x6f; 0xab; 0x34; 0x3a; 0x48; 0xab; 0x2f; 0x75; 0xab; 0x48;
     0x21; 0x8e; 0x59; 0x9d; 0xd0; 0xf7; 0xcd; 0x2d; 0xed; 0xc4; 0xb9; 0xae; 0x1b; 0x30; 0xf1; 0xc6;
     0x94; 0x21; 0xa7; 0x81; 0x58; 0xcf; 0x0e; 0x7a; 0xf0; 0xb5; 0x44; 0x42; 0x1a; 0xd4; 0x22; 0xfa;
     0x18; 0x0d; 0x2c; 0x05; 0xd3; 0x74; 0xeb; 0x90; 0x11; 0x25; 0xaf; 0x00; 0x3e; 0xe7; 0xbe; 0xf1;
     0x1e; 0xaf; 0x6d; 0xd0; 0x7f; 0xa4; 0x12; 0xcf; 0x4f; 0xc4; 0x65; 0xaa; 0x07; 0x73; 0x5f; 0x22;
     0xa0; 0x32; 0xd4; 0xd5; 0xe5; 0x28; 0x47; 0x2e; 0xb5; 0xc1; 0x2d; 0x58; 0xc2; 0xe9; 0x83; 0xcd;
     0x41; 0xa0; 0x82; 0x63; 0x92; 0x76; 0xc3; 0x51; 0x05; 0xf0; 0x6f; 0x18; 0xed; 0xb7; 0x7b; 0x87;
     0xcb; 0x90; 0x16; 0x63; 0x3b; 0x67; 0xc1; 0x3a; 0xbb; 0x66; 0x0b; 0xcd; 0x9d; 0x9b; 0x38; 0x7f;
     0xa1; 0x91; 0x14; 0x07; 0x7f; 0xcf; 0x1f; 0x11; 0x31; 0xf7; 0x95; 0x89; 0xf7; 0x35; 0x34; 0x11;
     0xa5; 0x5c; 0xab; 0x70; 0x05; 0xdd; 0x38; 0xc1; 0x7a; 0x42; 0x89; 0x6d; 0x13; 0xdc; 0x16; 0xaa;
     0xbc; 0x43; 0xc2; 0x20; 0x0f; 0xd2; 0x21; 0x3e; 0x15; 0x76; 0x6f; 0x82; 0xef; 0x29; 0x96; 0x4c;
     0xd5; 0xf4; 0x79; 0x3a; 0x29; 0x54; 0xab; 0xc3; 0x37; 0xbb; 0x8c; 0x2a; 0x86; 0x5d; 0x76; 0x31;
     0xc8; 0xc1; 0x30; 0x47; 0x7a; 0xce; 0x37; 0xf0; 0xe0; 0xe3; 0x64; 0x6a; 0xdd; 0xb1; 0x7d; 0x59;
     0x17; 0xee; 0xd5; 0xfb; 0xa9; 0x1b; 0xd6; 0x1f; 0x70; 0x21; 0xa7; 0xdc; 0x55; 0x63; 0xff; 0xdd;
     0xe5; 0xb5; 0x52; 0xc5; 0x7d; 0x41; 0x7e; 0x8a; 0xdf; 0xc1; 0xf6; 0x03; 0x8f; 0xc7; 0x52; 0xa3;
     0xc7; 0x66; 0x79; 0x55; 0xed; 0x0e; 0x40; 0x59; 0xbc; 0x60; 0x13; 0x86; 0xb4; 0x88; 0x8c; 0xba;
     0x9b; 0x80; 0x8a; 0x2b; 0x4e; 0x80; 0x92; 0xe1; 0xd2; 0x84; 0x93; 0xb6; 0xc8; 0xb3; 0x23; 0x1d;
     0xd3; 0xf7; 0xdd; 0xa6; 0x39; 0x1a; 0x65; 0x08; 0x0f; 0x95; 0x78; 0x89; 0xaf; 0xab; 0xb9; 0x9d;
     0x32; 0x89; 0x82; 0x07; 0xf2; 0x1d; 0xc0; 0xba; 0x30; 0x01; 0x42; 0x9a; 0xcc; 0x8e; 0x16; 0x7a;
     0xc0; 0xd7; 0x4a; 0x91; 0xe0; 0x46; 0xf5; 0xae; 0xe0; 0xed; 0x0a; 0x2c; 0xe1; 0xaf; 0x40; 0xf1;
     0x4d; 0x18; 0x71; 0x5e; 0xd3; 0x6c; 0x9c; 0x52; 0x70; 0xfd; 0xd2; 0xac; 0x05; 0xf6; 0xcb; 0x22;
     0x9f; 0x04; 0x8d; 0xd0; 0x25; 0xe1; 0xfb; 0xed; 0x19; 0x7e; 0x65; 0x51; 0x60; 0xcc; 0x88; 0xce;
     0xda; 0xf5; 0xad; 0xfd; 0x63; 0xd2; 0x62; 0x3f; 0x98; 0x05; 0xbf; 0xd9; 0xae; 0x16; 0x90; 0xdb;
     0x1e; 0x15; 0x2e; 0xb0; 0xcd; 0x95; 0x8c; 0x27; 0x6a; 0xd9; 0x1b; 0xc1; 0xdd; 0x02; 0xa9; 0x92;
     0x9a; 0x9e; 0x2b; 0x25; 0xeb; 0x82; 0x65; 0xcf; 0x5e; 0x25; 0x8c; 0x5e; 0xc3; 0x2a; 0x85; 0x50;
     0x67; 0x78; 0x6c; 0xe5; 0x8f; 0xdb; 0x56; 0xd3; 0x73; 0x64; 0x83; 0xaa; 0xe6; 0x97; 0x2d; 0x90;
     0x9c; 0xb3; 0x59; 0xf5; 0xee; 0x59; 0xe3; 0x05; 0xb1; 0xa1; 0x45; 0x4c; 0xcf; 0x94; 0x3e; 0x5c;
     0x15; 0x06; 0xf9; 0x5c; 0xc3; 0x82; 0x22; 0x71; 0x2b; 0x42; 0xb5; 0xd5; 0x44; 0x8f; 0xf8; 0x64;
     0x54; 0x75; 0x03; 0xcf; 0xdd; 0x91; 0x6b; 0x05; 0x09; 0x24; 0x7f; 0xd5; 0x97; 0x3e; 0xa4; 0x7c;
     0x65; 0x0a; 0x42; 0x6b; 0x64; 0xa2; 0xd8; 0x81; 0x4f; 0xc0; 0xec; 0xd8; 0x79; 0x4c; 0xcb; 0x9c;
     0x27; 0xbc; 0x60; 0x6f; 0xe2; 0x49; 0x9b; 0x44; 0x93; 0x6d; 0xa4; 0x74; 0x04; 0x1c; 0x81; 0xf9;
     0x01; 0x8f; 0xd2; 0x4d; 0xad; 0x07; 0x9a; 0xbb; 0x11; 0xc8; 0x76; 0x64; 0x29; 0xfe; 0xa4; 0x1a;
     0x25; 0x05; 0x4a; 0xaf; 0x59; 0xa9; 0x88; 0xf7; 0x73; 0x12; 0x60; 0xd4; 0x12; 0x01; 0x68; 0xf5;
     0xbe; 0xc5; 0xb2; 0x7b; 0xdc; 0xeb; 0x96; 0xec; 0x43; 0x5d; 0xc2; 0x07; 0xb4; 0x1d; 0xf7; 0x78;
     0xa7; 0x82; 0x8d; 0x10; 0x0b; 0x90; 0xeb; 0x5c; 0x1e; 0x49; 0x7b; 0xdd; 0x56; 0xc7; 0x5f; 0x0f;
     0x8f; 0x9a; 0x21; 0xcf; 0xa4; 0x63; 0x20; 0x0c; 0xe5; 0xf7; 0xc2; 0xdf; 0xf1; 0xec; 0xf3; 0x94;
     0x5b; 0xad; 0x29; 0xdd; 0x0b; 0x43; 0x19; 0xab; 0x93; 0xec; 0x7d; 0x50; 0x6b; 0x67; 0xf5; 0x2f;
     0xf1; 0xe7; 0x4b; 0xe2; 0x35; 0x41; 0x47; 0xd8; 0xcf; 0x9a; 0xbb; 0x38; 0x3a; 0x37; 0xc3; 0x61;
     0x43; 0xa4; 0x41; 0xab; 0x4d; 0x9b; 0xd9; 0xbf; 0x19; 0x6e; 0x66; 0xa1; 0xfd; 0xef; 0x54; 0x6f;
     0xef; 0x1e; 0xe0; 0x26; 0xab; 0xe3; 0xf5; 0xe7; 0x22; 0xd0; 0x84; 0x6e; 0x78; 0x90; 0x70; 0xc3;
     0x87; 0x6a; 0x68; 0xb8; 0x5f; 0x80; 0x10; 0xb3; 0x8f; 0x56; 0xff; 0x16; 0xf9; 0x88; 0x67; 0x1a;
     0x51; 0x3c; 0xf8; 0x27; 0x40; 0xbb; 0x69; 0x6e; 0xcb; 0x80; 0xa4; 0x0d; 0xb6; 0xb2; 0x66; 0xbd;
     0xa2; 0xcb; 0xfe; 0xd7; 0x67; 0x5f; 0xfa; 0x85; 0xd0; 0x98; 0x1e; 0x5d; 0x35; 0x01; 0x91; 0x3f;
     0x91; 0x46; 0xac; 0xcd; 0x82; 0xd3; 0xe1; 0x5c; 0x53; 0x66; 0xa7; 0xa1; 0x00; 0xd5; 0x34; 0x3f;
     0x1e; 0x1e; 0x0f; 0x1c; 0xef; 0x5d; 0x2e; 0x79; 0x28; 0x02; 0xbe; 0x9b; 0x8b; 0xfa; 0x5a; 0x0a;
     0xf3; 0xfc; 0x8c; 0xdc; 0xbd; 0xa3; 0xb6; 0xd3; 0x5b; 0xe0; 0xfb; 0xee; 0x63; 0xd3; 0x72; 0x5a])
  in
  assert_norm (List.Tot.length l == v crypto_publickeybytes);
  createL_global l

let test1_ct_expected: b:lbytes crypto_ciphertextbytes{ recallable b } =
  [@ inline_let]
  let l:list uint8 =
   normalize_term (List.Tot.map u8
   [0x9d; 0x0e; 0x6e; 0xec; 0xc3; 0xd0; 0xa5; 0x9f; 0xba; 0xf9; 0xfb; 0xc9; 0x30; 0x42; 0x58; 0x2a;
    0xf6; 0x5b; 0x14; 0x49; 0xec; 0x17; 0x96; 0xac; 0x33; 0x1e; 0xe9; 0x13; 0x66; 0x01; 0x88; 0x3a;
    0x1a; 0x86; 0x1c; 0x54; 0xeb; 0x12; 0xbe; 0x84; 0x28; 0x5e; 0xbe; 0x62; 0x6a; 0x2b; 0xe3; 0xc7;
    0xe2; 0xee; 0x0c; 0x1d; 0x08; 0xbd; 0xd0; 0xe0; 0x0c; 0xef; 0xe0; 0x23; 0x5d; 0x60; 0xea; 0x22;
    0x39; 0x03; 0x0b; 0xce; 0xf3; 0xe3; 0xfc; 0x96; 0xde; 0xe2; 0xbf; 0x5d; 0x41; 0x59; 0x43; 0xce;
    0xe6; 0x1a; 0x79; 0xa3; 0x76; 0x5e; 0xe7; 0x8c; 0x2e; 0x3d; 0x74; 0x14; 0x3d; 0xa3; 0x34; 0xcf;
    0xac; 0x56; 0x34; 0x73; 0x5b; 0xcc; 0xd3; 0xd2; 0x8b; 0xa2; 0x4b; 0x57; 0xe3; 0x62; 0x09; 0xe3;
    0x19; 0xc0; 0x21; 0x01; 0x98; 0x82; 0x60; 0x58; 0x4c; 0x63; 0x7d; 0xbc; 0xe0; 0x2e; 0x86; 0x08;
    0x7f; 0xf1; 0x79; 0x7d; 0xac; 0x53; 0x81; 0xfd; 0xed; 0xe5; 0x98; 0x03; 0x03; 0x09; 0x78; 0x0d;
    0xe0; 0x18; 0x24; 0xed; 0xe6; 0x58; 0x22; 0xd6; 0x50; 0xae; 0x1b; 0x32; 0x8d; 0x51; 0x81; 0xc1;
    0x7d; 0xc4; 0xa9; 0x69; 0xc3; 0x13; 0xe2; 0xbb; 0x27; 0x8e; 0x90; 0x23; 0xe1; 0xae; 0xd8; 0xdb;
    0xa6; 0x89; 0xfb; 0xac; 0xc6; 0x39; 0xb9; 0xf4; 0xa5; 0x1b; 0x43; 0x22; 0x19; 0x01; 0x37; 0x7a;
    0x0a; 0xf2; 0xf3; 0x22; 0xc5; 0x41; 0xfe; 0x37; 0x01; 0xaa; 0x49; 0x1e; 0xad; 0xf5; 0x57; 0x20;
    0x66; 0x01; 0xfe; 0xc7; 0x6c; 0xe5; 0xe1; 0x83; 0xcc; 0xf1; 0x1d; 0x4f; 0xf2; 0x4b; 0xdf; 0xcc;
    0xdb; 0x66; 0xe0; 0x20; 0x89; 0x02; 0x24; 0xda; 0xb7; 0x85; 0x81; 0x59; 0x3a; 0x02; 0xac; 0x4f;
    0x13; 0xa6; 0x82; 0xc2; 0x78; 0x7d; 0x2d; 0xb6; 0xc6; 0xdc; 0x5e; 0x15; 0x8d; 0x24; 0xba; 0x6a;
    0x35; 0x13; 0x12; 0x7d; 0xec; 0xba; 0x5f; 0x8f; 0x02; 0x51; 0xcf; 0x74; 0x26; 0x47; 0x11; 0x6f;
    0xa9; 0xfc; 0x1d; 0x1d; 0x23; 0x0d; 0x25; 0xd8; 0xf2; 0x6b; 0x8c; 0x3b; 0xf0; 0xd0; 0xcc; 0xf6;
    0xe5; 0x3d; 0x58; 0x4a; 0x88; 0xd4; 0x48; 0xfb; 0x49; 0xff; 0x87; 0x2f; 0x1a; 0xc1; 0xdd; 0x58;
    0xff; 0x55; 0x09; 0x09; 0xf1; 0x10; 0x86; 0xa0; 0x42; 0x98; 0x23; 0x22; 0x43; 0x60; 0xb3; 0xe8;
    0xf2; 0xe9; 0xcc; 0x1c; 0xbe; 0x04; 0x1a; 0xf5; 0x80; 0x41; 0x20; 0x1b; 0x78; 0x5a; 0x15; 0x7f;
    0xbb; 0xce; 0x85; 0xbc; 0xb8; 0x69; 0x89; 0x60; 0xf2; 0xf6; 0x68; 0x85; 0x23; 0x84; 0x49; 0xa5;
    0x79; 0xbe; 0xa7; 0x32; 0x98; 0xa9; 0x50; 0xb3; 0x32; 0xec; 0x8e; 0x44; 0xf5; 0xa9; 0x55; 0x8b;
    0x41; 0x70; 0x5f; 0x88; 0x88; 0x90; 0x9f; 0x13; 0x4c; 0x8e; 0x5a; 0x92; 0xd3; 0x2d; 0x48; 0x49;
    0x65; 0x3c; 0x06; 0x41; 0x9e; 0x1f; 0xdb; 0xc0; 0x25; 0x4f; 0xbb; 0x20; 0x98; 0x11; 0x2a; 0xa5;
    0x5f; 0xc9; 0x1f; 0x66; 0xe7; 0xbc; 0x3b; 0x68; 0xda; 0xb9; 0x47; 0xa1; 0x62; 0x59; 0xb4; 0x72;
    0xb4; 0xa8; 0x82; 0xf6; 0x7c; 0xc7; 0xec; 0x9f; 0xba; 0xc5; 0x5f; 0xf7; 0xdb; 0x4d; 0xe1; 0x9c;
    0xf1; 0xcc; 0x1d; 0x4d; 0x04; 0xa9; 0x2f; 0xeb; 0x16; 0x1d; 0x0d; 0xfa; 0x57; 0xc0; 0x94; 0x8f;
    0xbc; 0x11; 0x98; 0x44; 0xab; 0x4c; 0x68; 0xc4; 0x9a; 0x51; 0xed; 0x97; 0x6b; 0x12; 0x2f; 0xf2;
    0xda; 0x68; 0x33; 0xd3; 0x24; 0x53; 0x11; 0x9c; 0x32; 0xc6; 0xb2; 0xc1; 0x3a; 0x76; 0xe9; 0x93;
    0x2c; 0xd7; 0xd9; 0xec; 0x60; 0x20; 0x39; 0xe7; 0x7f; 0x26; 0x5c; 0xd4; 0xc7; 0xf0; 0xdf; 0xc4;
    0xe9; 0x7b; 0x09; 0xbf; 0xfa; 0xbd; 0xce; 0x8c; 0x1a; 0x84; 0xae; 0xfd; 0x41; 0x9c; 0x9c; 0x02;
    0x69; 0x34; 0xf4; 0x27; 0x9d; 0x87; 0x23; 0xf9; 0x69; 0xa8; 0xc1; 0x24; 0xca; 0x44; 0x9b; 0x6c;
    0x4a; 0x23; 0x41; 0x17; 0x9f; 0x82; 0xfe; 0x74; 0xe5; 0x3a; 0x6e; 0x15; 0xbf; 0xeb; 0x8f; 0xb6;
    0x51; 0x54; 0x86; 0xc5; 0xf7; 0xea; 0x2e; 0xbc; 0x63; 0x2a; 0x18; 0x85; 0x72; 0x4d; 0x6f; 0x56;
    0x3b; 0xa1; 0x66; 0x73; 0xfa; 0x59; 0x8a; 0xec; 0xc1; 0x6d; 0x49; 0xc3; 0x30; 0xf1; 0x0e; 0x3f;
    0x07; 0xb3; 0x4d; 0x58; 0x36; 0xe8; 0xeb; 0xb2; 0xef; 0x9d; 0x84; 0x1e; 0x5d; 0xbc; 0xad; 0xa6;
    0x4a; 0x46; 0x6f; 0x91; 0xce; 0x14; 0xa5; 0x85; 0x69; 0x33; 0x86; 0xa9; 0x57; 0x85; 0x15; 0x08;
    0xee; 0x76; 0x3b; 0x6b; 0x64; 0x74; 0xe4; 0xf7; 0x4d; 0x0f; 0xd5; 0x92; 0x43; 0x12; 0xae; 0xbb;
    0x37; 0xc4; 0x13; 0x92; 0xe6; 0xd6; 0x46; 0xc0; 0xa0; 0xa7; 0xa8; 0xf2; 0x39; 0x45; 0x72; 0xac;
    0x5c; 0xa9; 0x94; 0x88; 0x2a; 0xaa; 0x23; 0x5c; 0x49; 0x86; 0x2a; 0xe4; 0x7b; 0xb1; 0xc1; 0x4f;
    0xae; 0x9a; 0xa2; 0x13; 0x15; 0xf9; 0x20; 0x39; 0x85; 0x0a; 0x3c; 0x9d; 0xc6; 0x16; 0x3e; 0x0c;
    0xfb; 0xc8; 0xff; 0xcc; 0x3d; 0xbf; 0x11; 0x24; 0x79; 0xe1; 0xea; 0xf8; 0xb7; 0x98; 0xd6; 0x35;
    0xbc; 0xb5; 0x78; 0x7d; 0xcd; 0x89; 0x70; 0xb2; 0xba; 0x53; 0xea; 0x38; 0xa0; 0xa4; 0xc1; 0x49;
    0xc1; 0xf5; 0x6c; 0xa7; 0x04; 0x81; 0x12; 0x99; 0x37; 0x21; 0x93; 0xdb; 0x0e; 0x38; 0xc3; 0xd8;
    0x4a; 0xc7; 0xf6; 0x5d; 0x5d; 0x1f; 0xd1; 0x58; 0xd7; 0xdf; 0x86; 0xa0; 0xcd; 0xfc; 0xb5; 0xf1;
    0xae; 0x0f; 0x60; 0x6a; 0x39; 0x73; 0xe4; 0x70; 0xa7; 0xf0; 0x77; 0x59; 0x9d; 0x0c; 0x0e; 0x14;
    0xa1; 0x5e; 0xd5; 0xe8; 0x6e; 0x82; 0x8c; 0xf9; 0x94; 0x61; 0xb6; 0x2c; 0x0e; 0x26; 0x59; 0xdd;
    0xe6; 0x79; 0xdc; 0x21; 0xcf; 0xe1; 0x5d; 0x69; 0xff; 0x0e; 0x93; 0x28; 0x3a; 0x86; 0xa5; 0x47;
    0xd8; 0xac; 0x50; 0x81; 0x2c; 0x95; 0x67; 0x5d; 0xf7; 0x27; 0xfd; 0xa5; 0x20; 0xc3; 0x85; 0x6d;
    0x4c; 0xf2; 0xd0; 0xe6; 0x9f; 0x73; 0xef; 0xd1; 0x7f; 0x84; 0xd5; 0xa1; 0x0c; 0x87; 0xbe; 0xef;
    0xcc; 0xf8; 0xb0; 0x3f; 0x7b; 0x30; 0x43; 0x6a; 0xd0; 0x5d; 0xaf; 0x78; 0x89; 0x19; 0x03; 0x09;
    0xee; 0xe1; 0x60; 0x7e; 0xf0; 0x74; 0x87; 0x22; 0xc1; 0x6d; 0x8e; 0x20; 0x34; 0x82; 0x87; 0x23;
    0x45; 0x17; 0xf2; 0x2d; 0x95; 0xc4; 0xc5; 0x42; 0xb9; 0xa1; 0x07; 0x4c; 0x89; 0xd7; 0xf2; 0x9b;
    0xdf; 0xf3; 0xac; 0xae; 0x9c; 0x13; 0x5d; 0x07; 0xd5; 0x7e; 0x66; 0x34; 0xd6; 0x15; 0x6e; 0xd4;
    0x5d; 0x50; 0x7d; 0xab; 0x17; 0x02; 0x58; 0x95; 0xaf; 0xc6; 0x17; 0x2f; 0xfc; 0xdc; 0x5a; 0xbe;
    0x5a; 0xcb; 0x50; 0x85; 0x7d; 0x7d; 0x3b; 0x2a; 0xbb; 0x29; 0xd6; 0xff; 0xec; 0x4c; 0xcf; 0x8e;
    0xfa; 0xc1; 0xb5; 0x97; 0x15; 0x07; 0xe8; 0x62; 0x27; 0x1d; 0x28; 0x3d; 0x81; 0x5a; 0xf0; 0x0d;
    0x98; 0x49; 0x33; 0x26; 0xdc; 0x56; 0x28; 0x88; 0xdd; 0x1c; 0x98; 0x52; 0xca; 0x99; 0xbf; 0xbc;
    0xc2; 0xf4; 0x29; 0x85; 0x5f; 0x5c; 0x56; 0x53; 0xa4; 0x03; 0x02; 0xca; 0x50; 0x45; 0xed; 0x96;
    0x10; 0x42; 0x94; 0x5a; 0x14; 0x4e; 0xb8; 0x59; 0x81; 0x04; 0x9a; 0x3e; 0xae; 0x63; 0xf6; 0xcc;
    0x17; 0xca; 0xb3; 0xf9; 0x32; 0xc6; 0x7e; 0x56; 0x3b; 0x7c; 0xa4; 0xf1; 0x2c; 0x37; 0xb2; 0x6e;
    0x78; 0x09; 0x9b; 0x52; 0x0e; 0x55; 0xfd; 0xc2; 0xe2; 0x7c; 0xc4; 0x95; 0xad; 0xe5; 0x20; 0x6a;
    0x12; 0x47; 0x41; 0x7e; 0x02; 0x88; 0x1a; 0x93; 0xe9; 0x5d; 0x86; 0x4f; 0x53; 0x17; 0x76; 0x33;
    0x15; 0x2e; 0x75; 0x3b; 0x77; 0x9b; 0x00; 0x1d; 0xc1; 0x27; 0xbb; 0x88; 0x73; 0x53; 0x71; 0xc7;
    0x7b; 0xa4; 0x78; 0xe9; 0xdf; 0x49; 0xe5; 0xcc; 0xb9; 0xc5; 0x91; 0x10; 0x5c; 0x3c; 0xd9; 0xb5;
    0x98; 0xb3; 0x63; 0x4c; 0xc8; 0x2f; 0x24; 0x16; 0x5d; 0xad; 0x11; 0x83; 0x9b; 0xe1; 0xb8; 0x1e;
    0x11; 0xd9; 0x45; 0xe1; 0xd6; 0x90; 0x91; 0xaa; 0x94; 0x8a; 0xb3; 0xc0; 0x4d; 0x7a; 0x76; 0xcb;
    0x44; 0x02; 0x3a; 0x8d; 0x9a; 0x18; 0xbc; 0x6c ])
  in
  assert_norm (List.Tot.length l == v crypto_ciphertextbytes);
  createL_global l

let test1_sk_expected: b:lbytes crypto_secretkeybytes{ recallable b } =
  [@ inline_let]
  let l:list uint8 =
   normalize_term (List.Tot.map u8
   [0x4b; 0x62; 0x2d; 0xe1; 0x35; 0x01; 0x19; 0xc4; 0x5a; 0x9f; 0x2e; 0x2e; 0xf3; 0xdc; 0x5d; 0xf5;
    0x92; 0x44; 0x4d; 0x91; 0xa2; 0xad; 0xad; 0x05; 0x2c; 0xa2; 0x3d; 0xe5; 0xfb; 0x9d; 0xf9; 0xe1;
    0x95; 0xe3; 0x8f; 0xc2; 0x21; 0xb8; 0xb8; 0x34; 0x14; 0xfb; 0xd3; 0xef; 0x7c; 0xa2; 0x6b; 0x36;
    0x8c; 0x7b; 0x9d; 0x81; 0x78; 0xc9; 0x49; 0x64; 0x4d; 0x79; 0xfd; 0x8b; 0x19; 0xb9; 0x51; 0x4c;
    0xce; 0x27; 0x4d; 0x64; 0xaa; 0xe0; 0x29; 0x69; 0x10; 0xaa; 0x9f; 0x49; 0xac; 0x16; 0x1d; 0xbc;
    0x4e; 0xa0; 0x85; 0xf4; 0xf4; 0x58; 0x3a; 0xb9; 0xaa; 0xa9; 0xbd; 0x30; 0xf3; 0xc9; 0x1b; 0x6b;
    0x4d; 0x26; 0xfe; 0x4b; 0x3e; 0xc1; 0x88; 0xeb; 0xde; 0x99; 0x0a; 0xa9; 0xb1; 0x27; 0xc0; 0x28;
    0x96; 0x65; 0xfe; 0x3a; 0xf9; 0x0e; 0x67; 0x7a; 0x7f; 0x10; 0x4c; 0x16; 0xae; 0x2c; 0x0c; 0x72;
    0x62; 0x5b; 0x4d; 0x3c; 0x12; 0x21; 0x9a; 0x7e; 0x8f; 0x07; 0x51; 0xe0; 0x86; 0x3e; 0x33; 0x98;
    0x9b; 0x81; 0x2a; 0x96; 0x99; 0xe2; 0xf9; 0x99; 0x4f; 0x28; 0x0b; 0x76; 0xcb; 0x32; 0xb8; 0xea;
    0x77; 0xad; 0xa3; 0xe9; 0xad; 0x82; 0x76; 0xe3; 0x8c; 0x4f; 0x71; 0x8f; 0xd8; 0xd4; 0xad; 0xb4;
    0x5b; 0x3f; 0x84; 0xb3; 0xef; 0x91; 0x01; 0xb4; 0xaa; 0xfe; 0x7b; 0xda; 0xe3; 0x6b; 0x9e; 0x02;
    0xc2; 0xb7; 0x35; 0xec; 0x77; 0x15; 0xe1; 0x13; 0x95; 0x68; 0xd4; 0x18; 0x44; 0x29; 0x78; 0x55;
    0x47; 0xf5; 0x50; 0x98; 0x8e; 0xf3; 0x01; 0xa1; 0x71; 0xf5; 0x18; 0xa6; 0xd1; 0xfa; 0xac; 0x90;
    0xe1; 0xa8; 0x4d; 0x83; 0xd7; 0xcd; 0xc5; 0x14; 0x1d; 0xce; 0x24; 0x9e; 0xc4; 0x7b; 0x15; 0x9f;
    0x07; 0x3d; 0x85; 0xf6; 0x1b; 0x0d; 0xe6; 0xc1; 0x3f; 0x1e; 0x3f; 0x6c; 0x0a; 0xc7; 0x2d; 0xa4;
    0x9d; 0xb2; 0x6e; 0x2c; 0xba; 0xb8; 0x6f; 0xab; 0x34; 0x3a; 0x48; 0xab; 0x2f; 0x75; 0xab; 0x48;
    0x21; 0x8e; 0x59; 0x9d; 0xd0; 0xf7; 0xcd; 0x2d; 0xed; 0xc4; 0xb9; 0xae; 0x1b; 0x30; 0xf1; 0xc6;
    0x94; 0x21; 0xa7; 0x81; 0x58; 0xcf; 0x0e; 0x7a; 0xf0; 0xb5; 0x44; 0x42; 0x1a; 0xd4; 0x22; 0xfa;
    0x18; 0x0d; 0x2c; 0x05; 0xd3; 0x74; 0xeb; 0x90; 0x11; 0x25; 0xaf; 0x00; 0x3e; 0xe7; 0xbe; 0xf1;
    0x1e; 0xaf; 0x6d; 0xd0; 0x7f; 0xa4; 0x12; 0xcf; 0x4f; 0xc4; 0x65; 0xaa; 0x07; 0x73; 0x5f; 0x22;
    0xa0; 0x32; 0xd4; 0xd5; 0xe5; 0x28; 0x47; 0x2e; 0xb5; 0xc1; 0x2d; 0x58; 0xc2; 0xe9; 0x83; 0xcd;
    0x41; 0xa0; 0x82; 0x63; 0x92; 0x76; 0xc3; 0x51; 0x05; 0xf0; 0x6f; 0x18; 0xed; 0xb7; 0x7b; 0x87;
    0xcb; 0x90; 0x16; 0x63; 0x3b; 0x67; 0xc1; 0x3a; 0xbb; 0x66; 0x0b; 0xcd; 0x9d; 0x9b; 0x38; 0x7f;
    0xa1; 0x91; 0x14; 0x07; 0x7f; 0xcf; 0x1f; 0x11; 0x31; 0xf7; 0x95; 0x89; 0xf7; 0x35; 0x34; 0x11;
    0xa5; 0x5c; 0xab; 0x70; 0x05; 0xdd; 0x38; 0xc1; 0x7a; 0x42; 0x89; 0x6d; 0x13; 0xdc; 0x16; 0xaa;
    0xbc; 0x43; 0xc2; 0x20; 0x0f; 0xd2; 0x21; 0x3e; 0x15; 0x76; 0x6f; 0x82; 0xef; 0x29; 0x96; 0x4c;
    0xd5; 0xf4; 0x79; 0x3a; 0x29; 0x54; 0xab; 0xc3; 0x37; 0xbb; 0x8c; 0x2a; 0x86; 0x5d; 0x76; 0x31;
    0xc8; 0xc1; 0x30; 0x47; 0x7a; 0xce; 0x37; 0xf0; 0xe0; 0xe3; 0x64; 0x6a; 0xdd; 0xb1; 0x7d; 0x59;
    0x17; 0xee; 0xd5; 0xfb; 0xa9; 0x1b; 0xd6; 0x1f; 0x70; 0x21; 0xa7; 0xdc; 0x55; 0x63; 0xff; 0xdd;
    0xe5; 0xb5; 0x52; 0xc5; 0x7d; 0x41; 0x7e; 0x8a; 0xdf; 0xc1; 0xf6; 0x03; 0x8f; 0xc7; 0x52; 0xa3;
    0xc7; 0x66; 0x79; 0x55; 0xed; 0x0e; 0x40; 0x59; 0xbc; 0x60; 0x13; 0x86; 0xb4; 0x88; 0x8c; 0xba;
    0x9b; 0x80; 0x8a; 0x2b; 0x4e; 0x80; 0x92; 0xe1; 0xd2; 0x84; 0x93; 0xb6; 0xc8; 0xb3; 0x23; 0x1d;
    0xd3; 0xf7; 0xdd; 0xa6; 0x39; 0x1a; 0x65; 0x08; 0x0f; 0x95; 0x78; 0x89; 0xaf; 0xab; 0xb9; 0x9d;
    0x32; 0x89; 0x82; 0x07; 0xf2; 0x1d; 0xc0; 0xba; 0x30; 0x01; 0x42; 0x9a; 0xcc; 0x8e; 0x16; 0x7a;
    0xc0; 0xd7; 0x4a; 0x91; 0xe0; 0x46; 0xf5; 0xae; 0xe0; 0xed; 0x0a; 0x2c; 0xe1; 0xaf; 0x40; 0xf1;
    0x4d; 0x18; 0x71; 0x5e; 0xd3; 0x6c; 0x9c; 0x52; 0x70; 0xfd; 0xd2; 0xac; 0x05; 0xf6; 0xcb; 0x22;
    0x9f; 0x04; 0x8d; 0xd0; 0x25; 0xe1; 0xfb; 0xed; 0x19; 0x7e; 0x65; 0x51; 0x60; 0xcc; 0x88; 0xce;
    0xda; 0xf5; 0xad; 0xfd; 0x63; 0xd2; 0x62; 0x3f; 0x98; 0x05; 0xbf; 0xd9; 0xae; 0x16; 0x90; 0xdb;
    0x1e; 0x15; 0x2e; 0xb0; 0xcd; 0x95; 0x8c; 0x27; 0x6a; 0xd9; 0x1b; 0xc1; 0xdd; 0x02; 0xa9; 0x92;
    0x9a; 0x9e; 0x2b; 0x25; 0xeb; 0x82; 0x65; 0xcf; 0x5e; 0x25; 0x8c; 0x5e; 0xc3; 0x2a; 0x85; 0x50;
    0x67; 0x78; 0x6c; 0xe5; 0x8f; 0xdb; 0x56; 0xd3; 0x73; 0x64; 0x83; 0xaa; 0xe6; 0x97; 0x2d; 0x90;
    0x9c; 0xb3; 0x59; 0xf5; 0xee; 0x59; 0xe3; 0x05; 0xb1; 0xa1; 0x45; 0x4c; 0xcf; 0x94; 0x3e; 0x5c;
    0x15; 0x06; 0xf9; 0x5c; 0xc3; 0x82; 0x22; 0x71; 0x2b; 0x42; 0xb5; 0xd5; 0x44; 0x8f; 0xf8; 0x64;
    0x54; 0x75; 0x03; 0xcf; 0xdd; 0x91; 0x6b; 0x05; 0x09; 0x24; 0x7f; 0xd5; 0x97; 0x3e; 0xa4; 0x7c;
    0x65; 0x0a; 0x42; 0x6b; 0x64; 0xa2; 0xd8; 0x81; 0x4f; 0xc0; 0xec; 0xd8; 0x79; 0x4c; 0xcb; 0x9c;
    0x27; 0xbc; 0x60; 0x6f; 0xe2; 0x49; 0x9b; 0x44; 0x93; 0x6d; 0xa4; 0x74; 0x04; 0x1c; 0x81; 0xf9;
    0x01; 0x8f; 0xd2; 0x4d; 0xad; 0x07; 0x9a; 0xbb; 0x11; 0xc8; 0x76; 0x64; 0x29; 0xfe; 0xa4; 0x1a;
    0x25; 0x05; 0x4a; 0xaf; 0x59; 0xa9; 0x88; 0xf7; 0x73; 0x12; 0x60; 0xd4; 0x12; 0x01; 0x68; 0xf5;
    0xbe; 0xc5; 0xb2; 0x7b; 0xdc; 0xeb; 0x96; 0xec; 0x43; 0x5d; 0xc2; 0x07; 0xb4; 0x1d; 0xf7; 0x78;
    0xa7; 0x82; 0x8d; 0x10; 0x0b; 0x90; 0xeb; 0x5c; 0x1e; 0x49; 0x7b; 0xdd; 0x56; 0xc7; 0x5f; 0x0f;
    0x8f; 0x9a; 0x21; 0xcf; 0xa4; 0x63; 0x20; 0x0c; 0xe5; 0xf7; 0xc2; 0xdf; 0xf1; 0xec; 0xf3; 0x94;
    0x5b; 0xad; 0x29; 0xdd; 0x0b; 0x43; 0x19; 0xab; 0x93; 0xec; 0x7d; 0x50; 0x6b; 0x67; 0xf5; 0x2f;
    0xf1; 0xe7; 0x4b; 0xe2; 0x35; 0x41; 0x47; 0xd8; 0xcf; 0x9a; 0xbb; 0x38; 0x3a; 0x37; 0xc3; 0x61;
    0x43; 0xa4; 0x41; 0xab; 0x4d; 0x9b; 0xd9; 0xbf; 0x19; 0x6e; 0x66; 0xa1; 0xfd; 0xef; 0x54; 0x6f;
    0xef; 0x1e; 0xe0; 0x26; 0xab; 0xe3; 0xf5; 0xe7; 0x22; 0xd0; 0x84; 0x6e; 0x78; 0x90; 0x70; 0xc3;
    0x87; 0x6a; 0x68; 0xb8; 0x5f; 0x80; 0x10; 0xb3; 0x8f; 0x56; 0xff; 0x16; 0xf9; 0x88; 0x67; 0x1a;
    0x51; 0x3c; 0xf8; 0x27; 0x40; 0xbb; 0x69; 0x6e; 0xcb; 0x80; 0xa4; 0x0d; 0xb6; 0xb2; 0x66; 0xbd;
    0xa2; 0xcb; 0xfe; 0xd7; 0x67; 0x5f; 0xfa; 0x85; 0xd0; 0x98; 0x1e; 0x5d; 0x35; 0x01; 0x91; 0x3f;
    0x91; 0x46; 0xac; 0xcd; 0x82; 0xd3; 0xe1; 0x5c; 0x53; 0x66; 0xa7; 0xa1; 0x00; 0xd5; 0x34; 0x3f;
    0x1e; 0x1e; 0x0f; 0x1c; 0xef; 0x5d; 0x2e; 0x79; 0x28; 0x02; 0xbe; 0x9b; 0x8b; 0xfa; 0x5a; 0x0a;
    0xf3; 0xfc; 0x8c; 0xdc; 0xbd; 0xa3; 0xb6; 0xd3; 0x5b; 0xe0; 0xfb; 0xee; 0x63; 0xd3; 0x72; 0x5a;
    0xfb; 0xff; 0x03; 0x00; 0x00; 0x00; 0x03; 0x00; 0xfe; 0xff; 0xfd; 0xff; 0x01; 0x00; 0xff; 0xff;
    0x02; 0x00; 0x02; 0x00; 0xfe; 0xff; 0x01; 0x00; 0x03; 0x00; 0xff; 0xff; 0xfb; 0xff; 0xfe; 0xff;
    0x06; 0x00; 0x06; 0x00; 0x01; 0x00; 0xfc; 0xff; 0xfd; 0xff; 0x00; 0x00; 0x00; 0x00; 0x01; 0x00;
    0xff; 0xff; 0x00; 0x00; 0xfc; 0xff; 0x02; 0x00; 0x04; 0x00; 0x01; 0x00; 0x02; 0x00; 0xff; 0xff;
    0x02; 0x00; 0x03; 0x00; 0x01; 0x00; 0xfe; 0xff; 0x04; 0x00; 0xfe; 0xff; 0x06; 0x00; 0xff; 0xff;
    0x03; 0x00; 0x00; 0x00; 0xfd; 0xff; 0x00; 0x00; 0x00; 0x00; 0x00; 0x00; 0xff; 0xff; 0x01; 0x00;
    0xfd; 0xff; 0xfe; 0xff; 0x00; 0x00; 0xfe; 0xff; 0x04; 0x00; 0xfd; 0xff; 0xfd; 0xff; 0x00; 0x00;
    0xff; 0xff; 0xfb; 0xff; 0x00; 0x00; 0x01; 0x00; 0xfe; 0xff; 0xfb; 0xff; 0x02; 0x00; 0x00; 0x00;
    0x00; 0x00; 0xfe; 0xff; 0xfe; 0xff; 0xff; 0xff; 0x06; 0x00; 0xff; 0xff; 0x00; 0x00; 0xfe; 0xff;
    0x01; 0x00; 0x02; 0x00; 0x01; 0x00; 0x01; 0x00; 0x01; 0x00; 0xff; 0xff; 0xff; 0xff; 0x01; 0x00;
    0xfb; 0xff; 0x05; 0x00; 0x02; 0x00; 0xfd; 0xff; 0x02; 0x00; 0x05; 0x00; 0xfd; 0xff; 0x04; 0x00;
    0x02; 0x00; 0x04; 0x00; 0xfb; 0xff; 0xfe; 0xff; 0x01; 0x00; 0x02; 0x00; 0xfc; 0xff; 0x03; 0x00;
    0x00; 0x00; 0x01; 0x00; 0x02; 0x00; 0xff; 0xff; 0xff; 0xff; 0xff; 0xff; 0xfc; 0xff; 0x01; 0x00;
    0xff; 0xff; 0x01; 0x00; 0xfd; 0xff; 0x03; 0x00; 0x00; 0x00; 0x04; 0x00; 0xff; 0xff; 0xfc; 0xff;
    0x01; 0x00; 0x03; 0x00; 0xff; 0xff; 0x00; 0x00; 0x01; 0x00; 0x02; 0x00; 0xfd; 0xff; 0xfe; 0xff;
    0x01; 0x00; 0xff; 0xff; 0x03; 0x00; 0xff; 0xff; 0xff; 0xff; 0xfe; 0xff; 0xfd; 0xff; 0x01; 0x00;
    0xfe; 0xff; 0x03; 0x00; 0x02; 0x00; 0xff; 0xff; 0x01; 0x00; 0xfe; 0xff; 0x00; 0x00; 0xff; 0xff;
    0xfd; 0xff; 0xff; 0xff; 0x01; 0x00; 0xff; 0xff; 0x02; 0x00; 0x02; 0x00; 0xfe; 0xff; 0x00; 0x00;
    0x00; 0x00; 0x01; 0x00; 0xfa; 0xff; 0x02; 0x00; 0x04; 0x00; 0xfd; 0xff; 0xff; 0xff; 0x02; 0x00;
    0x03; 0x00; 0x08; 0x00; 0xfb; 0xff; 0x03; 0x00; 0x00; 0x00; 0xfd; 0xff; 0x08; 0x00; 0x04; 0x00;
    0xfd; 0xff; 0x02; 0x00; 0x02; 0x00; 0x01; 0x00; 0x04; 0x00; 0x00; 0x00; 0xfd; 0xff; 0xff; 0xff;
    0xff; 0xff; 0x00; 0x00; 0x01; 0x00; 0x02; 0x00; 0x00; 0x00; 0x00; 0x00; 0x00; 0x00; 0x04; 0x00;
    0xff; 0xff; 0x01; 0x00; 0xff; 0xff; 0x01; 0x00; 0xfd; 0xff; 0x01; 0x00; 0xff; 0xff; 0x01; 0x00;
    0x01; 0x00; 0x06; 0x00; 0xfe; 0xff; 0x01; 0x00; 0xfd; 0xff; 0xfe; 0xff; 0x00; 0x00; 0x02; 0x00;
    0xfc; 0xff; 0xff; 0xff; 0x00; 0x00; 0xff; 0xff; 0x02; 0x00; 0x00; 0x00; 0xfd; 0xff; 0xfe; 0xff;
    0x05; 0x00; 0x05; 0x00; 0xfe; 0xff; 0x03; 0x00; 0x02; 0x00; 0x04; 0x00; 0x00; 0x00; 0x01; 0x00;
    0x05; 0x00; 0x02; 0x00; 0xfc; 0xff; 0xfe; 0xff; 0x01; 0x00; 0xff; 0xff; 0xff; 0xff; 0x02; 0x00;
    0xff; 0xff; 0xfc; 0xff; 0xfe; 0xff; 0x02; 0x00; 0xfc; 0xff; 0xfe; 0xff; 0xfd; 0xff; 0xfc; 0xff;
    0x02; 0x00; 0xff; 0xff; 0x00; 0x00; 0x00; 0x00; 0xfc; 0xff; 0x04; 0x00; 0x01; 0x00; 0x04; 0x00;
    0xfd; 0xff; 0xff; 0xff; 0xfb; 0xff; 0xfd; 0xff; 0xff; 0xff; 0x04; 0x00; 0x03; 0x00; 0x00; 0x00;
    0x00; 0x00; 0xfc; 0xff; 0x01; 0x00; 0xfd; 0xff; 0xff; 0xff; 0xfd; 0xff; 0x03; 0x00; 0xff; 0xff;
    0xfe; 0xff; 0x05; 0x00; 0x01; 0x00; 0x03; 0x00; 0xfa; 0xff; 0x02; 0x00; 0x00; 0x00; 0xfe; 0xff;
    0xfe; 0xff; 0x02; 0x00; 0xfe; 0xff; 0xfd; 0xff; 0xff; 0xff; 0x01; 0x00; 0x04; 0x00; 0x01; 0x00;
    0x01; 0x00; 0x06; 0x00; 0x04; 0x00; 0xff; 0xff; 0x02; 0x00; 0xfc; 0xff; 0x01; 0x00; 0x02; 0x00;
    0xff; 0xff; 0x00; 0x00; 0x01; 0x00; 0x00; 0x00; 0x00; 0x00; 0xfe; 0xff; 0xfe; 0xff; 0x02; 0x00;
    0xff; 0xff; 0xff; 0xff; 0x05; 0x00; 0x01; 0x00; 0xfe; 0xff; 0x01; 0x00; 0x02; 0x00; 0x01; 0x00;
    0xfe; 0xff; 0xfd; 0xff; 0x01; 0x00; 0xfe; 0xff; 0x03; 0x00; 0x03; 0x00; 0x02; 0x00; 0x04; 0x00;
    0x06; 0x00; 0x01; 0x00; 0x00; 0x00; 0xfe; 0xff; 0xfe; 0xff; 0x02; 0x00; 0xfe; 0xff; 0x02; 0x00;
    0x00; 0x00; 0x00; 0x00; 0x01; 0x00; 0x01; 0x00; 0x00; 0x00; 0x03; 0x00; 0xfc; 0xff; 0xfe; 0xff;
    0xff; 0xff; 0xfb; 0xff; 0xfd; 0xff; 0x04; 0x00; 0x01; 0x00; 0x02; 0x00; 0x01; 0x00; 0xff; 0xff;
    0xfe; 0xff; 0xff; 0xff; 0xfc; 0xff; 0xfc; 0xff; 0x06; 0x00; 0x00; 0x00; 0xfd; 0xff; 0xfd; 0xff;
    0xff; 0xff; 0xfe; 0xff; 0xff; 0xff; 0xff; 0xff; 0x03; 0x00; 0xfb; 0xff; 0x02; 0x00; 0x02; 0x00;
    0xfd; 0xff; 0xfd; 0xff; 0x02; 0x00; 0x02; 0x00; 0x02; 0x00; 0x03; 0x00; 0xfc; 0xff; 0xfb; 0xff;
    0x01; 0x00; 0x04; 0x00; 0x03; 0x00; 0x00; 0x00; 0xfd; 0xff; 0xfd; 0xff; 0xfd; 0xff; 0xff; 0xff;
    0x00; 0x00; 0x01; 0x00; 0xf8; 0xff; 0x01; 0x00; 0x00; 0x00; 0xfe; 0xff; 0xfc; 0xff; 0x01; 0x00;
    0x02; 0x00; 0xfe; 0xff; 0xff; 0xff; 0xff; 0xff; 0x04; 0x00; 0x02; 0x00; 0xfd; 0xff; 0x01; 0x00;
    0xfd; 0xff; 0x04; 0x00; 0x00; 0x00; 0x00; 0x00; 0x01; 0x00; 0x00; 0x00; 0x00; 0x00; 0x02; 0x00;
    0x01; 0x00; 0x03; 0x00; 0x03; 0x00; 0xfa; 0xff; 0x03; 0x00; 0x00; 0x00; 0x02; 0x00; 0xff; 0xff;
    0x01; 0x00; 0xfe; 0xff; 0x01; 0x00; 0x04; 0x00; 0x03; 0x00; 0x01; 0x00; 0xfe; 0xff; 0xfd; 0xff;
    0xff; 0xff; 0xff; 0xff; 0x01; 0x00; 0x05; 0x00; 0x02; 0x00; 0x02; 0x00; 0xfd; 0xff; 0x02; 0x00;
    0xfe; 0xff; 0x03; 0x00; 0x01; 0x00; 0x01; 0x00; 0x00; 0x00; 0x03; 0x00; 0x03; 0x00; 0xfe; 0xff;
    0x00; 0x00; 0x02; 0x00; 0xfc; 0xff; 0x02; 0x00; 0x02; 0x00; 0xfe; 0xff; 0x04; 0x00; 0x01; 0x00;
    0x06; 0x00; 0xfd; 0xff; 0xfd; 0xff; 0x03; 0x00; 0x00; 0x00; 0xfd; 0xff; 0xfe; 0xff; 0xff; 0xff;
    0xff; 0xff; 0xfe; 0xff; 0x07; 0x00; 0x01; 0x00; 0xff; 0xff; 0xff; 0xff; 0x01; 0x00; 0xfc; 0xff;
    0xfd; 0xff; 0x01; 0x00; 0xff; 0xff; 0x03; 0x00; 0xff; 0xff; 0x00; 0x00; 0x03; 0x00; 0xff; 0xff;
    0x02; 0x00; 0xff; 0xff; 0x00; 0x00; 0xfe; 0xff; 0xff; 0xff; 0xfe; 0xff; 0x02; 0x00; 0xfb; 0xff;
    0xfc; 0xff; 0x01; 0x00; 0xff; 0xff; 0x01; 0x00; 0x02; 0x00; 0xfd; 0xff; 0xfe; 0xff; 0xfb; 0xff;
    0x00; 0x00; 0xff; 0xff; 0x03; 0x00; 0x01; 0x00; 0x03; 0x00; 0x01; 0x00; 0x01; 0x00; 0x01; 0x00;
    0xff; 0xff; 0xfa; 0xff; 0x03; 0x00; 0x00; 0x00; 0x00; 0x00; 0xfb; 0xff; 0xff; 0xff; 0x02; 0x00;
    0xff; 0xff; 0x00; 0x00; 0xfe; 0xff; 0x05; 0x00; 0x05; 0x00; 0x01; 0x00; 0xfe; 0xff; 0x01; 0x00;
    0x01; 0x00; 0x03; 0x00; 0xfe; 0xff; 0xff; 0xff; 0xfe; 0xff; 0x05; 0x00; 0x02; 0x00; 0xfc; 0xff;
    0xfe; 0xff; 0x05; 0x00; 0x01; 0x00; 0x00; 0x00; 0xfc; 0xff; 0x02; 0x00; 0xfe; 0xff; 0x01; 0x00;
    0xfc; 0xff; 0x02; 0x00; 0x01; 0x00; 0x03; 0x00; 0x00; 0x00; 0xff; 0xff; 0xfb; 0xff; 0xfd; 0xff;
    0x00; 0x00; 0x02; 0x00; 0x02; 0x00; 0xfb; 0xff; 0xfd; 0xff; 0xfd; 0xff; 0xff; 0xff; 0x01; 0x00])
  in
  assert_norm (List.Tot.length l == v crypto_secretkeybytes);
  createL_global l

#reset-options "--z3rlimit 50 --max_fuel 0 --max_ifuel 0 --using_facts_from '* -FStar.Seq'"

let seed: b:lbytes (size 48){ recallable b } =
  [@ inline_let]
  let l:list uint8 =
   normalize_term (List.Tot.map u8
   [0x64; 0x33; 0x5b; 0xf2; 0x9e; 0x5d; 0xe6; 0x28;
    0x42; 0xc9; 0x41; 0x76; 0x6b; 0xa1; 0x29; 0xb0;
    0x64; 0x3b; 0x5e; 0x71; 0x21; 0xca; 0x26; 0xcf;
    0xc1; 0x90; 0xec; 0x7d; 0xc3; 0x54; 0x38; 0x30;
    0x55; 0x7f; 0xdd; 0x5c; 0x03; 0xcf; 0x12; 0x3a;
    0x45; 0x6d; 0x48; 0xef; 0xea; 0x43; 0xc8; 0x68])
  in
  assert_norm (List.Tot.length l == 48);
  createL_global l

val main: unit -> St C.exit_code
let main () =
  recall seed;
  recall test1_ss_expected;
  recall test1_pk_expected;
  recall test1_ct_expected;
  recall test1_sk_expected;
  test_frodo seed test1_ss_expected test1_pk_expected  test1_ct_expected test1_sk_expected;
  C.EXIT_SUCCESS
