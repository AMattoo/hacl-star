[
  "O\u0016ZàTSÇ°áÂ¤ŽÁ%Fò",
  [
    [
      "Hacl.Tube.Receive.lemma_max_uint8",
      1,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint8",
      2,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint8",
      3,
      0,
      1,
      [
        "@query", "lemma_Box.Ideal.lemma_max_uint8",
        "primitive_Prims.op_Equality", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint8",
      4,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint32",
      1,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint32",
      2,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint32",
      3,
      0,
      1,
      [
        "@query", "lemma_Box.Ideal.lemma_max_uint32",
        "primitive_Prims.op_Equality", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint32",
      4,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint64",
      1,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint64",
      2,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint64",
      3,
      0,
      1,
      [
        "@query", "lemma_Box.Ideal.lemma_max_uint64",
        "primitive_Prims.op_Equality", "projection_inverse_BoxInt_proj_0"
      ],
      0
    ],
    [
      "Hacl.Tube.Receive.lemma_max_uint64",
      4,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.memcmp",
      1,
      0,
      1,
      [
        "@query", "assumption_FStar.HyperHeap.HasEq_rid", "b2t_def",
        "bool_inversion", "bool_typing", "data_elim_FStar.UInt32.Mk",
        "data_elim_FStar.UInt64.Mk", "equation_FStar.HyperHeap.t",
        "equation_FStar.HyperStack.equal_domains",
        "equation_FStar.HyperStack.hh",
        "equation_FStar.HyperStack.is_eternal_region",
        "equation_FStar.Mul.op_Star", "equation_FStar.Set.eqtype",
        "equation_FStar.UInt.add", "equation_FStar.UInt.eq",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mul",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.add", "equation_FStar.UInt32.eq",
        "equation_FStar.UInt32.mul", "equation_FStar.UInt32.n",
        "equation_FStar.UInt32.t", "equation_FStar.UInt32.uint_to_t",
        "equation_FStar.UInt32.v", "equation_FStar.UInt64.mul",
        "equation_FStar.UInt64.n", "equation_FStar.UInt64.t",
        "equation_FStar.UInt64.uint_to_t", "equation_FStar.UInt64.v",
        "equation_FStar.UInt8.n", "equation_FStar.UInt8.t",
        "equation_FStar.UInt8.uint_to_t", "equation_FStar.UInt8.v",
        "equation_Hacl.Cast.uint64_to_sint64",
        "equation_Hacl.Cast.uint8_to_sint8", "equation_Hacl.Constants.u8",
        "equation_Hacl.Tube.Send.blocksize_32",
        "equation_Hacl.Tube.Send.cipherlen_32",
        "equation_Hacl.Tube.Send.ciphersize_32",
        "equation_Hacl.Tube.Send.one_64", "equation_Hacl.Tube.Send.zero_8",
        "equation_Hacl.UInt64.t", "equation_Hacl.UInt8.t",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "fuel_guarded_inversion_FStar.HyperStack.mem",
        "fuel_guarded_inversion_FStar.UInt32.t_",
        "fuel_guarded_inversion_FStar.UInt8.t_",
        "function_token_typing_FStar.Heap.emp",
        "function_token_typing_FStar.Heap.heap",
        "function_token_typing_FStar.HyperHeap.rid",
        "function_token_typing_FStar.UInt8.n",
        "function_token_typing_Hacl.Tube.Send.ciphersize_32",
        "function_token_typing_Hacl.Tube.Send.one_64",
        "function_token_typing_Hacl.Tube.Send.zero_8",
        "function_token_typing_PaddedFileIO.file_rgn", "int_inversion",
        "kinding_FStar.Heap.aref@tok", "lemma_Box.Ideal.lemma_max_uint8",
        "lemma_FStar.Buffer.lemma_size", "lemma_FStar.Set.lemma_equal_refl",
        "lemma_FStar.TSet.lemma_equal_refl",
        "pretyping_6c86c071b92797cdf01eb016249a9465",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.HyperStack.HS_h",
        "proj_equation_FStar.UInt32.Mk_v", "proj_equation_FStar.UInt64.Mk_v",
        "proj_equation_FStar.UInt8.Mk_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.UInt32.Mk_v",
        "projection_inverse_FStar.UInt64.Mk_v",
        "projection_inverse_FStar.UInt8.Mk_v",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "refinement_interpretation_Tm_refine_0dc1829dbc3c1d1c42b7a4e9e5c89884",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_5a09de1efe4b8e150cfdaeaf95d864d4",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_ce504215890b5905ce657b7138b79bc4",
        "refinement_interpretation_Tm_refine_d77a4475a06e01eb20c1cddac73a57d5",
        "refinement_interpretation_Tm_refine_e1f67126dd5bfa8bcd6dcb4f26e2465c",
        "typing_FStar.Heap.domain", "typing_FStar.HyperStack.HS.h",
        "typing_FStar.HyperStack.is_eternal_region",
        "typing_FStar.Map.domain", "typing_FStar.Map.sel",
        "typing_FStar.UInt32.v", "typing_FStar.UInt8.v"
      ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      1,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      2,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      3,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      4,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.socket_state_haseq" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      5,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.fd_state_haseq" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      6,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      7,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      8,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      9,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.fd_state_haseq" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      10,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.socket_state_haseq" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      11,
      0,
      1,
      [
        "@query", "equation_FStar.Buffer.buffer",
        "equation_PaddedFileIO.fh_ref", "equation_PaddedFileIO.live_file",
        "fuel_guarded_inversion_FStar.Buffer._buffer",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_6281d0512044818c72cbc80d37fb3569"
      ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2_lt_blocksize",
      12,
      0,
      1,
      [
        "@query", "assumption_FStar.Heap.DomContains",
        "assumption_FStar.HyperHeap.HasEq_rid", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.UInt8.t_",
        "constructor_distinct_FileIO.Types.SocketError",
        "constructor_distinct_FileIO.Types.SocketOk",
        "constructor_distinct_FileIO.Types.file_handle",
        "data_elim_FStar.HyperStack.HS", "data_elim_FStar.HyperStack.MkRef",
        "data_elim_FStar.UInt32.Mk", "data_elim_FStar.UInt64.Mk",
        "disc_equation_FileIO.Types.SocketError",
        "disc_equation_FileIO.Types.SocketOk",
        "equality_tok_FileIO.Types.SocketError@tok",
        "equality_tok_FileIO.Types.SocketOk@tok",
        "equation_FStar.Buffer.as_aref", "equation_FStar.Buffer.as_seq",
        "equation_FStar.Buffer.buffer", "equation_FStar.Buffer.contains",
        "equation_FStar.Buffer.content", "equation_FStar.Buffer.disjoint",
        "equation_FStar.Buffer.equal", "equation_FStar.Buffer.frameOf",
        "equation_FStar.Buffer.get", "equation_FStar.Buffer.includes",
        "equation_FStar.Buffer.length", "equation_FStar.Buffer.live",
        "equation_FStar.Buffer.max_length",
        "equation_FStar.Buffer.modifies_buf_0", "equation_FStar.Buffer.sel",
        "equation_FStar.Buffer.sub", "equation_FStar.HyperHeap.contains_ref",
        "equation_FStar.HyperHeap.modifies_just",
        "equation_FStar.HyperHeap.modifies_one",
        "equation_FStar.HyperHeap.sel", "equation_FStar.HyperHeap.t",
        "equation_FStar.HyperStack.contains",
        "equation_FStar.HyperStack.equal_domains",
        "equation_FStar.HyperStack.frameOf", "equation_FStar.HyperStack.hh",
        "equation_FStar.HyperStack.is_above",
        "equation_FStar.HyperStack.is_eternal_region",
        "equation_FStar.HyperStack.live_region",
        "equation_FStar.HyperStack.modifies",
        "equation_FStar.HyperStack.modifies_one",
        "equation_FStar.HyperStack.sel", "equation_FStar.Int16.n",
        "equation_FStar.Mul.op_Star", "equation_FStar.Set.eqtype",
        "equation_FStar.Set.subset", "equation_FStar.UInt.add",
        "equation_FStar.UInt.eq", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.mul", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt32.add",
        "equation_FStar.UInt32.mul", "equation_FStar.UInt32.n",
        "equation_FStar.UInt32.t", "equation_FStar.UInt32.uint_to_t",
        "equation_FStar.UInt32.v", "equation_FStar.UInt64.add",
        "equation_FStar.UInt64.eq", "equation_FStar.UInt64.mul",
        "equation_FStar.UInt64.n", "equation_FStar.UInt64.t",
        "equation_FStar.UInt64.uint_to_t", "equation_FStar.UInt64.v",
        "equation_FStar.UInt8.n", "equation_FStar.UInt8.t",
        "equation_Hacl.Cast.uint64_to_sint64",
        "equation_Hacl.Constants.crypto_secretbox_KEYBYTES",
        "equation_Hacl.Constants.crypto_secretbox_NONCEBYTES",
        "equation_Hacl.Constants.h64", "equation_Hacl.Constants.h8",
        "equation_Hacl.Constants.u64", "equation_Hacl.Constants.u8",
        "equation_Hacl.Constants.uint8_p",
        "equation_Hacl.Tube.Send.blocksize",
        "equation_Hacl.Tube.Send.blocksize_32",
        "equation_Hacl.Tube.Send.cipherlen",
        "equation_Hacl.Tube.Send.cipherlen_32",
        "equation_Hacl.Tube.Send.ciphersize",
        "equation_Hacl.Tube.Send.ciphersize_32",
        "equation_Hacl.Tube.Send.one_64", "equation_Hacl.Tube.Send.uint8_p",
        "equation_Hacl.UInt64.add", "equation_Hacl.UInt64.op_Plus_Hat",
        "equation_Hacl.UInt64.t", "equation_Hacl.UInt64.v",
        "equation_Hacl.UInt8.t", "equation_PaddedFileIO.bufsize",
        "equation_PaddedFileIO.fh_ref",
        "equation_PaddedFileIO.file_next_read_buffer_post",
        "equation_PaddedFileIO.file_next_write_buffer_pre",
        "equation_PaddedFileIO.file_offset",
        "equation_PaddedFileIO.file_state",
        "equation_PaddedFileIO.live_file",
        "equation_PaddedFileIO.max_block_size",
        "equation_PaddedFileIO.same_file", "equation_PaddedFileIO.zero",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_SocketIO.current_state", "equation_SocketIO.socket_ref",
        "fuel_guarded_inversion_FStar.Buffer._buffer",
        "fuel_guarded_inversion_FStar.HyperStack.mem",
        "fuel_guarded_inversion_FStar.HyperStack.reference",
        "fuel_guarded_inversion_FStar.UInt32.t_",
        "fuel_guarded_inversion_FStar.UInt64.t_",
        "fuel_guarded_inversion_FileIO.Types.sresult",
        "function_token_typing_FStar.Heap.contains",
        "function_token_typing_FStar.Heap.domain",
        "function_token_typing_FStar.Heap.emp",
        "function_token_typing_FStar.Heap.heap",
        "function_token_typing_FStar.HyperHeap.rid",
        "function_token_typing_FStar.Int16.n",
        "function_token_typing_FStar.UInt8.n",
        "function_token_typing_Hacl.Tube.Send.blocksize",
        "function_token_typing_Hacl.Tube.Send.blocksize_32",
        "function_token_typing_Hacl.Tube.Send.ciphersize",
        "function_token_typing_Hacl.Tube.Send.one_64",
        "function_token_typing_PaddedFileIO.file_rgn",
        "function_token_typing_PaddedFileIO.zero",
        "function_token_typing_SocketIO.socket_rgn", "int_inversion",
        "int_typing",
        "interpretation_Tm_arrow_5dcc7b89878b83db3eb89a2fd5b4fffc",
        "interpretation_Tm_arrow_fddeb51a683e051dab6a2ed5dad84c39",
        "kinding_FStar.Heap.aref@tok", "kinding_FStar.UInt8.t_@tok",
        "kinding_FileIO.Types.file_handle@tok",
        "kinding_FileIO.Types.socket@tok",
        "lemma_Box.Ideal.lemma_max_uint32",
        "lemma_FStar.Buffer.lemma_disjoint_sub_",
        "lemma_FStar.Buffer.lemma_disjoint_symm",
        "lemma_FStar.Buffer.lemma_live_disjoint",
        "lemma_FStar.Buffer.lemma_modifies_1_1",
        "lemma_FStar.Buffer.modifies_subbuffer_1",
        "lemma_FStar.Buffer.modifies_subbuffer_2",
        "lemma_FStar.Buffer.modifies_subbuffer_2_",
        "lemma_FStar.Buffer.no_upd_lemma_1",
        "lemma_FStar.Buffer.no_upd_lemma_2",
        "lemma_FStar.HyperStack.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Map.lemma_InDomConcat",
        "lemma_FStar.Map.lemma_InDomRestrict",
        "lemma_FStar.Map.lemma_SelConcat1",
        "lemma_FStar.Map.lemma_SelConcat2",
        "lemma_FStar.Map.lemma_SelRestrict",
        "lemma_FStar.Map.lemma_equal_elim",
        "lemma_FStar.Map.lemma_equal_intro",
        "lemma_FStar.Set.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_refl", "lemma_FStar.Set.mem_complement",
        "lemma_FStar.Set.mem_singleton", "lemma_FStar.Set.mem_union",
        "lemma_FStar.TSet.lemma_equal_elim",
        "lemma_FStar.TSet.lemma_equal_refl",
        "lemma_PaddedFileIO.bufsize_bound",
        "pretyping_6c86c071b92797cdf01eb016249a9465",
        "pretyping_9248629b80e5ece8a5830df634103252",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Buffer.MkBuffer_content",
        "proj_equation_FStar.Buffer.MkBuffer_idx",
        "proj_equation_FStar.Buffer.MkBuffer_length",
        "proj_equation_FStar.HyperStack.HS_h",
        "proj_equation_FStar.HyperStack.HS_tip",
        "proj_equation_FStar.HyperStack.MkRef_id",
        "proj_equation_FStar.HyperStack.MkRef_ref",
        "proj_equation_FStar.UInt32.Mk_v", "proj_equation_FStar.UInt64.Mk_v",
        "proj_equation_FileIO.Types.Mkfile_handle_stat",
        "proj_equation_FileIO.Types.Mkfile_stat_size",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Buffer.MkBuffer_content",
        "projection_inverse_FStar.Buffer.MkBuffer_idx",
        "projection_inverse_FStar.Buffer.MkBuffer_length",
        "projection_inverse_FStar.UInt32.Mk_v",
        "projection_inverse_FStar.UInt64.Mk_v",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "refinement_interpretation_Tm_refine_083641cfcf184b88e2bfd0c942c5cfdc",
        "refinement_interpretation_Tm_refine_0b9eee819dd1e4f557a2443d166f309c",
        "refinement_interpretation_Tm_refine_0dc1829dbc3c1d1c42b7a4e9e5c89884",
        "refinement_interpretation_Tm_refine_27eb738955e795e5dd1cab5fe18de9a0",
        "refinement_interpretation_Tm_refine_31831b836615d93e613d30ca64d96e40",
        "refinement_interpretation_Tm_refine_3ce5e5fe81b931566c2cf259dd2b5d04",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_437b673bfa2524679749cf39fe5a7207",
        "refinement_interpretation_Tm_refine_4857f69362085f6422cd14fa475bec1a",
        "refinement_interpretation_Tm_refine_4a460fddbe56e028cea72f0f4e23e220",
        "refinement_interpretation_Tm_refine_4da83c9c34d6ebf263c2897a47797210",
        "refinement_interpretation_Tm_refine_5a09de1efe4b8e150cfdaeaf95d864d4",
        "refinement_interpretation_Tm_refine_6281d0512044818c72cbc80d37fb3569",
        "refinement_interpretation_Tm_refine_6dcb21a272243833262302041761c187",
        "refinement_interpretation_Tm_refine_7e3beb6acccffb41919f80afab550fdd",
        "refinement_interpretation_Tm_refine_8361da5c5c70d24e51e9c0c14fe07f4e",
        "refinement_interpretation_Tm_refine_87921bbb84409a2ed981c6d200ceccc7",
        "refinement_interpretation_Tm_refine_895213615ca428b66504b64c66c6d542",
        "refinement_interpretation_Tm_refine_9c35dffc70f076202667c9795b521118",
        "refinement_interpretation_Tm_refine_a57e6988f2d29bd5aa0679db10f4f337",
        "refinement_interpretation_Tm_refine_b0cc669109f5223394a5a92793efa434",
        "refinement_interpretation_Tm_refine_b429e67e388b2dfef3decd238c836877",
        "refinement_interpretation_Tm_refine_b560551048d2e17324f021503ddc4232",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_c1783956166b1754d457b3ddaaeb9cc5",
        "refinement_interpretation_Tm_refine_c51ac46d0ce5ea4c7806d2e94a5b368c",
        "refinement_interpretation_Tm_refine_ce87d07f624eb77b8cd8e5f5bfb9f378",
        "refinement_interpretation_Tm_refine_d023b9461e4d4c2c1260f907a1d7e4a1",
        "refinement_interpretation_Tm_refine_deb68a2ba9316e7f1502cc670399a37c",
        "refinement_interpretation_Tm_refine_e1f67126dd5bfa8bcd6dcb4f26e2465c",
        "refinement_interpretation_Tm_refine_e8a3b061c144fe07c532f73daf3668ea",
        "refinement_interpretation_Tm_refine_eb122da4c180a9560099d344f919cf04",
        "refinement_interpretation_Tm_refine_f59487b7e8b45c2a070787f5739c33a0",
        "refinement_kinding_Tm_refine_c80f93641670351ef037bee53d1c4edc",
        "token_correspondence_FStar.Heap.contains",
        "token_correspondence_FStar.Heap.domain",
        "typing_FStar.Buffer.MkBuffer.content",
        "typing_FStar.Buffer.MkBuffer.length",
        "typing_FStar.Buffer.MkBuffer.max_length",
        "typing_FStar.Buffer.as_aref", "typing_FStar.Buffer.content",
        "typing_FStar.Buffer.frameOf", "typing_FStar.Buffer.get",
        "typing_FStar.Buffer.length", "typing_FStar.Buffer.sub",
        "typing_FStar.Heap.contains", "typing_FStar.Heap.domain",
        "typing_FStar.HyperHeap.as_ref",
        "typing_FStar.HyperHeap.contains_ref",
        "typing_FStar.HyperStack.HS.h", "typing_FStar.HyperStack.MkRef.id",
        "typing_FStar.HyperStack.MkRef.ref",
        "typing_FStar.HyperStack.is_above",
        "typing_FStar.HyperStack.is_eternal_region",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.Map.concat",
        "typing_FStar.Map.contains", "typing_FStar.Map.domain",
        "typing_FStar.Map.restrict", "typing_FStar.Map.sel",
        "typing_FStar.Set.complement", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_FStar.Set.union",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.uint_to_t", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.add", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_FileIO.Types.Mkfile_handle.stat",
        "typing_FileIO.Types.Mkfile_stat.size",
        "typing_PaddedFileIO.file_buffer",
        "typing_PaddedFileIO.file_offset_",
        "typing_tok_FileIO.Types.SocketError@tok",
        "typing_tok_FileIO.Types.SocketOk@tok"
      ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      1,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      2,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      3,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      4,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.socket_state_haseq" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      5,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.fd_state_haseq" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      6,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.fd_state_haseq" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      7,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      8,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      9,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      10,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.socket_state_haseq" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      11,
      0,
      1,
      [
        "@query", "equation_FStar.Buffer.buffer",
        "equation_PaddedFileIO.fh_ref", "equation_PaddedFileIO.live_file",
        "fuel_guarded_inversion_FStar.Buffer._buffer",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_6281d0512044818c72cbc80d37fb3569"
      ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop_2",
      12,
      0,
      1,
      [
        "@query", "assumption_FStar.Heap.DomContains",
        "assumption_FStar.HyperHeap.HasEq_rid", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.UInt8.t_",
        "constructor_distinct_FileIO.Types.SocketError",
        "constructor_distinct_FileIO.Types.SocketOk",
        "constructor_distinct_FileIO.Types.file_handle",
        "data_elim_FStar.Buffer.MkBuffer", "data_elim_FStar.HyperStack.HS",
        "data_elim_FStar.HyperStack.MkRef", "data_elim_FStar.UInt32.Mk",
        "data_elim_FStar.UInt64.Mk",
        "disc_equation_FileIO.Types.SocketError",
        "disc_equation_FileIO.Types.SocketOk",
        "equality_tok_FileIO.Types.SocketError@tok",
        "equality_tok_FileIO.Types.SocketOk@tok",
        "equation_FStar.Buffer.as_aref", "equation_FStar.Buffer.as_seq",
        "equation_FStar.Buffer.buffer", "equation_FStar.Buffer.contains",
        "equation_FStar.Buffer.content", "equation_FStar.Buffer.disjoint",
        "equation_FStar.Buffer.equal", "equation_FStar.Buffer.frameOf",
        "equation_FStar.Buffer.get", "equation_FStar.Buffer.includes",
        "equation_FStar.Buffer.length", "equation_FStar.Buffer.live",
        "equation_FStar.Buffer.max_length",
        "equation_FStar.Buffer.modifies_buf_0", "equation_FStar.Buffer.sel",
        "equation_FStar.Buffer.sub", "equation_FStar.HyperHeap.contains_ref",
        "equation_FStar.HyperHeap.map_invariant",
        "equation_FStar.HyperHeap.modifies_just",
        "equation_FStar.HyperHeap.modifies_one",
        "equation_FStar.HyperHeap.sel", "equation_FStar.HyperHeap.t",
        "equation_FStar.HyperStack.contains",
        "equation_FStar.HyperStack.equal_domains",
        "equation_FStar.HyperStack.frameOf", "equation_FStar.HyperStack.hh",
        "equation_FStar.HyperStack.is_above",
        "equation_FStar.HyperStack.is_eternal_color",
        "equation_FStar.HyperStack.is_eternal_region",
        "equation_FStar.HyperStack.is_in",
        "equation_FStar.HyperStack.is_tip",
        "equation_FStar.HyperStack.live_region",
        "equation_FStar.HyperStack.modifies",
        "equation_FStar.HyperStack.modifies_one",
        "equation_FStar.HyperStack.sel", "equation_FStar.Int16.n",
        "equation_FStar.Mul.op_Star", "equation_FStar.Set.eqtype",
        "equation_FStar.Set.subset", "equation_FStar.UInt.add",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.mul", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt32.add",
        "equation_FStar.UInt32.mul", "equation_FStar.UInt32.n",
        "equation_FStar.UInt32.t", "equation_FStar.UInt32.uint_to_t",
        "equation_FStar.UInt32.v", "equation_FStar.UInt64.add",
        "equation_FStar.UInt64.lt", "equation_FStar.UInt64.mul",
        "equation_FStar.UInt64.n", "equation_FStar.UInt64.t",
        "equation_FStar.UInt64.uint_to_t", "equation_FStar.UInt64.v",
        "equation_FStar.UInt8.n", "equation_FStar.UInt8.t",
        "equation_Hacl.Cast.uint64_to_sint64",
        "equation_Hacl.Constants.crypto_secretbox_KEYBYTES",
        "equation_Hacl.Constants.crypto_secretbox_NONCEBYTES",
        "equation_Hacl.Constants.h64", "equation_Hacl.Constants.h8",
        "equation_Hacl.Constants.u64", "equation_Hacl.Constants.u8",
        "equation_Hacl.Constants.uint8_p",
        "equation_Hacl.Tube.Send.blocksize",
        "equation_Hacl.Tube.Send.blocksize_32",
        "equation_Hacl.Tube.Send.cipherlen",
        "equation_Hacl.Tube.Send.cipherlen_32",
        "equation_Hacl.Tube.Send.ciphersize",
        "equation_Hacl.Tube.Send.ciphersize_32",
        "equation_Hacl.Tube.Send.one_64", "equation_Hacl.Tube.Send.uint8_p",
        "equation_Hacl.UInt64.add", "equation_Hacl.UInt64.op_Plus_Hat",
        "equation_Hacl.UInt64.t", "equation_Hacl.UInt64.v",
        "equation_Hacl.UInt8.t", "equation_PaddedFileIO.bufsize",
        "equation_PaddedFileIO.fh_ref",
        "equation_PaddedFileIO.file_next_read_buffer_post",
        "equation_PaddedFileIO.file_next_write_buffer_pre",
        "equation_PaddedFileIO.file_offset",
        "equation_PaddedFileIO.file_state",
        "equation_PaddedFileIO.live_file",
        "equation_PaddedFileIO.max_block_size",
        "equation_PaddedFileIO.same_file", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_SocketIO.current_state",
        "equation_SocketIO.socket_ref",
        "fuel_guarded_inversion_FStar.Buffer._buffer",
        "fuel_guarded_inversion_FStar.HyperStack.mem",
        "fuel_guarded_inversion_FStar.HyperStack.reference",
        "fuel_guarded_inversion_FStar.UInt32.t_",
        "fuel_guarded_inversion_FStar.UInt64.t_",
        "fuel_guarded_inversion_FileIO.Types.sresult",
        "function_token_typing_FStar.Heap.contains",
        "function_token_typing_FStar.Heap.domain",
        "function_token_typing_FStar.Heap.emp",
        "function_token_typing_FStar.Heap.heap",
        "function_token_typing_FStar.HyperHeap.rid",
        "function_token_typing_FStar.Int16.n",
        "function_token_typing_FStar.UInt32.n",
        "function_token_typing_FStar.UInt8.n",
        "function_token_typing_FileIO.Types.Mkfile_handle.stat",
        "function_token_typing_Hacl.Tube.Send.blocksize",
        "function_token_typing_Hacl.Tube.Send.blocksize_32",
        "function_token_typing_Hacl.Tube.Send.ciphersize_32",
        "function_token_typing_Hacl.Tube.Send.one_64",
        "function_token_typing_PaddedFileIO.file_rgn",
        "function_token_typing_SocketIO.socket_rgn", "int_inversion",
        "int_typing",
        "interpretation_Tm_arrow_5dcc7b89878b83db3eb89a2fd5b4fffc",
        "interpretation_Tm_arrow_6925a392f48ebc1b2c6cfd2caf1825d2",
        "interpretation_Tm_arrow_fddeb51a683e051dab6a2ed5dad84c39",
        "kinding_FStar.Heap.aref@tok", "kinding_FStar.UInt8.t_@tok",
        "kinding_FileIO.Types.file_handle@tok",
        "kinding_FileIO.Types.socket@tok",
        "lemma_Box.Ideal.lemma_max_uint32",
        "lemma_FStar.Buffer.lemma_disjoint_sub",
        "lemma_FStar.Buffer.lemma_disjoint_symm",
        "lemma_FStar.Buffer.lemma_modifies_1_1",
        "lemma_FStar.Buffer.modifies_subbuffer_1",
        "lemma_FStar.Buffer.modifies_subbuffer_2_",
        "lemma_FStar.Buffer.no_upd_lemma_1",
        "lemma_FStar.Buffer.no_upd_lemma_2",
        "lemma_FStar.HyperStack.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Map.lemma_InDomConcat",
        "lemma_FStar.Map.lemma_InDomRestrict",
        "lemma_FStar.Map.lemma_SelConcat1",
        "lemma_FStar.Map.lemma_SelConcat2",
        "lemma_FStar.Map.lemma_SelRestrict",
        "lemma_FStar.Map.lemma_equal_elim",
        "lemma_FStar.Map.lemma_equal_intro",
        "lemma_FStar.Set.lemma_equal_elim", "lemma_FStar.Set.mem_complement",
        "lemma_FStar.Set.mem_singleton", "lemma_FStar.Set.mem_union",
        "lemma_FStar.TSet.lemma_equal_elim",
        "lemma_PaddedFileIO.bufsize_bound",
        "pretyping_6c86c071b92797cdf01eb016249a9465",
        "pretyping_9248629b80e5ece8a5830df634103252",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Buffer.MkBuffer_content",
        "proj_equation_FStar.Buffer.MkBuffer_idx",
        "proj_equation_FStar.Buffer.MkBuffer_length",
        "proj_equation_FStar.Buffer.MkBuffer_max_length",
        "proj_equation_FStar.HyperStack.HS_h",
        "proj_equation_FStar.HyperStack.HS_tip",
        "proj_equation_FStar.HyperStack.MkRef_id",
        "proj_equation_FStar.HyperStack.MkRef_ref",
        "proj_equation_FStar.UInt32.Mk_v", "proj_equation_FStar.UInt64.Mk_v",
        "proj_equation_FileIO.Types.Mkfile_stat_size",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Buffer.MkBuffer_content",
        "projection_inverse_FStar.Buffer.MkBuffer_idx",
        "projection_inverse_FStar.Buffer.MkBuffer_length",
        "projection_inverse_FStar.Buffer.MkBuffer_max_length",
        "projection_inverse_FStar.UInt32.Mk_v",
        "projection_inverse_FStar.UInt64.Mk_v",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "refinement_interpretation_Tm_refine_083641cfcf184b88e2bfd0c942c5cfdc",
        "refinement_interpretation_Tm_refine_0b9eee819dd1e4f557a2443d166f309c",
        "refinement_interpretation_Tm_refine_0dc1829dbc3c1d1c42b7a4e9e5c89884",
        "refinement_interpretation_Tm_refine_27eb738955e795e5dd1cab5fe18de9a0",
        "refinement_interpretation_Tm_refine_31831b836615d93e613d30ca64d96e40",
        "refinement_interpretation_Tm_refine_3ce5e5fe81b931566c2cf259dd2b5d04",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_46641acd90d2b6089d6e481fd82969c8",
        "refinement_interpretation_Tm_refine_4857f69362085f6422cd14fa475bec1a",
        "refinement_interpretation_Tm_refine_4a460fddbe56e028cea72f0f4e23e220",
        "refinement_interpretation_Tm_refine_4da83c9c34d6ebf263c2897a47797210",
        "refinement_interpretation_Tm_refine_4f37367c7828316b951698ec5607a402",
        "refinement_interpretation_Tm_refine_5a09de1efe4b8e150cfdaeaf95d864d4",
        "refinement_interpretation_Tm_refine_6281d0512044818c72cbc80d37fb3569",
        "refinement_interpretation_Tm_refine_6dcb21a272243833262302041761c187",
        "refinement_interpretation_Tm_refine_7e3beb6acccffb41919f80afab550fdd",
        "refinement_interpretation_Tm_refine_87921bbb84409a2ed981c6d200ceccc7",
        "refinement_interpretation_Tm_refine_895213615ca428b66504b64c66c6d542",
        "refinement_interpretation_Tm_refine_97a2b4692f4609f234a69caaaa9c58f1",
        "refinement_interpretation_Tm_refine_a57e6988f2d29bd5aa0679db10f4f337",
        "refinement_interpretation_Tm_refine_b429e67e388b2dfef3decd238c836877",
        "refinement_interpretation_Tm_refine_b560551048d2e17324f021503ddc4232",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_c90e16742d2e633e32c657b87c3493b3",
        "refinement_interpretation_Tm_refine_d023b9461e4d4c2c1260f907a1d7e4a1",
        "refinement_interpretation_Tm_refine_db05bbb576d48e736cbe5828cf1e010e",
        "refinement_interpretation_Tm_refine_deb68a2ba9316e7f1502cc670399a37c",
        "refinement_interpretation_Tm_refine_e1f67126dd5bfa8bcd6dcb4f26e2465c",
        "refinement_interpretation_Tm_refine_e8a3b061c144fe07c532f73daf3668ea",
        "refinement_interpretation_Tm_refine_eb122da4c180a9560099d344f919cf04",
        "refinement_interpretation_Tm_refine_f59487b7e8b45c2a070787f5739c33a0",
        "refinement_kinding_Tm_refine_c80f93641670351ef037bee53d1c4edc",
        "token_correspondence_FStar.Heap.contains",
        "token_correspondence_FStar.Heap.domain",
        "token_correspondence_FileIO.Types.Mkfile_handle.stat",
        "typing_FStar.Buffer.MkBuffer.content",
        "typing_FStar.Buffer.MkBuffer.length",
        "typing_FStar.Buffer.MkBuffer.max_length",
        "typing_FStar.Buffer.as_aref", "typing_FStar.Buffer.as_seq",
        "typing_FStar.Buffer.content", "typing_FStar.Buffer.frameOf",
        "typing_FStar.Buffer.sub", "typing_FStar.Heap.contains",
        "typing_FStar.Heap.domain", "typing_FStar.HyperHeap.as_ref",
        "typing_FStar.HyperStack.HS.h", "typing_FStar.HyperStack.HS.tip",
        "typing_FStar.HyperStack.MkRef.ref",
        "typing_FStar.HyperStack.is_above",
        "typing_FStar.HyperStack.is_eternal_region",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.Map.concat",
        "typing_FStar.Map.contains", "typing_FStar.Map.domain",
        "typing_FStar.Map.restrict", "typing_FStar.Map.sel",
        "typing_FStar.Seq.index", "typing_FStar.Set.complement",
        "typing_FStar.Set.mem", "typing_FStar.Set.singleton",
        "typing_FStar.Set.union", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.add", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_FileIO.Types.Mkfile_stat.size",
        "typing_PaddedFileIO.file_buffer", "typing_PaddedFileIO.file_offset",
        "typing_tok_FileIO.Types.SocketError@tok"
      ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_enc",
      1,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_enc",
      2,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.socket_state_haseq" ],
      0
    ],
    [ "Hacl.Tube.Receive.file_recv_enc", 3, 0, 1, [ "@query" ], 0 ],
    [
      "Hacl.Tube.Receive.file_recv_enc",
      4,
      0,
      2,
      [
        "@query", "assumption_FStar.Heap.DomContains",
        "assumption_FStar.Heap.DomEmp", "assumption_FStar.Heap.DomRestrict",
        "assumption_FStar.Heap.Equals", "assumption_FStar.Heap.Extensional",
        "assumption_FStar.Heap.RestrictSel",
        "assumption_FStar.Heap.SelConcat",
        "assumption_FStar.HyperHeap.HasEq_rid", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FileIO.Types.FileError",
        "constructor_distinct_FileIO.Types.FileOk",
        "constructor_distinct_FileIO.Types.SocketError",
        "constructor_distinct_FileIO.Types.SocketOk",
        "data_elim_FStar.HyperStack.HS", "data_elim_FStar.UInt32.Mk",
        "data_elim_FStar.UInt64.Mk", "data_typing_intro_FStar.Heap.Ref@tok",
        "disc_equation_FileIO.Types.FileError",
        "disc_equation_FileIO.Types.FileOk",
        "disc_equation_FileIO.Types.SocketError",
        "disc_equation_FileIO.Types.SocketOk",
        "equality_tok_FileIO.Types.FileOk@tok",
        "equality_tok_FileIO.Types.SocketError@tok",
        "equality_tok_FileIO.Types.SocketOk@tok",
        "equation_FStar.Buffer.as_aref", "equation_FStar.Buffer.as_ref",
        "equation_FStar.Buffer.as_seq", "equation_FStar.Buffer.buffer",
        "equation_FStar.Buffer.contains", "equation_FStar.Buffer.content",
        "equation_FStar.Buffer.disjoint", "equation_FStar.Buffer.equal",
        "equation_FStar.Buffer.frameOf", "equation_FStar.Buffer.get",
        "equation_FStar.Buffer.idx", "equation_FStar.Buffer.includes",
        "equation_FStar.Buffer.length", "equation_FStar.Buffer.live",
        "equation_FStar.Buffer.modifies_buf_1", "equation_FStar.Buffer.sel",
        "equation_FStar.Buffer.sub", "equation_FStar.Heap.modifies",
        "equation_FStar.HyperHeap.contains_ref",
        "equation_FStar.HyperHeap.map_invariant",
        "equation_FStar.HyperHeap.modifies_just",
        "equation_FStar.HyperHeap.modifies_one",
        "equation_FStar.HyperHeap.modifies_rref",
        "equation_FStar.HyperHeap.sel", "equation_FStar.HyperHeap.t",
        "equation_FStar.HyperStack.as_aref",
        "equation_FStar.HyperStack.as_ref",
        "equation_FStar.HyperStack.contains",
        "equation_FStar.HyperStack.equal_domains",
        "equation_FStar.HyperStack.equal_stack_domains",
        "equation_FStar.HyperStack.frameOf",
        "equation_FStar.HyperStack.fresh_frame",
        "equation_FStar.HyperStack.hh", "equation_FStar.HyperStack.is_above",
        "equation_FStar.HyperStack.is_in",
        "equation_FStar.HyperStack.is_stack_region",
        "equation_FStar.HyperStack.is_tip",
        "equation_FStar.HyperStack.live_region",
        "equation_FStar.HyperStack.modifies",
        "equation_FStar.HyperStack.modifies_one",
        "equation_FStar.HyperStack.modifies_ref",
        "equation_FStar.HyperStack.pop",
        "equation_FStar.HyperStack.poppable",
        "equation_FStar.HyperStack.popped",
        "equation_FStar.HyperStack.remove_elt",
        "equation_FStar.HyperStack.sel", "equation_FStar.HyperStack.sid",
        "equation_FStar.HyperStack.weak_contains",
        "equation_FStar.HyperStack.weak_live_region",
        "equation_FStar.Int16.n", "equation_FStar.Mul.op_Star",
        "equation_FStar.ST.inline_stack_inv", "equation_FStar.Set.eqtype",
        "equation_FStar.Set.subset", "equation_FStar.TSet.subset",
        "equation_FStar.UInt.add", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.gte", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mul",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.add", "equation_FStar.UInt32.mul",
        "equation_FStar.UInt32.n", "equation_FStar.UInt32.t",
        "equation_FStar.UInt32.uint_to_t", "equation_FStar.UInt32.v",
        "equation_FStar.UInt64.add", "equation_FStar.UInt64.gte",
        "equation_FStar.UInt64.mul", "equation_FStar.UInt64.n",
        "equation_FStar.UInt64.t", "equation_FStar.UInt64.uint_to_t",
        "equation_FStar.UInt64.v", "equation_FStar.UInt8.n",
        "equation_FStar.UInt8.t", "equation_Hacl.Cast.uint64_to_sint64",
        "equation_Hacl.Constants.crypto_secretbox_KEYBYTES",
        "equation_Hacl.Constants.crypto_secretbox_NONCEBYTES",
        "equation_Hacl.Constants.h64", "equation_Hacl.Constants.h8",
        "equation_Hacl.Constants.u8", "equation_Hacl.Constants.uint8_p",
        "equation_Hacl.Policies.declassify_u64",
        "equation_Hacl.Tube.Send.blocksize",
        "equation_Hacl.Tube.Send.blocksize_32",
        "equation_Hacl.Tube.Send.cipherlen",
        "equation_Hacl.Tube.Send.cipherlen_32",
        "equation_Hacl.Tube.Send.ciphersize",
        "equation_Hacl.Tube.Send.ciphersize_32",
        "equation_Hacl.Tube.Send.headersize",
        "equation_Hacl.Tube.Send.headersize_32",
        "equation_Hacl.Tube.Send.one_64", "equation_Hacl.Tube.Send.uint8_p",
        "equation_Hacl.Tube.Send.zero_64", "equation_Hacl.UInt64.n",
        "equation_Hacl.UInt64.t", "equation_Hacl.UInt8.t",
        "equation_PaddedFileIO.fh_ref", "equation_PaddedFileIO.live_file",
        "equation_PaddedFileIO.zero", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_SocketIO.current_state",
        "equation_SocketIO.socket_ref",
        "fuel_guarded_inversion_FStar.Buffer._buffer",
        "fuel_guarded_inversion_FStar.HyperStack.mem",
        "fuel_guarded_inversion_FStar.HyperStack.reference",
        "fuel_guarded_inversion_FStar.UInt32.t_",
        "fuel_guarded_inversion_FStar.UInt64.t_",
        "fuel_guarded_inversion_FileIO.Types.fresult",
        "fuel_guarded_inversion_FileIO.Types.sresult",
        "function_token_typing_FStar.Heap.contains",
        "function_token_typing_FStar.Heap.emp",
        "function_token_typing_FStar.Heap.heap",
        "function_token_typing_FStar.HyperHeap.rid",
        "function_token_typing_FStar.Int16.n",
        "function_token_typing_FStar.TSet.union",
        "function_token_typing_FStar.UInt32.n",
        "function_token_typing_FStar.UInt64.n",
        "function_token_typing_FStar.UInt8.n",
        "function_token_typing_Hacl.Tube.Send.blocksize",
        "function_token_typing_Hacl.Tube.Send.blocksize_32",
        "function_token_typing_Hacl.Tube.Send.ciphersize",
        "function_token_typing_Hacl.Tube.Send.ciphersize_32",
        "function_token_typing_Hacl.Tube.Send.headersize_32",
        "function_token_typing_Hacl.Tube.Send.one_64",
        "function_token_typing_Hacl.Tube.Send.zero_64",
        "function_token_typing_PaddedFileIO.file_rgn",
        "function_token_typing_PaddedFileIO.zero",
        "function_token_typing_SocketIO.socket_rgn",
        "function_token_typing_TestLib.uint8_p_null", "int_typing",
        "interpretation_Tm_arrow_5dcc7b89878b83db3eb89a2fd5b4fffc",
        "interpretation_Tm_arrow_6975ab0167487694ec7603d702797b1b",
        "kinding_FStar.Heap.aref@tok", "kinding_FStar.UInt8.t_@tok",
        "kinding_FileIO.Types.file_handle@tok",
        "kinding_FileIO.Types.socket@tok", "l_and-interp",
        "lemma_Box.Ideal.lemma_max_uint32",
        "lemma_Box.Ideal.lemma_max_uint64",
        "lemma_FStar.Buffer.lemma_disjoint_sub",
        "lemma_FStar.Buffer.lemma_disjoint_sub_",
        "lemma_FStar.Buffer.lemma_disjoint_symm",
        "lemma_FStar.Buffer.lemma_equal_domains_2",
        "lemma_FStar.Buffer.lemma_fresh_poppable",
        "lemma_FStar.Buffer.lemma_live_disjoint",
        "lemma_FStar.Buffer.lemma_modifies_1_1",
        "lemma_FStar.Buffer.lemma_modifies_1_trans",
        "lemma_FStar.Buffer.live_fresh", "lemma_FStar.Buffer.live_popped",
        "lemma_FStar.Buffer.modifies_subbuffer_1",
        "lemma_FStar.Buffer.modifies_subbuffer_2",
        "lemma_FStar.Buffer.modifies_subbuffer_2_",
        "lemma_FStar.Buffer.no_upd_fresh",
        "lemma_FStar.Buffer.no_upd_lemma_0",
        "lemma_FStar.Buffer.no_upd_lemma_1",
        "lemma_FStar.Buffer.no_upd_popped",
        "lemma_FStar.HyperHeap.lemma_extends_includes",
        "lemma_FStar.HyperHeap.lemma_extends_parent",
        "lemma_FStar.HyperHeap.lemma_includes_trans",
        "lemma_FStar.HyperStack.contains_implies_weak_contains",
        "lemma_FStar.HyperStack.lemma_equal_domains_trans",
        "lemma_FStar.HyperStack.lemma_equal_stack_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Map.lemma_InDomConcat",
        "lemma_FStar.Map.lemma_InDomRestrict",
        "lemma_FStar.Map.lemma_InDomUpd1",
        "lemma_FStar.Map.lemma_SelConcat1",
        "lemma_FStar.Map.lemma_SelRestrict", "lemma_FStar.Map.lemma_SelUpd2",
        "lemma_FStar.Map.lemma_UpdDomain",
        "lemma_FStar.Map.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_elim", "lemma_FStar.Set.mem_complement",
        "lemma_FStar.Set.mem_intersect", "lemma_FStar.Set.mem_singleton",
        "lemma_FStar.Set.mem_union", "lemma_FStar.TSet.lemma_equal_elim",
        "lemma_FStar.TSet.lemma_equal_refl",
        "lemma_FStar.TSet.mem_complement", "lemma_FStar.TSet.mem_empty",
        "lemma_FStar.TSet.mem_intersect",
        "pretyping_6c86c071b92797cdf01eb016249a9465",
        "pretyping_9248629b80e5ece8a5830df634103252",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "primitive_Prims.op_disEquality",
        "proj_equation_FStar.Buffer.MkBuffer_content",
        "proj_equation_FStar.Buffer.MkBuffer_idx",
        "proj_equation_FStar.Buffer.MkBuffer_length",
        "proj_equation_FStar.Buffer.MkBuffer_max_length",
        "proj_equation_FStar.HyperStack.HS_h",
        "proj_equation_FStar.HyperStack.HS_tip",
        "proj_equation_FStar.HyperStack.MkRef_id",
        "proj_equation_FStar.HyperStack.MkRef_ref",
        "proj_equation_FStar.UInt32.Mk_v", "proj_equation_FStar.UInt64.Mk_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Buffer.MkBuffer_idx",
        "projection_inverse_FStar.HyperStack.HS_h",
        "projection_inverse_FStar.UInt32.Mk_v",
        "projection_inverse_FStar.UInt64.Mk_v", "ref_inversion",
        "refinement_interpretation_Tm_refine_031aa5f46d93e5d19c7d173c1a0a0157",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "refinement_interpretation_Tm_refine_083641cfcf184b88e2bfd0c942c5cfdc",
        "refinement_interpretation_Tm_refine_0b9eee819dd1e4f557a2443d166f309c",
        "refinement_interpretation_Tm_refine_0dc1829dbc3c1d1c42b7a4e9e5c89884",
        "refinement_interpretation_Tm_refine_189a3b9e5a007e855bb97aadf0a00059",
        "refinement_interpretation_Tm_refine_1a6a31ecd7e01a12eff00400393e4496",
        "refinement_interpretation_Tm_refine_27eb738955e795e5dd1cab5fe18de9a0",
        "refinement_interpretation_Tm_refine_3ce5e5fe81b931566c2cf259dd2b5d04",
        "refinement_interpretation_Tm_refine_3ec7f0bda1a12f259bcedfe99dafc40d",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_437b673bfa2524679749cf39fe5a7207",
        "refinement_interpretation_Tm_refine_4857f69362085f6422cd14fa475bec1a",
        "refinement_interpretation_Tm_refine_4a460fddbe56e028cea72f0f4e23e220",
        "refinement_interpretation_Tm_refine_4f37367c7828316b951698ec5607a402",
        "refinement_interpretation_Tm_refine_5a09de1efe4b8e150cfdaeaf95d864d4",
        "refinement_interpretation_Tm_refine_6281d0512044818c72cbc80d37fb3569",
        "refinement_interpretation_Tm_refine_7778e6829125aada02b932a3a2836fc5",
        "refinement_interpretation_Tm_refine_87921bbb84409a2ed981c6d200ceccc7",
        "refinement_interpretation_Tm_refine_895213615ca428b66504b64c66c6d542",
        "refinement_interpretation_Tm_refine_90c17150abf5cdb4d91f504ab07d9689",
        "refinement_interpretation_Tm_refine_982d2001c1b3e472e4f671f7f701f19d",
        "refinement_interpretation_Tm_refine_a57e6988f2d29bd5aa0679db10f4f337",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_c1783956166b1754d457b3ddaaeb9cc5",
        "refinement_interpretation_Tm_refine_d023b9461e4d4c2c1260f907a1d7e4a1",
        "refinement_interpretation_Tm_refine_e1f67126dd5bfa8bcd6dcb4f26e2465c",
        "refinement_interpretation_Tm_refine_e8a3b061c144fe07c532f73daf3668ea",
        "refinement_interpretation_Tm_refine_eb122da4c180a9560099d344f919cf04",
        "refinement_interpretation_Tm_refine_f59487b7e8b45c2a070787f5739c33a0",
        "refinement_kinding_Tm_refine_c80f93641670351ef037bee53d1c4edc",
        "token_correspondence_FStar.Heap.contains",
        "token_correspondence_FStar.TSet.equal",
        "token_correspondence_FStar.TSet.union",
        "typing_FStar.Buffer.MkBuffer.content",
        "typing_FStar.Buffer.MkBuffer.idx",
        "typing_FStar.Buffer.MkBuffer.length",
        "typing_FStar.Buffer.MkBuffer.max_length",
        "typing_FStar.Buffer.as_aref", "typing_FStar.Buffer.as_ref",
        "typing_FStar.Buffer.content", "typing_FStar.Buffer.frameOf",
        "typing_FStar.Heap.concat", "typing_FStar.Heap.contains",
        "typing_FStar.Heap.domain", "typing_FStar.Heap.restrict",
        "typing_FStar.HyperHeap.as_ref",
        "typing_FStar.HyperHeap.contains_ref",
        "typing_FStar.HyperHeap.includes", "typing_FStar.HyperStack.HS.h",
        "typing_FStar.HyperStack.HS.tip",
        "typing_FStar.HyperStack.MkRef.ref",
        "typing_FStar.HyperStack.is_above", "typing_FStar.HyperStack.is_in",
        "typing_FStar.HyperStack.is_stack_region",
        "typing_FStar.HyperStack.poppable",
        "typing_FStar.HyperStack.remove_elt",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.Map.concat",
        "typing_FStar.Map.contains", "typing_FStar.Map.domain",
        "typing_FStar.Map.restrict", "typing_FStar.Map.sel",
        "typing_FStar.Set.complement", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_FStar.Set.union",
        "typing_FStar.TSet.complement", "typing_FStar.TSet.empty",
        "typing_FStar.TSet.singleton", "typing_FStar.TSet.union",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.add",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_Hacl.Policies.declassify_u64",
        "typing_PaddedFileIO.file_buffer",
        "typing_tok_FileIO.Types.SocketError@tok"
      ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop",
      1,
      0,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop",
      2,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.socket_state_haseq" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv_loop",
      3,
      0,
      1,
      [ "@query", "assumption_FileIO.Types.socket_state_haseq" ],
      0
    ],
    [ "Hacl.Tube.Receive.file_recv_loop", 4, 0, 1, [ "@query" ], 0 ],
    [
      "Hacl.Tube.Receive.file_recv_loop",
      5,
      0,
      1,
      [
        "@query", "assumption_FStar.Heap.DomContains",
        "assumption_FStar.Heap.DomEmp", "assumption_FStar.Heap.DomRestrict",
        "assumption_FStar.HyperHeap.HasEq_rid", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FileIO.Types.SocketError",
        "constructor_distinct_FileIO.Types.SocketOk",
        "data_elim_FStar.HyperStack.HS", "data_elim_FStar.HyperStack.MkRef",
        "data_elim_FStar.UInt32.Mk", "data_elim_FStar.UInt64.Mk",
        "data_typing_intro_FStar.Heap.Ref@tok",
        "disc_equation_FileIO.Types.SocketError",
        "disc_equation_FileIO.Types.SocketOk",
        "equality_tok_FileIO.Types.SocketError@tok",
        "equality_tok_FileIO.Types.SocketOk@tok",
        "equation_FStar.Buffer.as_aref", "equation_FStar.Buffer.as_seq",
        "equation_FStar.Buffer.buffer", "equation_FStar.Buffer.contains",
        "equation_FStar.Buffer.content", "equation_FStar.Buffer.equal",
        "equation_FStar.Buffer.frameOf", "equation_FStar.Buffer.get",
        "equation_FStar.Buffer.idx", "equation_FStar.Buffer.includes",
        "equation_FStar.Buffer.length", "equation_FStar.Buffer.live",
        "equation_FStar.Buffer.modifies_buf_1", "equation_FStar.Buffer.sel",
        "equation_FStar.HyperHeap.contains_ref",
        "equation_FStar.HyperHeap.map_invariant",
        "equation_FStar.HyperHeap.modifies_just",
        "equation_FStar.HyperHeap.modifies_one",
        "equation_FStar.HyperHeap.sel", "equation_FStar.HyperHeap.t",
        "equation_FStar.HyperStack.contains",
        "equation_FStar.HyperStack.equal_domains",
        "equation_FStar.HyperStack.equal_stack_domains",
        "equation_FStar.HyperStack.frameOf",
        "equation_FStar.HyperStack.fresh_frame",
        "equation_FStar.HyperStack.hh", "equation_FStar.HyperStack.is_above",
        "equation_FStar.HyperStack.is_in",
        "equation_FStar.HyperStack.is_stack_region",
        "equation_FStar.HyperStack.is_tip",
        "equation_FStar.HyperStack.live_region",
        "equation_FStar.HyperStack.modifies",
        "equation_FStar.HyperStack.modifies_one",
        "equation_FStar.HyperStack.pop",
        "equation_FStar.HyperStack.poppable",
        "equation_FStar.HyperStack.popped",
        "equation_FStar.HyperStack.remove_elt",
        "equation_FStar.HyperStack.sel", "equation_FStar.HyperStack.sid",
        "equation_FStar.HyperStack.weak_contains",
        "equation_FStar.HyperStack.weak_live_region",
        "equation_FStar.Mul.op_Star", "equation_FStar.ST.inline_stack_inv",
        "equation_FStar.Set.eqtype", "equation_FStar.Set.subset",
        "equation_FStar.UInt.add", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.mul", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt32.add",
        "equation_FStar.UInt32.mul", "equation_FStar.UInt32.n",
        "equation_FStar.UInt32.t", "equation_FStar.UInt32.uint_to_t",
        "equation_FStar.UInt32.v", "equation_FStar.UInt64.mul",
        "equation_FStar.UInt64.n", "equation_FStar.UInt64.t",
        "equation_FStar.UInt64.uint_to_t", "equation_FStar.UInt64.v",
        "equation_FStar.UInt8.n", "equation_FStar.UInt8.t",
        "equation_FStar.UInt8.uint_to_t", "equation_FStar.UInt8.v",
        "equation_Hacl.Cast.uint64_to_sint64",
        "equation_Hacl.Cast.uint8_to_sint8", "equation_Hacl.Constants.h8",
        "equation_Hacl.Constants.u8", "equation_Hacl.Constants.uint8_p",
        "equation_Hacl.Tube.Send.blocksize_32",
        "equation_Hacl.Tube.Send.cipherlen_32",
        "equation_Hacl.Tube.Send.ciphersize_32",
        "equation_Hacl.Tube.Send.headersize_32",
        "equation_Hacl.Tube.Send.one_64", "equation_Hacl.Tube.Send.uint8_p",
        "equation_Hacl.Tube.Send.zero_8", "equation_Hacl.UInt64.t",
        "equation_Hacl.UInt8.t", "equation_PaddedFileIO.fh_ref",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_SocketIO.current_state", "equation_SocketIO.socket_ref",
        "fuel_guarded_inversion_FStar.Buffer._buffer",
        "fuel_guarded_inversion_FStar.HyperStack.mem",
        "fuel_guarded_inversion_FStar.HyperStack.reference",
        "fuel_guarded_inversion_FileIO.Types.sresult",
        "function_token_typing_FStar.Heap.contains",
        "function_token_typing_FStar.Heap.emp",
        "function_token_typing_FStar.Heap.heap",
        "function_token_typing_FStar.HyperHeap.rid",
        "function_token_typing_FStar.UInt32.n",
        "function_token_typing_FStar.UInt64.n",
        "function_token_typing_FStar.UInt8.n",
        "function_token_typing_Hacl.Tube.Send.blocksize_32",
        "function_token_typing_Hacl.Tube.Send.ciphersize_32",
        "function_token_typing_Hacl.Tube.Send.headersize_32",
        "function_token_typing_Hacl.Tube.Send.one_64",
        "function_token_typing_Hacl.Tube.Send.zero_8",
        "function_token_typing_PaddedFileIO.file_rgn",
        "function_token_typing_SocketIO.socket_rgn",
        "interpretation_Tm_arrow_5dcc7b89878b83db3eb89a2fd5b4fffc",
        "kinding_FStar.Heap.aref@tok", "kinding_FStar.UInt8.t_@tok",
        "kinding_FileIO.Types.file_handle@tok",
        "kinding_FileIO.Types.socket@tok", "l_and-interp",
        "lemma_Box.Ideal.lemma_max_uint32",
        "lemma_Box.Ideal.lemma_max_uint64",
        "lemma_Box.Ideal.lemma_max_uint8",
        "lemma_FStar.Buffer.lemma_disjoint_symm",
        "lemma_FStar.Buffer.lemma_fresh_poppable",
        "lemma_FStar.Buffer.live_fresh", "lemma_FStar.Buffer.live_popped",
        "lemma_FStar.Buffer.no_upd_fresh",
        "lemma_FStar.Buffer.no_upd_lemma_0",
        "lemma_FStar.Buffer.no_upd_popped",
        "lemma_FStar.HyperHeap.includes_child",
        "lemma_FStar.HyperHeap.lemma_extends_includes",
        "lemma_FStar.HyperHeap.lemma_extends_parent",
        "lemma_FStar.HyperHeap.lemma_includes_trans",
        "lemma_FStar.HyperStack.contains_implies_weak_contains",
        "lemma_FStar.HyperStack.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Map.lemma_InDomConcat",
        "lemma_FStar.Map.lemma_InDomRestrict",
        "lemma_FStar.Map.lemma_InDomUpd1",
        "lemma_FStar.Map.lemma_SelConcat1",
        "lemma_FStar.Map.lemma_SelRestrict", "lemma_FStar.Map.lemma_SelUpd1",
        "lemma_FStar.Map.lemma_SelUpd2", "lemma_FStar.Map.lemma_UpdDomain",
        "lemma_FStar.Map.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_elim", "lemma_FStar.Set.mem_complement",
        "lemma_FStar.Set.mem_intersect", "lemma_FStar.Set.mem_singleton",
        "lemma_FStar.Set.mem_union", "lemma_FStar.TSet.lemma_equal_elim",
        "lemma_FStar.TSet.lemma_equal_intro",
        "lemma_FStar.TSet.lemma_equal_refl",
        "lemma_FStar.TSet.mem_intersect",
        "pretyping_6c86c071b92797cdf01eb016249a9465",
        "pretyping_9248629b80e5ece8a5830df634103252",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "primitive_Prims.op_disEquality",
        "proj_equation_FStar.Buffer.MkBuffer_content",
        "proj_equation_FStar.Buffer.MkBuffer_length",
        "proj_equation_FStar.HyperStack.HS_h",
        "proj_equation_FStar.HyperStack.HS_tip",
        "proj_equation_FStar.HyperStack.MkRef_id",
        "proj_equation_FStar.HyperStack.MkRef_ref",
        "proj_equation_FStar.UInt32.Mk_v", "proj_equation_FStar.UInt64.Mk_v",
        "proj_equation_FStar.UInt8.Mk_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.HyperStack.HS_h",
        "projection_inverse_FStar.UInt32.Mk_v",
        "projection_inverse_FStar.UInt64.Mk_v",
        "projection_inverse_FStar.UInt8.Mk_v",
        "refinement_interpretation_Tm_refine_031aa5f46d93e5d19c7d173c1a0a0157",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "refinement_interpretation_Tm_refine_0b9eee819dd1e4f557a2443d166f309c",
        "refinement_interpretation_Tm_refine_0dc1829dbc3c1d1c42b7a4e9e5c89884",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_4857f69362085f6422cd14fa475bec1a",
        "refinement_interpretation_Tm_refine_4a460fddbe56e028cea72f0f4e23e220",
        "refinement_interpretation_Tm_refine_4f37367c7828316b951698ec5607a402",
        "refinement_interpretation_Tm_refine_583bff57cb5ba51812f9c4c0b2171d8e",
        "refinement_interpretation_Tm_refine_5a09de1efe4b8e150cfdaeaf95d864d4",
        "refinement_interpretation_Tm_refine_6281d0512044818c72cbc80d37fb3569",
        "refinement_interpretation_Tm_refine_7778e6829125aada02b932a3a2836fc5",
        "refinement_interpretation_Tm_refine_87921bbb84409a2ed981c6d200ceccc7",
        "refinement_interpretation_Tm_refine_90c17150abf5cdb4d91f504ab07d9689",
        "refinement_interpretation_Tm_refine_a57e6988f2d29bd5aa0679db10f4f337",
        "refinement_interpretation_Tm_refine_ba523126f67e00e7cd55f0b92f16681d",
        "refinement_interpretation_Tm_refine_ce504215890b5905ce657b7138b79bc4",
        "refinement_interpretation_Tm_refine_d023b9461e4d4c2c1260f907a1d7e4a1",
        "refinement_interpretation_Tm_refine_e1f67126dd5bfa8bcd6dcb4f26e2465c",
        "refinement_interpretation_Tm_refine_eb122da4c180a9560099d344f919cf04",
        "refinement_interpretation_Tm_refine_f59487b7e8b45c2a070787f5739c33a0",
        "refinement_kinding_Tm_refine_c80f93641670351ef037bee53d1c4edc",
        "token_correspondence_FStar.Heap.contains",
        "typing_FStar.Buffer.MkBuffer.content",
        "typing_FStar.Buffer.MkBuffer.length",
        "typing_FStar.Buffer.MkBuffer.max_length",
        "typing_FStar.Buffer.as_aref", "typing_FStar.Buffer.content",
        "typing_FStar.Buffer.frameOf", "typing_FStar.Buffer.length",
        "typing_FStar.Heap.contains", "typing_FStar.Heap.domain",
        "typing_FStar.Heap.restrict", "typing_FStar.HyperHeap.as_ref",
        "typing_FStar.HyperHeap.contains_ref",
        "typing_FStar.HyperHeap.includes", "typing_FStar.HyperStack.HS.h",
        "typing_FStar.HyperStack.HS.tip",
        "typing_FStar.HyperStack.MkRef.ref",
        "typing_FStar.HyperStack.is_above", "typing_FStar.HyperStack.is_in",
        "typing_FStar.HyperStack.is_stack_region",
        "typing_FStar.HyperStack.poppable",
        "typing_FStar.HyperStack.remove_elt", "typing_FStar.Map.concat",
        "typing_FStar.Map.contains", "typing_FStar.Map.domain",
        "typing_FStar.Map.restrict", "typing_FStar.Map.sel",
        "typing_FStar.Set.complement", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_FStar.Set.union",
        "typing_FStar.TSet.complement", "typing_FStar.TSet.empty",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.v",
        "typing_FStar.UInt8.v", "typing_tok_FileIO.Types.SocketError@tok"
      ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv",
      1,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv",
      2,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv",
      3,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [
      "Hacl.Tube.Receive.file_recv",
      4,
      0,
      1,
      [ "@query", "assumption_FStar.HyperHeap.HasEq_rid" ],
      0
    ],
    [ "Hacl.Tube.Receive.file_recv", 5, 0, 1, [ "@query" ], 0 ],
    [
      "Hacl.Tube.Receive.file_recv",
      6,
      0,
      1,
      [
        "@query", "assumption_FStar.Heap.DomContains",
        "assumption_FStar.Heap.DomEmp", "assumption_FStar.Heap.DomRestrict",
        "assumption_FStar.HyperHeap.HasEq_rid", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FileIO.Types.SocketError",
        "constructor_distinct_FileIO.Types.SocketOk",
        "data_elim_FStar.Buffer.MkBuffer", "data_elim_FStar.HyperStack.HS",
        "data_elim_FStar.HyperStack.MkRef", "data_elim_FStar.UInt32.Mk",
        "data_elim_FStar.UInt64.Mk", "data_typing_intro_FStar.Heap.Ref@tok",
        "disc_equation_FileIO.Types.SocketError",
        "disc_equation_FileIO.Types.SocketOk",
        "equality_tok_FileIO.Types.SocketOk@tok",
        "equation_Box.Ideal.privateKey", "equation_Box.Ideal.publicKey",
        "equation_FStar.Buffer.buffer", "equation_FStar.Buffer.contains",
        "equation_FStar.Buffer.content", "equation_FStar.Buffer.disjoint",
        "equation_FStar.Buffer.equal", "equation_FStar.Buffer.frameOf",
        "equation_FStar.Buffer.idx", "equation_FStar.Buffer.includes",
        "equation_FStar.Buffer.length", "equation_FStar.Buffer.live",
        "equation_FStar.Buffer.modifies_buf_1", "equation_FStar.Buffer.sub",
        "equation_FStar.Heap.modifies",
        "equation_FStar.HyperHeap.contains_ref",
        "equation_FStar.HyperHeap.map_invariant",
        "equation_FStar.HyperHeap.modifies_just",
        "equation_FStar.HyperHeap.modifies_rref",
        "equation_FStar.HyperHeap.t", "equation_FStar.HyperStack.contains",
        "equation_FStar.HyperStack.equal_domains",
        "equation_FStar.HyperStack.equal_stack_domains",
        "equation_FStar.HyperStack.frameOf",
        "equation_FStar.HyperStack.fresh_frame",
        "equation_FStar.HyperStack.hh", "equation_FStar.HyperStack.is_above",
        "equation_FStar.HyperStack.is_eternal_region",
        "equation_FStar.HyperStack.is_in",
        "equation_FStar.HyperStack.is_stack_region",
        "equation_FStar.HyperStack.is_tip",
        "equation_FStar.HyperStack.live_region",
        "equation_FStar.HyperStack.modifies",
        "equation_FStar.HyperStack.modifies_ref",
        "equation_FStar.HyperStack.pop",
        "equation_FStar.HyperStack.poppable",
        "equation_FStar.HyperStack.popped",
        "equation_FStar.HyperStack.remove_elt",
        "equation_FStar.HyperStack.sid",
        "equation_FStar.ST.inline_stack_inv", "equation_FStar.Set.eqtype",
        "equation_FStar.Set.subset", "equation_FStar.TSet.subset",
        "equation_FStar.UInt.add", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt32.add", "equation_FStar.UInt32.n",
        "equation_FStar.UInt32.t", "equation_FStar.UInt32.uint_to_t",
        "equation_FStar.UInt32.v", "equation_FStar.UInt64.n",
        "equation_FStar.UInt64.t", "equation_FStar.UInt64.uint_to_t",
        "equation_FStar.UInt8.t", "equation_Hacl.Cast.uint64_to_sint64",
        "equation_Hacl.Constants.h8", "equation_Hacl.Constants.uint8_p",
        "equation_Hacl.Tube.Send.headersize_32",
        "equation_Hacl.Tube.Send.one_64", "equation_Hacl.UInt64.t",
        "equation_Hacl.UInt8.t", "equation_Prims.eqtype",
        "fuel_guarded_inversion_FStar.Buffer._buffer",
        "fuel_guarded_inversion_FStar.HyperStack.mem",
        "fuel_guarded_inversion_FStar.HyperStack.reference",
        "fuel_guarded_inversion_FStar.UInt32.t_",
        "fuel_guarded_inversion_FileIO.Types.sresult",
        "function_token_typing_FStar.Heap.emp",
        "function_token_typing_FStar.Heap.heap",
        "function_token_typing_FStar.HyperHeap.rid",
        "function_token_typing_Hacl.Tube.Send.headersize_32",
        "function_token_typing_Hacl.Tube.Send.one_64",
        "function_token_typing_PaddedFileIO.file_rgn",
        "function_token_typing_SocketIO.socket_rgn", "int_typing",
        "kinding_FStar.Heap.aref@tok", "kinding_FStar.UInt8.t_@tok",
        "kinding_FileIO.Types.file_handle@tok",
        "kinding_FileIO.Types.socket@tok", "l_and-interp",
        "lemma_Box.Ideal.lemma_max_uint32",
        "lemma_FStar.Buffer.lemma_disjoint_sub",
        "lemma_FStar.Buffer.lemma_disjoint_sub_",
        "lemma_FStar.Buffer.lemma_disjoint_symm",
        "lemma_FStar.Buffer.lemma_fresh_poppable",
        "lemma_FStar.Buffer.lemma_live_disjoint",
        "lemma_FStar.Buffer.lemma_modifies_1_1",
        "lemma_FStar.Buffer.live_fresh",
        "lemma_FStar.Buffer.modifies_subbuffer_1",
        "lemma_FStar.Buffer.modifies_subbuffer_2_",
        "lemma_FStar.Buffer.no_upd_lemma_0",
        "lemma_FStar.Buffer.no_upd_lemma_1",
        "lemma_FStar.Buffer.no_upd_lemma_2",
        "lemma_FStar.HyperHeap.lemma_extends_includes",
        "lemma_FStar.HyperHeap.lemma_extends_parent",
        "lemma_FStar.HyperHeap.lemma_includes_trans",
        "lemma_FStar.HyperStack.lemma_equal_domains_trans",
        "lemma_FStar.HyperStack.lemma_equal_stack_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Map.lemma_InDomConcat",
        "lemma_FStar.Map.lemma_InDomRestrict",
        "lemma_FStar.Map.lemma_InDomUpd1",
        "lemma_FStar.Map.lemma_SelConcat1",
        "lemma_FStar.Map.lemma_SelRestrict", "lemma_FStar.Map.lemma_SelUpd1",
        "lemma_FStar.Map.lemma_SelUpd2", "lemma_FStar.Map.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_elim", "lemma_FStar.Set.mem_complement",
        "lemma_FStar.Set.mem_intersect", "lemma_FStar.Set.mem_singleton",
        "lemma_FStar.TSet.lemma_equal_elim",
        "lemma_FStar.TSet.lemma_equal_intro",
        "lemma_FStar.TSet.lemma_equal_refl", "lemma_FStar.TSet.mem_empty",
        "lemma_FStar.TSet.mem_intersect",
        "pretyping_6b1664f972bf17592f047b9aab86ca38",
        "pretyping_6c86c071b92797cdf01eb016249a9465",
        "pretyping_9248629b80e5ece8a5830df634103252",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction", "primitive_Prims.op_disEquality",
        "proj_equation_FStar.Buffer.MkBuffer_content",
        "proj_equation_FStar.Buffer.MkBuffer_idx",
        "proj_equation_FStar.Buffer.MkBuffer_length",
        "proj_equation_FStar.Buffer.MkBuffer_max_length",
        "proj_equation_FStar.HyperStack.HS_h",
        "proj_equation_FStar.HyperStack.HS_tip",
        "proj_equation_FStar.HyperStack.MkRef_id",
        "proj_equation_FStar.HyperStack.MkRef_ref",
        "proj_equation_FStar.UInt32.Mk_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Buffer.MkBuffer_idx",
        "projection_inverse_FStar.HyperStack.HS_h",
        "projection_inverse_FStar.UInt32.Mk_v",
        "refinement_interpretation_Tm_refine_031aa5f46d93e5d19c7d173c1a0a0157",
        "refinement_interpretation_Tm_refine_03d0bed5c0733099844f268aecd0836d",
        "refinement_interpretation_Tm_refine_0dc1829dbc3c1d1c42b7a4e9e5c89884",
        "refinement_interpretation_Tm_refine_3bc04952e495dc70c0ea20124c41a18c",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_4857f69362085f6422cd14fa475bec1a",
        "refinement_interpretation_Tm_refine_4f37367c7828316b951698ec5607a402",
        "refinement_interpretation_Tm_refine_5a09de1efe4b8e150cfdaeaf95d864d4",
        "refinement_interpretation_Tm_refine_7778e6829125aada02b932a3a2836fc5",
        "refinement_interpretation_Tm_refine_87921bbb84409a2ed981c6d200ceccc7",
        "refinement_interpretation_Tm_refine_90c17150abf5cdb4d91f504ab07d9689",
        "refinement_interpretation_Tm_refine_a57e6988f2d29bd5aa0679db10f4f337",
        "refinement_interpretation_Tm_refine_aa65397fbbff84d505ae2dd0564e5060",
        "refinement_interpretation_Tm_refine_d023b9461e4d4c2c1260f907a1d7e4a1",
        "refinement_interpretation_Tm_refine_e1f67126dd5bfa8bcd6dcb4f26e2465c",
        "refinement_interpretation_Tm_refine_eb122da4c180a9560099d344f919cf04",
        "refinement_interpretation_Tm_refine_f59487b7e8b45c2a070787f5739c33a0",
        "refinement_kinding_Tm_refine_c80f93641670351ef037bee53d1c4edc",
        "typing_FStar.Buffer.MkBuffer.content",
        "typing_FStar.Buffer.MkBuffer.idx",
        "typing_FStar.Buffer.MkBuffer.length", "typing_FStar.Buffer.content",
        "typing_FStar.Buffer.frameOf", "typing_FStar.Buffer.length",
        "typing_FStar.Heap.contains", "typing_FStar.Heap.domain",
        "typing_FStar.Heap.restrict", "typing_FStar.HyperHeap.as_ref",
        "typing_FStar.HyperHeap.contains_ref",
        "typing_FStar.HyperHeap.includes", "typing_FStar.HyperStack.HS.h",
        "typing_FStar.HyperStack.HS.tip", "typing_FStar.HyperStack.MkRef.id",
        "typing_FStar.HyperStack.MkRef.ref",
        "typing_FStar.HyperStack.is_above",
        "typing_FStar.HyperStack.is_eternal_region",
        "typing_FStar.HyperStack.is_in",
        "typing_FStar.HyperStack.is_stack_region",
        "typing_FStar.HyperStack.poppable",
        "typing_FStar.HyperStack.remove_elt", "typing_FStar.Map.concat",
        "typing_FStar.Map.contains", "typing_FStar.Map.domain",
        "typing_FStar.Map.restrict", "typing_FStar.Map.sel",
        "typing_FStar.Set.complement", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_FStar.TSet.complement",
        "typing_FStar.TSet.empty", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v"
      ],
      0
    ]
  ]
]