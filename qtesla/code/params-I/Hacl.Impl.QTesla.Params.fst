module Hacl.Impl.QTesla.Params

open FStar.Int
open Lib.IntTypes
open Lib.Buffer
open FStar.Int.Cast
open Hacl.Impl.QTesla.Constants

module S = QTesla.Params
module SHA3 = Hacl.SHA3
module I16 = FStar.Int16
module I32 = FStar.Int32
module I64 = FStar.Int64
module UI16 = FStar.UInt16
module UI32 = FStar.UInt32
module UI64 = FStar.UInt64

#reset-options "--z3rlimit 100 --max_fuel 0 --max_ifuel 0 --admit_smt_queries true"

type elem = I32.t
unfold let to_elem = I32.int_to_t
module IElem = FStar.Int32
unfold let elem_n = IElem.n

unfold let sparse_elem = I16.t
unfold let to_sparse_elem = I16.int_to_t
unfold let sparse_to_int16 x = x

unfold let elem_to_int8 = int32_to_int8
unfold let int8_to_elem = int8_to_int32
unfold let elem_to_uint8 = int32_to_uint8
unfold let uint8_to_elem = uint8_to_int32
unfold let elem_to_int16 = int32_to_int16
unfold let int16_to_elem = int16_to_int32
unfold let elem_to_int32 x = x
unfold let int32_to_elem x = x
unfold let elem_to_uint32 = int32_to_uint32
unfold let uint32_to_elem = uint32_to_int32
unfold let elem_to_int64 = int32_to_int64
unfold let int64_to_elem = int64_to_int32
unfold let elem_to_uint64 = int32_to_uint64
unfold let uint64_to_elem = uint64_to_int32

unfold let op_Plus_Hat = IElem.op_Plus_Hat
unfold let op_Subtraction_Hat = IElem.op_Subtraction_Hat
unfold let op_Star_Hat = IElem.op_Star_Hat
unfold let op_Slash_Hat = IElem.op_Slash_Hat
unfold let op_Percent_Hat = IElem.op_Percent_Hat
unfold let op_Hat_Hat = IElem.op_Hat_Hat
unfold let op_Amp_Hat = IElem.op_Amp_Hat
unfold let op_Bar_Hat = IElem.op_Bar_Hat
unfold let op_Less_Less_Hat = IElem.op_Less_Less_Hat
unfold let op_Greater_Greater_Hat = IElem.op_Greater_Greater_Hat
unfold let op_Equals_Hat = IElem.op_Equals_Hat
unfold let op_Greater_Hat = IElem.op_Greater_Hat
unfold let op_Greater_Equals_Hat = IElem.op_Greater_Equals_Hat
unfold let op_Less_Hat = IElem.op_Less_Hat
unfold let op_Less_Equals_Hat = IElem.op_Less_Equals_Hat
unfold let lognot = IElem.lognot

/// Parameters in QTesla.Params aren't marked as unfold or inline_for_extraction;
/// so we need to normalize them here
let params_n = size (normalize_term S.params_n)
let params_k = size (normalize_term S.params_k)
let params_q = to_elem (normalize_term S.params_q)
let params_h = size (normalize_term S.params_h)
let params_Le  = UI32.uint_to_t (normalize_term S.params_Le)
let params_Ls = UI32.uint_to_t (normalize_term S.params_Ls)
let params_B = to_elem (normalize_term S.params_B)
let params_U = to_elem (normalize_term S.params_Ls)
let params_d = size (normalize_term S.params_d)
let params_genA = size (normalize_term S.params_bGenA)

/// Parameters specific to the implementation and not in the spec
let params_barr_mult = I64.int_to_t (normalize_term 1021)
let params_barr_div = UI32.uint_to_t (normalize_term 32)
let params_qinv = I64.int_to_t (normalize_term 3098553343)
let params_q_log = size (normalize_term 23) // TODO: this can be computed
let params_r2_invn = I64.int_to_t (normalize_term 113307)
let params_s_bits = size (normalize_term 10)
let params_b_bits = size (normalize_term 20)
let params_rejection = to_elem (normalize_term S.params_Le)

inline_for_extraction noextract
let params_SHAKE = SHA3.shake128_hacl
inline_for_extraction noextract
let params_cSHAKE = SHA3.cshake128_frodo

inline_for_extraction noextract
let shake_rate = shake128_rate

let crypto_hmbytes = size 64
let crypto_randombytes = size 32
let crypto_seedbytes = size 32
let crypto_c_bytes = size 32

/// Sizes calculated based on parameters, but calculation method varies by parameter set
let crypto_secretkeybytes:size_t = normalize_term (size 2 *. params_s_bits *. params_n /. size 8 +. size 2 *. crypto_seedbytes)
let crypto_publickeybytes = normalize_term ((params_n *. params_q_log +. size 7) /. size 8 +. crypto_seedbytes)
let crypto_bytes = normalize_term (((params_n *. params_d +. size 7) /. (size 8)) +. crypto_c_bytes)

/// Precomputed polynomials for doing NTT transformations

unfold let zeta_list: list elem = [
3359531l; 2189080l; 370173l; 677362l;
3132616l; 2989204l; 2362181l; 1720831l;
1203721l; 3239574l; 641414l; 3932234l;
3634017l; 2251707l; 355329l; 4152265l;
1356023l; 4021436l; 1465601l; 4145892l;
3348341l; 675693l; 1598775l; 2799365l;
3336234l; 3856839l; 603157l; 1381183l;
1069471l; 2142038l; 2877387l; 2653969l;
2055310l; 3837123l; 3141231l; 1951522l;
2375048l; 445122l; 1689285l; 3664328l;
676319l; 3844199l; 3669724l; 1009639l;
3666694l; 1585701l; 2102892l; 966523l;
4069555l; 3246046l; 846643l; 2088895l;
4068915l; 3715722l; 4119007l; 230501l;
1626667l; 2119752l; 1171284l; 3153846l;
17941l; 1316589l; 1814059l; 3185686l;
1183551l; 2533671l; 4152595l; 2616162l;
3015757l; 194860l; 1601807l; 1271569l;
139534l; 2581874l; 2183200l; 2060697l;
1036874l; 646550l; 2823563l; 3312274l;
391700l; 99391l; 638903l; 2397164l;
3924868l; 3315551l; 1170767l; 422539l;
1801679l; 166402l; 742283l; 222557l;
522210l; 3415900l; 177835l; 3243355l;
4196855l; 1821376l; 1290490l; 3624896l;
1546898l; 1282351l; 3960516l; 835944l;
2251927l; 90910l; 3034838l; 4082965l;
2311377l; 3512216l; 2652413l; 2191140l;
302935l; 3866228l; 2007511l; 744185l;
2801160l; 3993630l; 592962l; 795067l;
2822609l; 3471782l; 3710854l; 1824985l;
1495256l; 3906591l; 3111335l; 3902620l;
11234l; 1586236l; 3698245l; 492808l;
2729660l; 3369937l; 1869963l; 7244l;
1453951l; 1757304l; 1005437l; 3668653l;
1821321l; 4203686l; 1192473l; 113408l;
2904803l; 1346735l; 4161890l; 711442l;
4020959l; 1164150l; 2139014l; 4134238l;
731747l; 3856202l; 2351090l; 3382729l;
2644693l; 617098l; 2796766l; 1911274l;
552932l; 2476095l; 1801797l; 1381577l;
2338697l; 1336590l; 2798544l; 459121l;
3555631l; 741068l; 2302686l; 1883916l;
2148181l; 2471691l; 2174195l; 1684042l;
3266036l; 227434l; 4107207l; 2910899l;
3427718l; 2011049l; 2706372l; 4182237l;
1243355l; 2908998l; 15068l; 1966206l;
2157082l; 4114100l; 1846352l; 230880l;
1161075l; 1259576l; 1212857l; 1697580l;
39500l; 3079648l; 2529577l; 2082167l;
50282l; 476606l; 1494601l; 1334236l;
3349015l; 1600445l; 413060l; 3104844l;
139283l; 1688398l; 3230017l; 1009712l;
614253l; 2973529l; 2077610l; 2218429l;
4185344l; 254428l; 506799l; 196179l;
3310395l; 4183346l; 3897905l; 2234639l;
1859699l; 3322900l; 2151737l; 1904476l;
2457045l; 383438l; 2543045l; 2985636l;
731083l; 1609871l; 2171434l; 535413l;
2666041l; 405934l; 3303186l; 802974l;
3573046l; 1760267l; 2758359l; 2102800l;
1512274l; 3981750l; 1838169l; 2101846l;
1363757l; 1342163l; 3608830l; 321523l;
1072908l; 855117l; 1679204l; 3624675l;
3183259l; 2438624l; 407591l; 1549799l;
490068l; 2769318l; 3185950l; 990968l;
3700398l; 2715638l; 3672301l; 3203080l;
1775408l; 2071611l; 778637l; 2335351l;
3317014l; 3768001l; 571163l; 2618746l;
1028702l; 3174131l; 764504l; 1386439l;
4188876l; 1131998l; 1057083l; 39651l;
2588805l; 2519763l; 3838931l; 4130059l;
1893001l; 2066802l; 572208l; 2529031l;
220967l; 3880345l; 1820301l; 2205978l;
3036090l; 1648541l; 4012391l; 1432533l;
3068186l; 1645476l; 1397186l; 2112498l;
4168213l; 1234734l; 1648052l; 1803157l;
2011730l; 1648875l; 2547914l; 437873l;
2460774l; 3403214l; 2690605l; 2567052l;
739775l; 1854855l; 520305l; 3661464l;
1120944l; 1245195l; 1147367l; 2571134l;
696367l; 3009976l; 834907l; 1691662l;
1384090l; 2795844l; 1813845l; 3425954l;
4194068l; 1317042l; 2056507l; 470026l;
3097617l; 2678203l; 3077203l; 2116013l;
4155561l; 2844478l; 1467696l; 4150754l;
992951l; 471101l; 4062883l; 1584992l;
2252609l; 3322854l; 1597940l; 3581574l;
1115369l; 4153697l; 3236495l; 4075586l;
2066340l; 1262360l; 2730720l; 3664692l;
2681478l; 2929295l; 3831713l; 3683420l;
2511172l; 3689552l; 2645837l; 2414330l;
857564l; 3703853l; 468246l; 1574274l;
3590547l; 2348366l; 1565207l; 1815326l;
2508730l; 1749217l; 465029l; 260794l;
1630097l; 3019607l; 3872759l; 1053481l;
3958758l; 3415305l; 54348l; 2516l; 
3045515l; 3011542l; 1951553l; 1882613l;
1729323l; 801736l; 3662451l; 909634l;
2949838l; 2598628l; 1652685l; 1945350l;
3221627l; 2879417l; 2732226l; 3883548l;
1891328l; 3215710l; 3159721l; 1318941l;
2153764l; 1870381l; 4039453l; 3375151l;
2655219l; 4089723l; 1388508l; 3436490l;
3956335l; 2748982l; 4111030l; 328986l;
1780674l; 2570336l; 2608795l; 2600572l;
2748827l; 790335l; 1988956l; 3946950l;
1789942l; 710384l; 3900335l; 457139l;
2550557l; 3042298l; 1952120l; 1998308l;
259999l; 2361900l; 119023l; 3680445l;
1893737l; 4050016l; 2696786l; 567472l;
3085466l; 1580931l; 1360307l; 3075154l;
904205l; 1306381l; 3257843l; 2926984l;
2065676l; 3221598l; 2551064l; 1580354l;
1636374l; 699891l; 1821560l; 670885l;
947258l; 2908840l; 3049868l; 1038075l;
1701447l; 2439140l; 2048478l; 3183312l;
2224644l; 320592l; 3304074l; 2611056l;
422256l; 1752180l; 2217951l; 2900510l;
1321050l; 2797671l; 312886l; 2624042l;
3166863l; 908176l; 24947l; 152205l;
2891981l; 189908l; 1959427l; 1365987l;
2071767l; 1932065l; 3185693l; 3889374l;
3644713l; 79765l; 969178l; 11268l; 
1992233l; 1579325l; 1224905l; 3741957l; 
1894871l; 3060100l; 1787540l; 4194180l; 
1396587l; 2745514l; 26822l; 695515l; 
2348201l; 249698l; 2988539l; 1081347l ] 

unfold let zetainv_list: list elem = [
1217030l; 3955871l; 1857368l; 3510054l; 4178747l; 1460055l; 2808982l; 11389l;
2418029l; 1145469l; 2310698l; 463612l; 2980664l; 2626244l; 2213336l; 4194301l;
3236391l; 4125804l; 560856l; 316195l; 1019876l; 2273504l; 2133802l; 2839582l;
2246142l; 4015661l; 1313588l; 4053364l; 4180622l; 3297393l; 1038706l;
1581527l; 3892683l; 1407898l; 2884519l; 1305059l; 1987618l; 2453389l;
3783313l; 1594513l; 901495l; 3884977l; 1980925l; 1022257l; 2157091l; 1766429l;
2504122l; 3167494l; 1155701l; 1296729l; 3258311l; 3534684l; 2384009l;
3505678l; 2569195l; 2625215l; 1654505l; 983971l; 2139893l; 1278585l; 947726l;
2899188l; 3301364l; 1130415l; 2845262l; 2624638l; 1120103l; 3638097l;
1508783l; 155553l; 2311832l; 525124l; 4086546l; 1843669l; 3945570l; 2207261l;
2253449l; 1163271l; 1655012l; 3748430l; 305234l; 3495185l; 2415627l; 258619l;
2216613l; 3415234l; 1456742l; 1604997l; 1596774l; 1635233l; 2424895l;
3876583l; 94539l; 1456587l; 249234l; 769079l; 2817061l; 115846l; 1550350l;
830418l; 166116l; 2335188l; 2051805l; 2886628l; 1045848l; 989859l; 2314241l;
322021l; 1473343l; 1326152l; 983942l; 2260219l; 2552884l; 1606941l; 1255731l;
3295935l; 543118l; 3403833l; 2476246l; 2322956l; 2254016l; 1194027l; 1160054l;
4203053l; 4151221l; 790264l; 246811l; 3152088l; 332810l; 1185962l; 2575472l;
3944775l; 3740540l; 2456352l; 1696839l; 2390243l; 2640362l; 1857203l; 615022l;
2631295l; 3737323l; 501716l; 3348005l; 1791239l; 1559732l; 516017l; 1694397l;
522149l; 373856l; 1276274l; 1524091l; 540877l; 1474849l; 2943209l; 2139229l;
129983l; 969074l; 51872l; 3090200l; 623995l; 2607629l; 882715l; 1952960l;
2620577l; 142686l; 3734468l; 3212618l; 54815l; 2737873l; 1361091l; 50008l;
2089556l; 1128366l; 1527366l; 1107952l; 3735543l; 2149062l; 2888527l; 11501l;
779615l; 2391724l; 1409725l; 2821479l; 2513907l; 3370662l; 1195593l; 3509202l;
1634435l; 3058202l; 2960374l; 3084625l; 544105l; 3685264l; 2350714l; 3465794l;
1638517l; 1514964l; 802355l; 1744795l; 3767696l; 1657655l; 2556694l; 2193839l;
2402412l; 2557517l; 2970835l; 37356l; 2093071l; 2808383l; 2560093l; 1137383l;
2773036l; 193178l; 2557028l; 1169479l; 1999591l; 2385268l; 325224l; 3984602l;
1676538l; 3633361l; 2138767l; 2312568l; 75510l; 366638l; 1685806l; 1616764l;
4165918l; 3148486l; 3073571l; 16693l; 2819130l; 3441065l; 1031438l; 3176867l;
1586823l; 3634406l; 437568l; 888555l; 1870218l; 3426932l; 2133958l; 2430161l;
1002489l; 533268l; 1489931l; 505171l; 3214601l; 1019619l; 1436251l; 3715501l;
2655770l; 3797978l; 1766945l; 1022310l; 580894l; 2526365l; 3350452l; 3132661l;
3884046l; 596739l; 2863406l; 2841812l; 2103723l; 2367400l; 223819l; 2693295l;
2102769l; 1447210l; 2445302l; 632523l; 3402595l; 902383l; 3799635l; 1539528l;
3670156l; 2034135l; 2595698l; 3474486l; 1219933l; 1662524l; 3822131l;
1748524l; 2301093l; 2053832l; 882669l; 2345870l; 1970930l; 307664l; 22223l;
895174l; 4009390l; 3698770l; 3951141l; 20225l; 1987140l; 2127959l; 1232040l;
3591316l; 3195857l; 975552l; 2517171l; 4066286l; 1100725l; 3792509l; 2605124l;
856554l; 2871333l; 2710968l; 3728963l; 4155287l; 2123402l; 1675992l; 1125921l;
4166069l; 2507989l; 2992712l; 2945993l; 3044494l; 3974689l; 2359217l; 91469l;
2048487l; 2239363l; 4190501l; 1296571l; 2962214l; 23332l; 1499197l; 2194520l;
777851l; 1294670l; 98362l; 3978135l; 939533l; 2521527l; 2031374l; 1733878l;
2057388l; 2321653l; 1902883l; 3464501l; 649938l; 3746448l; 1407025l; 2868979l;
1866872l; 2823992l; 2403772l; 1729474l; 3652637l; 2294295l; 1408803l;
3588471l; 1560876l; 822840l; 1854479l; 349367l; 3473822l; 71331l; 2066555l;
3041419l; 184610l; 3494127l; 43679l; 2858834l; 1300766l; 4092161l; 3013096l;
1883l; 2384248l; 536916l; 3200132l; 2448265l; 2751618l; 4198325l; 2335606l;
835632l; 1475909l; 3712761l; 507324l; 2619333l; 4194335l; 302949l; 1094234l;
298978l; 2710313l; 2380584l; 494715l; 733787l; 1382960l; 3410502l; 3612607l;
211939l; 1404409l; 3461384l; 2198058l; 339341l; 3902634l; 2014429l; 1553156l;
693353l; 1894192l; 122604l; 1170731l; 4114659l; 1953642l; 3369625l; 245053l;
2923218l; 2658671l; 580673l; 2915079l; 2384193l; 8714l; 962214l; 4027734l;
789669l; 3683359l; 3983012l; 3463286l; 4039167l; 2403890l; 3783030l; 3034802l;
890018l; 280701l; 1808405l; 3566666l; 4106178l; 3813869l; 893295l; 1382006l;
3559019l; 3168695l; 2144872l; 2022369l; 1623695l; 4066035l; 2934000l;
2603762l; 4010709l; 1189812l; 1589407l; 52974l; 1671898l; 3022018l; 1019883l;
2391510l; 2888980l; 4187628l; 1051723l; 3034285l; 2085817l; 2578902l;
3975068l; 86562l; 489847l; 136654l; 2116674l; 3358926l; 959523l; 136014l;
3239046l; 2102677l; 2619868l; 538875l; 3195930l; 535845l; 361370l; 3529250l;
541241l; 2516284l; 3760447l; 1830521l; 2254047l; 1064338l; 368446l; 2150259l;
1551600l; 1328182l; 2063531l; 3136098l; 2824386l; 3602412l; 348730l; 869335l;
1406204l; 2606794l; 3529876l; 857228l; 59677l; 2739968l; 184133l; 2849546l;
53304l; 3850240l; 1953862l; 571552l; 273335l; 3564155l; 965995l; 3001848l;
2484738l; 1843388l; 1216365l; 1072953l; 3528207l; 3835396l; 2016489l; 846038l;
3124222l ]



