module Spec.Keccak.Test

#reset-options "--z3rlimit 100 --max_fuel 0"

open FStar.Mul
open Spec.Lib.IntTypes
open Spec.Lib.RawIntTypes
open Spec.Lib.IntSeq

//
// Test 1
//

let test1_plaintext = create 0 (u8 0x00)

let test1_expected = List.Tot.map u8_from_UInt8 [
  0x46uy; 0xb9uy; 0xdduy; 0x2buy; 0x0buy; 0xa8uy; 0x8duy; 0x13uy; 0x23uy; 0x3buy; 0x3fuy; 0xebuy; 0x74uy; 0x3euy; 0xebuy; 0x24uy;
  0x3fuy; 0xcduy; 0x52uy; 0xeauy; 0x62uy; 0xb8uy; 0x1buy; 0x82uy; 0xb5uy; 0x0cuy; 0x27uy; 0x64uy; 0x6euy; 0xd5uy; 0x76uy; 0x2fuy;
  0xd7uy; 0x5duy; 0xc4uy; 0xdduy; 0xd8uy; 0xc0uy; 0xf2uy; 0x00uy; 0xcbuy; 0x05uy; 0x01uy; 0x9duy; 0x67uy; 0xb5uy; 0x92uy; 0xf6uy;
  0xfcuy; 0x82uy; 0x1cuy; 0x49uy; 0x47uy; 0x9auy; 0xb4uy; 0x86uy; 0x40uy; 0x29uy; 0x2euy; 0xacuy; 0xb3uy; 0xb7uy; 0xc4uy; 0xbeuy;
  0x14uy; 0x1euy; 0x96uy; 0x61uy; 0x6fuy; 0xb1uy; 0x39uy; 0x57uy; 0x69uy; 0x2cuy; 0xc7uy; 0xeduy; 0xd0uy; 0xb4uy; 0x5auy; 0xe3uy;
  0xdcuy; 0x07uy; 0x22uy; 0x3cuy; 0x8euy; 0x92uy; 0x93uy; 0x7buy; 0xefuy; 0x84uy; 0xbcuy; 0x0euy; 0xabuy; 0x86uy; 0x28uy; 0x53uy;
  0x34uy; 0x9euy; 0xc7uy; 0x55uy; 0x46uy; 0xf5uy; 0x8fuy; 0xb7uy; 0xc2uy; 0x77uy; 0x5cuy; 0x38uy; 0x46uy; 0x2cuy; 0x50uy; 0x10uy;
  0xd8uy; 0x46uy; 0xc1uy; 0x85uy; 0xc1uy; 0x51uy; 0x11uy; 0xe5uy; 0x95uy; 0x52uy; 0x2auy; 0x6buy; 0xcduy; 0x16uy; 0xcfuy; 0x86uy;
  0xf3uy; 0xd1uy; 0x22uy; 0x10uy; 0x9euy; 0x3buy; 0x1fuy; 0xdduy; 0x94uy; 0x3buy; 0x6auy; 0xecuy; 0x46uy; 0x8auy; 0x2duy; 0x62uy;
  0x1auy; 0x7cuy; 0x06uy; 0xc6uy; 0xa9uy; 0x57uy; 0xc6uy; 0x2buy; 0x54uy; 0xdauy; 0xfcuy; 0x3buy; 0xe8uy; 0x75uy; 0x67uy; 0xd6uy;
  0x77uy; 0x23uy; 0x13uy; 0x95uy; 0xf6uy; 0x14uy; 0x72uy; 0x93uy; 0xb6uy; 0x8cuy; 0xeauy; 0xb7uy; 0xa9uy; 0xe0uy; 0xc5uy; 0x8duy;
  0x86uy; 0x4euy; 0x8euy; 0xfduy; 0xe4uy; 0xe1uy; 0xb9uy; 0xa4uy; 0x6cuy; 0xbeuy; 0x85uy; 0x47uy; 0x13uy; 0x67uy; 0x2fuy; 0x5cuy;
  0xaauy; 0xaeuy; 0x31uy; 0x4euy; 0xd9uy; 0x08uy; 0x3duy; 0xabuy; 0x4buy; 0x09uy; 0x9fuy; 0x8euy; 0x30uy; 0x0fuy; 0x01uy; 0xb8uy;
  0x65uy; 0x0fuy; 0x1fuy; 0x4buy; 0x1duy; 0x8fuy; 0xcfuy; 0x3fuy; 0x3cuy; 0xb5uy; 0x3fuy; 0xb8uy; 0xe9uy; 0xebuy; 0x2euy; 0xa2uy;
  0x03uy; 0xbduy; 0xc9uy; 0x70uy; 0xf5uy; 0x0auy; 0xe5uy; 0x54uy; 0x28uy; 0xa9uy; 0x1fuy; 0x7fuy; 0x53uy; 0xacuy; 0x26uy; 0x6buy;
  0x28uy; 0x41uy; 0x9cuy; 0x37uy; 0x78uy; 0xa1uy; 0x5fuy; 0xd2uy; 0x48uy; 0xd3uy; 0x39uy; 0xeduy; 0xe7uy; 0x85uy; 0xfbuy; 0x7fuy;
  0x5auy; 0x1auy; 0xaauy; 0x96uy; 0xd3uy; 0x13uy; 0xeauy; 0xccuy; 0x89uy; 0x09uy; 0x36uy; 0xc1uy; 0x73uy; 0xcduy; 0xcduy; 0x0fuy;
  0xabuy; 0x88uy; 0x2cuy; 0x45uy; 0x75uy; 0x5fuy; 0xebuy; 0x3auy; 0xeduy; 0x96uy; 0xd4uy; 0x77uy; 0xffuy; 0x96uy; 0x39uy; 0x0buy;
  0xf9uy; 0xa6uy; 0x6duy; 0x13uy; 0x68uy; 0xb2uy; 0x08uy; 0xe2uy; 0x1fuy; 0x7cuy; 0x10uy; 0xd0uy; 0x4auy; 0x3duy; 0xbduy; 0x4euy;
  0x36uy; 0x06uy; 0x33uy; 0xe5uy; 0xdbuy; 0x4buy; 0x60uy; 0x26uy; 0x01uy; 0xc1uy; 0x4cuy; 0xeauy; 0x73uy; 0x7duy; 0xb3uy; 0xdcuy;
  0xf7uy; 0x22uy; 0x63uy; 0x2cuy; 0xc7uy; 0x78uy; 0x51uy; 0xcbuy; 0xdduy; 0xe2uy; 0xaauy; 0xf0uy; 0xa3uy; 0x3auy; 0x07uy; 0xb3uy;
  0x73uy; 0x44uy; 0x5duy; 0xf4uy; 0x90uy; 0xccuy; 0x8fuy; 0xc1uy; 0xe4uy; 0x16uy; 0x0fuy; 0xf1uy; 0x18uy; 0x37uy; 0x8fuy; 0x11uy;
  0xf0uy; 0x47uy; 0x7duy; 0xe0uy; 0x55uy; 0xa8uy; 0x1auy; 0x9euy; 0xdauy; 0x57uy; 0xa4uy; 0xa2uy; 0xcfuy; 0xb0uy; 0xc8uy; 0x39uy;
  0x29uy; 0xd3uy; 0x10uy; 0x91uy; 0x2fuy; 0x72uy; 0x9euy; 0xc6uy; 0xcfuy; 0xa3uy; 0x6cuy; 0x6auy; 0xc6uy; 0xa7uy; 0x58uy; 0x37uy;
  0x14uy; 0x30uy; 0x45uy; 0xd7uy; 0x91uy; 0xccuy; 0x85uy; 0xefuy; 0xf5uy; 0xb2uy; 0x19uy; 0x32uy; 0xf2uy; 0x38uy; 0x61uy; 0xbcuy;
  0xf2uy; 0x3auy; 0x52uy; 0xb5uy; 0xdauy; 0x67uy; 0xeauy; 0xf7uy; 0xbauy; 0xaeuy; 0x0fuy; 0x5fuy; 0xb1uy; 0x36uy; 0x9duy; 0xb7uy;
  0x8fuy; 0x3auy; 0xc4uy; 0x5fuy; 0x8cuy; 0x4auy; 0xc5uy; 0x67uy; 0x1duy; 0x85uy; 0x73uy; 0x5cuy; 0xdduy; 0xdbuy; 0x09uy; 0xd2uy;
  0xb1uy; 0xe3uy; 0x4auy; 0x1fuy; 0xc0uy; 0x66uy; 0xffuy; 0x4auy; 0x16uy; 0x2cuy; 0xb2uy; 0x63uy; 0xd6uy; 0x54uy; 0x12uy; 0x74uy;
  0xaeuy; 0x2fuy; 0xccuy; 0x86uy; 0x5fuy; 0x61uy; 0x8auy; 0xbeuy; 0x27uy; 0xc1uy; 0x24uy; 0xcduy; 0x8buy; 0x07uy; 0x4cuy; 0xcduy;
  0x51uy; 0x63uy; 0x01uy; 0xb9uy; 0x18uy; 0x75uy; 0x82uy; 0x4duy; 0x09uy; 0x95uy; 0x8fuy; 0x34uy; 0x1euy; 0xf2uy; 0x74uy; 0xbduy;
  0xabuy; 0x0buy; 0xaeuy; 0x31uy; 0x63uy; 0x39uy; 0x89uy; 0x43uy; 0x04uy; 0xe3uy; 0x58uy; 0x77uy; 0xb0uy; 0xc2uy; 0x8auy; 0x9buy;
  0x1fuy; 0xd1uy; 0x66uy; 0xc7uy; 0x96uy; 0xb9uy; 0xccuy; 0x25uy; 0x8auy; 0x06uy; 0x4auy; 0x8fuy; 0x57uy; 0xe2uy; 0x7fuy; 0x2auy
]

//
// Test 2
//

let test2_plaintext = create 32 (u8 00)

let test2_expected = List.Tot.map u8_from_UInt8 [
  0xf5uy; 0x97uy; 0x7cuy; 0x82uy; 0x83uy; 0x54uy; 0x6auy; 0x63uy; 0x72uy; 0x3buy; 0xc3uy; 0x1duy; 0x26uy; 0x19uy; 0x12uy; 0x4fuy;
  0x11uy; 0xdbuy; 0x46uy; 0x58uy; 0x64uy; 0x33uy; 0x36uy; 0x74uy; 0x1duy; 0xf8uy; 0x17uy; 0x57uy; 0xd5uy; 0xaduy; 0x30uy; 0x62uy
]

//
// Main
//

let test () =

  IO.print_string "\nTEST 1\n";
  let test1_plaintext_len : size_nat = 0 in
  let test1_expected : lbytes 512 = createL test1_expected in
  let test1_result : lbytes 512 = Spec.Keccak.shake256 test1_plaintext_len test1_plaintext 512 in
  let result1 = for_all2 (fun a b -> uint_to_nat #U8 a = uint_to_nat #U8 b) test1_expected test1_result in

  IO.print_string "\nResult   SHAKE 256: \n";
  List.iter (fun a -> IO.print_string (UInt8.to_string_hex (u8_to_UInt8 a))) (as_list test1_result);

  IO.print_string "\nExpected SHAKE 256: \n";
  List.iter (fun a -> IO.print_string (UInt8.to_string_hex (u8_to_UInt8 a))) (as_list test1_expected);
  
  IO.print_string "\n \nTEST 2\n";

  let test2_plaintext_len : size_nat = 32 in
  let test2_expected : lbytes 32 = createL test2_expected in
  let test2_result : lbytes 32 = Spec.Keccak.shake256 test2_plaintext_len test2_plaintext 32 in
  let result2 = for_all2 (fun a b -> uint_to_nat #U8 a = uint_to_nat #U8 b) test2_expected test2_result in

  IO.print_string "\nResult   SHAKE 256: \n";
  List.iter (fun a -> IO.print_string (UInt8.to_string_hex (u8_to_UInt8 a))) (as_list test2_result);

  IO.print_string "\nExpected SHAKE 256: \n";
  List.iter (fun a -> IO.print_string (UInt8.to_string_hex (u8_to_UInt8 a))) (as_list test2_expected);

  let result = result1 && result2 in
  if result then IO.print_string "\nSHAKE 256 Test1 : Success!\n"
  else IO.print_string "\nSHAKE 256 Test1: Failure :(\n"
