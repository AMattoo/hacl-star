module Spec.Keccak.Test

#reset-options "--z3rlimit 100 --max_fuel 0"

open FStar.Mul
open Lib.IntTypes
open Lib.RawIntTypes
open Lib.Sequence
open Lib.ByteSequence

//
// Test 1. SHAKE256
//

let test1_plaintext = create 0 (u8 0x00)

let test1_expected = List.Tot.map u8_from_UInt8 [
  0x46uy; 0xb9uy; 0xdduy; 0x2buy; 0x0buy; 0xa8uy; 0x8duy; 0x13uy; 0x23uy; 0x3buy; 0x3fuy; 0xebuy; 0x74uy; 0x3euy; 0xebuy; 0x24uy;
  0x3fuy; 0xcduy; 0x52uy; 0xeauy; 0x62uy; 0xb8uy; 0x1buy; 0x82uy; 0xb5uy; 0x0cuy; 0x27uy; 0x64uy; 0x6euy; 0xd5uy; 0x76uy; 0x2fuy;
  0xd7uy; 0x5duy; 0xc4uy; 0xdduy; 0xd8uy; 0xc0uy; 0xf2uy; 0x00uy; 0xcbuy; 0x05uy; 0x01uy; 0x9duy; 0x67uy; 0xb5uy; 0x92uy; 0xf6uy;
  0xfcuy; 0x82uy; 0x1cuy; 0x49uy; 0x47uy; 0x9auy; 0xb4uy; 0x86uy; 0x40uy; 0x29uy; 0x2euy; 0xacuy; 0xb3uy; 0xb7uy; 0xc4uy; 0xbeuy;
  0x14uy; 0x1euy; 0x96uy; 0x61uy; 0x6fuy; 0xb1uy; 0x39uy; 0x57uy; 0x69uy; 0x2cuy; 0xc7uy; 0xeduy; 0xd0uy; 0xb4uy; 0x5auy; 0xe3uy;
  0xdcuy; 0x07uy; 0x22uy; 0x3cuy; 0x8euy; 0x92uy; 0x93uy; 0x7buy; 0xefuy; 0x84uy; 0xbcuy; 0x0euy; 0xabuy; 0x86uy; 0x28uy; 0x53uy;
  0x34uy; 0x9euy; 0xc7uy; 0x55uy; 0x46uy; 0xf5uy; 0x8fuy; 0xb7uy; 0xc2uy; 0x77uy; 0x5cuy; 0x38uy; 0x46uy; 0x2cuy; 0x50uy; 0x10uy;
  0xd8uy; 0x46uy; 0xc1uy; 0x85uy; 0xc1uy; 0x51uy; 0x11uy; 0xe5uy; 0x95uy; 0x52uy; 0x2auy; 0x6buy; 0xcduy; 0x16uy; 0xcfuy; 0x86uy;
  0xf3uy; 0xd1uy; 0x22uy; 0x10uy; 0x9euy; 0x3buy; 0x1fuy; 0xdduy; 0x94uy; 0x3buy; 0x6auy; 0xecuy; 0x46uy; 0x8auy; 0x2duy; 0x62uy;
  0x1auy; 0x7cuy; 0x06uy; 0xc6uy; 0xa9uy; 0x57uy; 0xc6uy; 0x2buy; 0x54uy; 0xdauy; 0xfcuy; 0x3buy; 0xe8uy; 0x75uy; 0x67uy; 0xd6uy;
  0x77uy; 0x23uy; 0x13uy; 0x95uy; 0xf6uy; 0x14uy; 0x72uy; 0x93uy; 0xb6uy; 0x8cuy; 0xeauy; 0xb7uy; 0xa9uy; 0xe0uy; 0xc5uy; 0x8duy;
  0x86uy; 0x4euy; 0x8euy; 0xfduy; 0xe4uy; 0xe1uy; 0xb9uy; 0xa4uy; 0x6cuy; 0xbeuy; 0x85uy; 0x47uy; 0x13uy; 0x67uy; 0x2fuy; 0x5cuy;
  0xaauy; 0xaeuy; 0x31uy; 0x4euy; 0xd9uy; 0x08uy; 0x3duy; 0xabuy; 0x4buy; 0x09uy; 0x9fuy; 0x8euy; 0x30uy; 0x0fuy; 0x01uy; 0xb8uy;
  0x65uy; 0x0fuy; 0x1fuy; 0x4buy; 0x1duy; 0x8fuy; 0xcfuy; 0x3fuy; 0x3cuy; 0xb5uy; 0x3fuy; 0xb8uy; 0xe9uy; 0xebuy; 0x2euy; 0xa2uy;
  0x03uy; 0xbduy; 0xc9uy; 0x70uy; 0xf5uy; 0x0auy; 0xe5uy; 0x54uy; 0x28uy; 0xa9uy; 0x1fuy; 0x7fuy; 0x53uy; 0xacuy; 0x26uy; 0x6buy;
  0x28uy; 0x41uy; 0x9cuy; 0x37uy; 0x78uy; 0xa1uy; 0x5fuy; 0xd2uy; 0x48uy; 0xd3uy; 0x39uy; 0xeduy; 0xe7uy; 0x85uy; 0xfbuy; 0x7fuy;
  0x5auy; 0x1auy; 0xaauy; 0x96uy; 0xd3uy; 0x13uy; 0xeauy; 0xccuy; 0x89uy; 0x09uy; 0x36uy; 0xc1uy; 0x73uy; 0xcduy; 0xcduy; 0x0fuy;
  0xabuy; 0x88uy; 0x2cuy; 0x45uy; 0x75uy; 0x5fuy; 0xebuy; 0x3auy; 0xeduy; 0x96uy; 0xd4uy; 0x77uy; 0xffuy; 0x96uy; 0x39uy; 0x0buy;
  0xf9uy; 0xa6uy; 0x6duy; 0x13uy; 0x68uy; 0xb2uy; 0x08uy; 0xe2uy; 0x1fuy; 0x7cuy; 0x10uy; 0xd0uy; 0x4auy; 0x3duy; 0xbduy; 0x4euy;
  0x36uy; 0x06uy; 0x33uy; 0xe5uy; 0xdbuy; 0x4buy; 0x60uy; 0x26uy; 0x01uy; 0xc1uy; 0x4cuy; 0xeauy; 0x73uy; 0x7duy; 0xb3uy; 0xdcuy;
  0xf7uy; 0x22uy; 0x63uy; 0x2cuy; 0xc7uy; 0x78uy; 0x51uy; 0xcbuy; 0xdduy; 0xe2uy; 0xaauy; 0xf0uy; 0xa3uy; 0x3auy; 0x07uy; 0xb3uy;
  0x73uy; 0x44uy; 0x5duy; 0xf4uy; 0x90uy; 0xccuy; 0x8fuy; 0xc1uy; 0xe4uy; 0x16uy; 0x0fuy; 0xf1uy; 0x18uy; 0x37uy; 0x8fuy; 0x11uy;
  0xf0uy; 0x47uy; 0x7duy; 0xe0uy; 0x55uy; 0xa8uy; 0x1auy; 0x9euy; 0xdauy; 0x57uy; 0xa4uy; 0xa2uy; 0xcfuy; 0xb0uy; 0xc8uy; 0x39uy;
  0x29uy; 0xd3uy; 0x10uy; 0x91uy; 0x2fuy; 0x72uy; 0x9euy; 0xc6uy; 0xcfuy; 0xa3uy; 0x6cuy; 0x6auy; 0xc6uy; 0xa7uy; 0x58uy; 0x37uy;
  0x14uy; 0x30uy; 0x45uy; 0xd7uy; 0x91uy; 0xccuy; 0x85uy; 0xefuy; 0xf5uy; 0xb2uy; 0x19uy; 0x32uy; 0xf2uy; 0x38uy; 0x61uy; 0xbcuy;
  0xf2uy; 0x3auy; 0x52uy; 0xb5uy; 0xdauy; 0x67uy; 0xeauy; 0xf7uy; 0xbauy; 0xaeuy; 0x0fuy; 0x5fuy; 0xb1uy; 0x36uy; 0x9duy; 0xb7uy;
  0x8fuy; 0x3auy; 0xc4uy; 0x5fuy; 0x8cuy; 0x4auy; 0xc5uy; 0x67uy; 0x1duy; 0x85uy; 0x73uy; 0x5cuy; 0xdduy; 0xdbuy; 0x09uy; 0xd2uy;
  0xb1uy; 0xe3uy; 0x4auy; 0x1fuy; 0xc0uy; 0x66uy; 0xffuy; 0x4auy; 0x16uy; 0x2cuy; 0xb2uy; 0x63uy; 0xd6uy; 0x54uy; 0x12uy; 0x74uy;
  0xaeuy; 0x2fuy; 0xccuy; 0x86uy; 0x5fuy; 0x61uy; 0x8auy; 0xbeuy; 0x27uy; 0xc1uy; 0x24uy; 0xcduy; 0x8buy; 0x07uy; 0x4cuy; 0xcduy;
  0x51uy; 0x63uy; 0x01uy; 0xb9uy; 0x18uy; 0x75uy; 0x82uy; 0x4duy; 0x09uy; 0x95uy; 0x8fuy; 0x34uy; 0x1euy; 0xf2uy; 0x74uy; 0xbduy;
  0xabuy; 0x0buy; 0xaeuy; 0x31uy; 0x63uy; 0x39uy; 0x89uy; 0x43uy; 0x04uy; 0xe3uy; 0x58uy; 0x77uy; 0xb0uy; 0xc2uy; 0x8auy; 0x9buy;
  0x1fuy; 0xd1uy; 0x66uy; 0xc7uy; 0x96uy; 0xb9uy; 0xccuy; 0x25uy; 0x8auy; 0x06uy; 0x4auy; 0x8fuy; 0x57uy; 0xe2uy; 0x7fuy; 0x2auy
]

//
// Test 2. SHAKE256
//

let test2_plaintext = create 32 (u8 00)

let test2_expected = List.Tot.map u8_from_UInt8 [
  0xf5uy; 0x97uy; 0x7cuy; 0x82uy; 0x83uy; 0x54uy; 0x6auy; 0x63uy; 0x72uy; 0x3buy; 0xc3uy; 0x1duy; 0x26uy; 0x19uy; 0x12uy; 0x4fuy;
  0x11uy; 0xdbuy; 0x46uy; 0x58uy; 0x64uy; 0x33uy; 0x36uy; 0x74uy; 0x1duy; 0xf8uy; 0x17uy; 0x57uy; 0xd5uy; 0xaduy; 0x30uy; 0x62uy
]

//
// Test 3. SHA3_224
//

let test3_plaintext = create 0 (u8 00)

let test3_expected = List.Tot.map u8_from_UInt8 [
  0x6Buy; 0x4Euy; 0x03uy; 0x42uy; 0x36uy; 0x67uy; 0xDBuy; 0xB7uy; 0x3Buy; 0x6Euy; 0x15uy; 0x45uy; 0x4Fuy; 0x0Euy; 0xB1uy; 0xABuy;
  0xD4uy; 0x59uy; 0x7Fuy; 0x9Auy; 0x1Buy; 0x07uy; 0x8Euy; 0x3Fuy; 0x5Buy; 0x5Auy; 0x6Buy; 0xC7uy
]

//
// Test4
//

let test4_plaintext = List.Tot.map u8_from_UInt8 [ 0x61uy; 0x62uy; 0x63uy ]

let test4_expected_sha3_224 = List.Tot.map u8_from_UInt8 [
  0xe6uy; 0x42uy; 0x82uy; 0x4cuy; 0x3fuy; 0x8cuy; 0xf2uy; 0x4auy; 0xd0uy; 0x92uy; 0x34uy; 0xeeuy; 0x7duy; 0x3cuy; 0x76uy; 0x6fuy;
  0xc9uy; 0xa3uy; 0xa5uy; 0x16uy; 0x8duy; 0x0cuy; 0x94uy; 0xaduy; 0x73uy; 0xb4uy; 0x6fuy; 0xdfuy
]

let test4_expected_sha3_256 = List.Tot.map u8_from_UInt8 [
  0x3auy; 0x98uy; 0x5duy; 0xa7uy; 0x4fuy; 0xe2uy; 0x25uy; 0xb2uy; 0x04uy; 0x5cuy; 0x17uy; 0x2duy; 0x6buy; 0xd3uy; 0x90uy; 0xbduy;
  0x85uy; 0x5fuy; 0x08uy; 0x6euy; 0x3euy; 0x9duy; 0x52uy; 0x5buy; 0x46uy; 0xbfuy; 0xe2uy; 0x45uy; 0x11uy; 0x43uy; 0x15uy; 0x32uy
]

let test4_expected_sha3_384 = List.Tot.map u8_from_UInt8 [
  0xecuy; 0x01uy; 0x49uy; 0x82uy; 0x88uy; 0x51uy; 0x6fuy; 0xc9uy; 0x26uy; 0x45uy; 0x9fuy; 0x58uy; 0xe2uy; 0xc6uy; 0xaduy; 0x8duy;
  0xf9uy; 0xb4uy; 0x73uy; 0xcbuy; 0x0fuy; 0xc0uy; 0x8cuy; 0x25uy; 0x96uy; 0xdauy; 0x7cuy; 0xf0uy; 0xe4uy; 0x9buy; 0xe4uy; 0xb2uy;
  0x98uy; 0xd8uy; 0x8cuy; 0xeauy; 0x92uy; 0x7auy; 0xc7uy; 0xf5uy; 0x39uy; 0xf1uy; 0xeduy; 0xf2uy; 0x28uy; 0x37uy; 0x6duy; 0x25uy
]

let test4_expected_sha3_512 = List.Tot.map u8_from_UInt8 [
  0xb7uy; 0x51uy; 0x85uy; 0x0buy; 0x1auy; 0x57uy; 0x16uy; 0x8auy; 0x56uy; 0x93uy; 0xcduy; 0x92uy; 0x4buy; 0x6buy; 0x09uy; 0x6euy;
  0x08uy; 0xf6uy; 0x21uy; 0x82uy; 0x74uy; 0x44uy; 0xf7uy; 0x0duy; 0x88uy; 0x4fuy; 0x5duy; 0x02uy; 0x40uy; 0xd2uy; 0x71uy; 0x2euy;
  0x10uy; 0xe1uy; 0x16uy; 0xe9uy; 0x19uy; 0x2auy; 0xf3uy; 0xc9uy; 0x1auy; 0x7euy; 0xc5uy; 0x76uy; 0x47uy; 0xe3uy; 0x93uy; 0x40uy;
  0x57uy; 0x34uy; 0x0buy; 0x4cuy; 0xf4uy; 0x08uy; 0xd5uy; 0xa5uy; 0x65uy; 0x92uy; 0xf8uy; 0x27uy; 0x4euy; 0xecuy; 0x53uy; 0xf0uy
]

//
// Test5
//

let test5_plaintext = List.Tot.map u8_from_UInt8 []

let test5_expected_sha3_224 = List.Tot.map u8_from_UInt8 [
  0x6buy; 0x4euy; 0x03uy; 0x42uy; 0x36uy; 0x67uy; 0xdbuy; 0xb7uy; 0x3buy; 0x6euy; 0x15uy; 0x45uy; 0x4fuy; 0x0euy; 0xb1uy; 0xabuy; 
  0xd4uy; 0x59uy; 0x7fuy; 0x9auy; 0x1buy; 0x07uy; 0x8euy; 0x3fuy; 0x5buy; 0x5auy; 0x6buy; 0xc7uy
]

let test5_expected_sha3_256 = List.Tot.map u8_from_UInt8 [
  0xa7uy; 0xffuy; 0xc6uy; 0xf8uy; 0xbfuy; 0x1euy; 0xd7uy; 0x66uy; 0x51uy; 0xc1uy; 0x47uy; 0x56uy; 0xa0uy; 0x61uy; 0xd6uy; 0x62uy; 
  0xf5uy; 0x80uy; 0xffuy; 0x4duy; 0xe4uy; 0x3buy; 0x49uy; 0xfauy; 0x82uy; 0xd8uy; 0x0auy; 0x4buy; 0x80uy; 0xf8uy; 0x43uy; 0x4auy
]

let test5_expected_sha3_384 = List.Tot.map u8_from_UInt8 [
  0x0cuy; 0x63uy; 0xa7uy; 0x5buy; 0x84uy; 0x5euy; 0x4fuy; 0x7duy; 0x01uy; 0x10uy; 0x7duy; 0x85uy; 0x2euy; 0x4cuy; 0x24uy; 0x85uy; 
  0xc5uy; 0x1auy; 0x50uy; 0xaauy; 0xaauy; 0x94uy; 0xfcuy; 0x61uy; 0x99uy; 0x5euy; 0x71uy; 0xbbuy; 0xeeuy; 0x98uy; 0x3auy; 0x2auy; 
  0xc3uy; 0x71uy; 0x38uy; 0x31uy; 0x26uy; 0x4auy; 0xdbuy; 0x47uy; 0xfbuy; 0x6buy; 0xd1uy; 0xe0uy; 0x58uy; 0xd5uy; 0xf0uy; 0x04uy
]

let test5_expected_sha3_512 = List.Tot.map u8_from_UInt8 [
  0xa6uy; 0x9fuy; 0x73uy; 0xccuy; 0xa2uy; 0x3auy; 0x9auy; 0xc5uy; 0xc8uy; 0xb5uy; 0x67uy; 0xdcuy; 0x18uy; 0x5auy; 0x75uy; 0x6euy; 
  0x97uy; 0xc9uy; 0x82uy; 0x16uy; 0x4fuy; 0xe2uy; 0x58uy; 0x59uy; 0xe0uy; 0xd1uy; 0xdcuy; 0xc1uy; 0x47uy; 0x5cuy; 0x80uy; 0xa6uy; 
  0x15uy; 0xb2uy; 0x12uy; 0x3auy; 0xf1uy; 0xf5uy; 0xf9uy; 0x4cuy; 0x11uy; 0xe3uy; 0xe9uy; 0x40uy; 0x2cuy; 0x3auy; 0xc5uy; 0x58uy; 
  0xf5uy; 0x00uy; 0x19uy; 0x9duy; 0x95uy; 0xb6uy; 0xd3uy; 0xe3uy; 0x01uy; 0x75uy; 0x85uy; 0x86uy; 0x28uy; 0x1duy; 0xcduy; 0x26uy 
]

//
// Test6
//

let test6_plaintext = List.Tot.map u8_from_UInt8 [
  0x61uy; 0x62uy; 0x63uy; 0x64uy; 0x62uy; 0x63uy; 0x64uy; 0x65uy; 0x63uy; 0x64uy; 0x65uy; 0x66uy; 0x64uy; 0x65uy; 0x66uy; 0x67uy;
  0x65uy; 0x66uy; 0x67uy; 0x68uy; 0x66uy; 0x67uy; 0x68uy; 0x69uy; 0x67uy; 0x68uy; 0x69uy; 0x6auy; 0x68uy; 0x69uy; 0x6auy; 0x6buy;
  0x69uy; 0x6auy; 0x6buy; 0x6cuy; 0x6auy; 0x6buy; 0x6cuy; 0x6duy; 0x6buy; 0x6cuy; 0x6duy; 0x6euy; 0x6cuy; 0x6duy; 0x6euy; 0x6fuy;
  0x6duy; 0x6euy; 0x6fuy; 0x70uy; 0x6euy; 0x6fuy; 0x70uy; 0x71uy
]

let test6_expected_sha3_224 = List.Tot.map u8_from_UInt8 [
  0x8auy; 0x24uy; 0x10uy; 0x8buy; 0x15uy; 0x4auy; 0xdauy; 0x21uy; 0xc9uy; 0xfduy; 0x55uy; 0x74uy; 0x49uy; 0x44uy; 0x79uy; 0xbauy; 
  0x5cuy; 0x7euy; 0x7auy; 0xb7uy; 0x6euy; 0xf2uy; 0x64uy; 0xeauy; 0xd0uy; 0xfcuy; 0xceuy; 0x33uy
]

let test6_expected_sha3_256 = List.Tot.map u8_from_UInt8 [
  0x41uy; 0xc0uy; 0xdbuy; 0xa2uy; 0xa9uy; 0xd6uy; 0x24uy; 0x08uy; 0x49uy; 0x10uy; 0x03uy; 0x76uy; 0xa8uy; 0x23uy; 0x5euy; 0x2cuy; 
  0x82uy; 0xe1uy; 0xb9uy; 0x99uy; 0x8auy; 0x99uy; 0x9euy; 0x21uy; 0xdbuy; 0x32uy; 0xdduy; 0x97uy; 0x49uy; 0x6duy; 0x33uy; 0x76uy; 
]

let test6_expected_sha3_384 = List.Tot.map u8_from_UInt8 [
  0x99uy; 0x1cuy; 0x66uy; 0x57uy; 0x55uy; 0xebuy; 0x3auy; 0x4buy; 0x6buy; 0xbduy; 0xfbuy; 0x75uy; 0xc7uy; 0x8auy; 0x49uy; 0x2euy; 
  0x8cuy; 0x56uy; 0xa2uy; 0x2cuy; 0x5cuy; 0x4duy; 0x7euy; 0x42uy; 0x9buy; 0xfduy; 0xbcuy; 0x32uy; 0xb9uy; 0xd4uy; 0xaduy; 0x5auy; 
  0xa0uy; 0x4auy; 0x1fuy; 0x07uy; 0x6euy; 0x62uy; 0xfeuy; 0xa1uy; 0x9euy; 0xefuy; 0x51uy; 0xacuy; 0xd0uy; 0x65uy; 0x7cuy; 0x22uy; 
]

let test6_expected_sha3_512 = List.Tot.map u8_from_UInt8 [
  0x04uy; 0xa3uy; 0x71uy; 0xe8uy; 0x4euy; 0xcfuy; 0xb5uy; 0xb8uy; 0xb7uy; 0x7cuy; 0xb4uy; 0x86uy; 0x10uy; 0xfcuy; 0xa8uy; 0x18uy; 
  0x2duy; 0xd4uy; 0x57uy; 0xceuy; 0x6fuy; 0x32uy; 0x6auy; 0x0fuy; 0xd3uy; 0xd7uy; 0xecuy; 0x2fuy; 0x1euy; 0x91uy; 0x63uy; 0x6duy; 
  0xeeuy; 0x69uy; 0x1fuy; 0xbeuy; 0x0cuy; 0x98uy; 0x53uy; 0x02uy; 0xbauy; 0x1buy; 0x0duy; 0x8duy; 0xc7uy; 0x8cuy; 0x08uy; 0x63uy; 
  0x46uy; 0xb5uy; 0x33uy; 0xb4uy; 0x9cuy; 0x03uy; 0x0duy; 0x99uy; 0xa2uy; 0x7duy; 0xafuy; 0x11uy; 0x39uy; 0xd6uy; 0xe7uy; 0x5euy
]

//
// Test7
//

let test7_plaintext = List.Tot.map u8_from_UInt8 [
  0x61uy; 0x62uy; 0x63uy; 0x64uy; 0x65uy; 0x66uy; 0x67uy; 0x68uy; 0x62uy; 0x63uy; 0x64uy; 0x65uy; 0x66uy; 0x67uy; 0x68uy; 0x69uy;
  0x63uy; 0x64uy; 0x65uy; 0x66uy; 0x67uy; 0x68uy; 0x69uy; 0x6auy; 0x64uy; 0x65uy; 0x66uy; 0x67uy; 0x68uy; 0x69uy; 0x6auy; 0x6buy;
  0x65uy; 0x66uy; 0x67uy; 0x68uy; 0x69uy; 0x6auy; 0x6buy; 0x6cuy; 0x66uy; 0x67uy; 0x68uy; 0x69uy; 0x6auy; 0x6buy; 0x6cuy; 0x6duy;
  0x67uy; 0x68uy; 0x69uy; 0x6auy; 0x6buy; 0x6cuy; 0x6duy; 0x6euy; 0x68uy; 0x69uy; 0x6auy; 0x6buy; 0x6cuy; 0x6duy; 0x6euy; 0x6fuy;
  0x69uy; 0x6auy; 0x6buy; 0x6cuy; 0x6duy; 0x6euy; 0x6fuy; 0x70uy; 0x6auy; 0x6buy; 0x6cuy; 0x6duy; 0x6euy; 0x6fuy; 0x70uy; 0x71uy;
  0x6buy; 0x6cuy; 0x6duy; 0x6euy; 0x6fuy; 0x70uy; 0x71uy; 0x72uy; 0x6cuy; 0x6duy; 0x6euy; 0x6fuy; 0x70uy; 0x71uy; 0x72uy; 0x73uy;
  0x6duy; 0x6euy; 0x6fuy; 0x70uy; 0x71uy; 0x72uy; 0x73uy; 0x74uy; 0x6euy; 0x6fuy; 0x70uy; 0x71uy; 0x72uy; 0x73uy; 0x74uy; 0x75uy
]

let test7_expected_sha3_224 = List.Tot.map u8_from_UInt8 [
  0x54uy; 0x3euy; 0x68uy; 0x68uy; 0xe1uy; 0x66uy; 0x6cuy; 0x1auy; 0x64uy; 0x36uy; 0x30uy; 0xdfuy; 0x77uy; 0x36uy; 0x7auy; 0xe5uy; 
  0xa6uy; 0x2auy; 0x85uy; 0x07uy; 0x0auy; 0x51uy; 0xc1uy; 0x4cuy; 0xbfuy; 0x66uy; 0x5cuy; 0xbcuy
]

let test7_expected_sha3_256 = List.Tot.map u8_from_UInt8 [
  0x91uy; 0x6fuy; 0x60uy; 0x61uy; 0xfeuy; 0x87uy; 0x97uy; 0x41uy; 0xcauy; 0x64uy; 0x69uy; 0xb4uy; 0x39uy; 0x71uy; 0xdfuy; 0xdbuy; 
  0x28uy; 0xb1uy; 0xa3uy; 0x2duy; 0xc3uy; 0x6cuy; 0xb3uy; 0x25uy; 0x4euy; 0x81uy; 0x2buy; 0xe2uy; 0x7auy; 0xaduy; 0x1duy; 0x18uy
]

let test7_expected_sha3_384 = List.Tot.map u8_from_UInt8 [
  0x79uy; 0x40uy; 0x7duy; 0x3buy; 0x59uy; 0x16uy; 0xb5uy; 0x9cuy; 0x3euy; 0x30uy; 0xb0uy; 0x98uy; 0x22uy; 0x97uy; 0x47uy; 0x91uy; 
  0xc3uy; 0x13uy; 0xfbuy; 0x9euy; 0xccuy; 0x84uy; 0x9euy; 0x40uy; 0x6fuy; 0x23uy; 0x59uy; 0x2duy; 0x04uy; 0xf6uy; 0x25uy; 0xdcuy; 
  0x8cuy; 0x70uy; 0x9buy; 0x98uy; 0xb4uy; 0x3buy; 0x38uy; 0x52uy; 0xb3uy; 0x37uy; 0x21uy; 0x61uy; 0x79uy; 0xaauy; 0x7fuy; 0xc7uy
]

let test7_expected_sha3_512 = List.Tot.map u8_from_UInt8 [
  0xafuy; 0xebuy; 0xb2uy; 0xefuy; 0x54uy; 0x2euy; 0x65uy; 0x79uy; 0xc5uy; 0x0cuy; 0xaduy; 0x06uy; 0xd2uy; 0xe5uy; 0x78uy; 0xf9uy; 
  0xf8uy; 0xdduy; 0x68uy; 0x81uy; 0xd7uy; 0xdcuy; 0x82uy; 0x4duy; 0x26uy; 0x36uy; 0x0fuy; 0xeeuy; 0xbfuy; 0x18uy; 0xa4uy; 0xfauy; 
  0x73uy; 0xe3uy; 0x26uy; 0x11uy; 0x22uy; 0x94uy; 0x8euy; 0xfcuy; 0xfduy; 0x49uy; 0x2euy; 0x74uy; 0xe8uy; 0x2euy; 0x21uy; 0x89uy; 
  0xeduy; 0x0fuy; 0xb4uy; 0x40uy; 0xd1uy; 0x87uy; 0xf3uy; 0x82uy; 0x27uy; 0x0cuy; 0xb4uy; 0x55uy; 0xf2uy; 0x1duy; 0xd1uy; 0x85uy
]

let print_and_compare (len:size_nat) (test_expected:lbytes len) (test_result:lbytes len) =
  IO.print_string "\nResult: \n";
  List.iter (fun a -> IO.print_string (UInt8.to_string_hex (u8_to_UInt8 a))) (as_list test_result);

  IO.print_string "\nExpected: \n";
  List.iter (fun a -> IO.print_string (UInt8.to_string_hex (u8_to_UInt8 a))) (as_list test_expected);
  
  for_all2 (fun a b -> uint_to_nat #U8 a = uint_to_nat #U8 b) test_expected test_result
  
//
// Main
//

let test () =

  IO.print_string "\nTEST 1. SHAKE256 \n";
  let test1_plaintext_len : size_nat = 0 in
  let test1_expected : lbytes 512 = createL test1_expected in  
  let test1_result : lbytes 512 = Spec.Keccak.shake256 test1_plaintext_len test1_plaintext 512 in
  let result1 = print_and_compare 512 test1_expected test1_result in
  
  IO.print_string "\n \nTEST 2. SHAKE256 \n";

  let test2_plaintext_len : size_nat = 32 in
  let test2_expected : lbytes 32 = createL test2_expected in
  let test2_result : lbytes 32 = Spec.Keccak.shake256 test2_plaintext_len test2_plaintext 32 in
  let result2 = print_and_compare 32 test2_expected test2_result in

  IO.print_string "\n \nTEST 3. SHA3_224 \n";

  let test3_plaintext_len : size_nat = 0 in
  let test3_expected : lbytes 28 = createL test3_expected in
  let test3_result : lbytes 28 = Spec.Keccak.sha3_224 test3_plaintext_len test3_plaintext in
  let result3 = print_and_compare 28 test3_expected test3_result in

  IO.print_string "\n \nTEST SHA3_224 \n";

  let test4_plaintext_len : size_nat = 3 in
  let test4_expected_sha3_224 : lbytes 28 = createL test4_expected_sha3_224 in
  let test4_result_sha3_224 : lbytes 28 = Spec.Keccak.sha3_224 test4_plaintext_len test4_plaintext in
  let result224_1 = print_and_compare 28 test4_expected_sha3_224 test4_result_sha3_224 in
  IO.print_string "\n";
  let test5_plaintext_len : size_nat = 0 in
  let test5_expected_sha3_224 : lbytes 28 = createL test5_expected_sha3_224 in
  let test5_result_sha3_224 : lbytes 28 = Spec.Keccak.sha3_224 test5_plaintext_len test5_plaintext in
  let result224_2 = print_and_compare 28 test5_expected_sha3_224 test5_result_sha3_224 in
  IO.print_string "\n";
  let test6_plaintext_len : size_nat = 56 in
  let test6_expected_sha3_224 : lbytes 28 = createL test6_expected_sha3_224 in
  let test6_result_sha3_224 : lbytes 28 = Spec.Keccak.sha3_224 test6_plaintext_len test6_plaintext in
  let result224_3 = print_and_compare 28 test6_expected_sha3_224 test6_result_sha3_224 in
  IO.print_string "\n";
  let test7_plaintext_len : size_nat = 112 in
  let test7_expected_sha3_224 : lbytes 28 = createL test7_expected_sha3_224 in
  let test7_result_sha3_224 : lbytes 28 = Spec.Keccak.sha3_224 test7_plaintext_len test7_plaintext in
  let result224_4 = print_and_compare 28 test7_expected_sha3_224 test7_result_sha3_224 in

  let result224 = result224_1 && result224_2 && result224_3 && result224_4 in

  IO.print_string "\n \nTEST SHA3_256 \n";
  let test4_expected_sha3_256 : lbytes 32 = createL test4_expected_sha3_256 in
  let test4_result_sha3_256 : lbytes 32 = Spec.Keccak.sha3_256 test4_plaintext_len test4_plaintext in
  let result256_1 = print_and_compare 32 test4_expected_sha3_256 test4_result_sha3_256 in
  IO.print_string "\n";
  let test5_expected_sha3_256 : lbytes 32 = createL test5_expected_sha3_256 in
  let test5_result_sha3_256 : lbytes 32 = Spec.Keccak.sha3_256 test5_plaintext_len test5_plaintext in
  let result256_2 = print_and_compare 32 test5_expected_sha3_256 test5_result_sha3_256 in
  IO.print_string "\n";
  let test6_expected_sha3_256 : lbytes 32 = createL test6_expected_sha3_256 in
  let test6_result_sha3_256 : lbytes 32 = Spec.Keccak.sha3_256 test6_plaintext_len test6_plaintext in
  let result256_3 = print_and_compare 32 test6_expected_sha3_256 test6_result_sha3_256 in
  IO.print_string "\n";
  let test7_expected_sha3_256 : lbytes 32 = createL test7_expected_sha3_256 in
  let test7_result_sha3_256 : lbytes 32 = Spec.Keccak.sha3_256 test7_plaintext_len test7_plaintext in
  let result256_4 = print_and_compare 32 test7_expected_sha3_256 test7_result_sha3_256 in

  let result256 = result256_1 && result256_2 && result256_3 && result256_4 in

  IO.print_string "\n \nTEST SHA3_384 \n";
  let test4_expected_sha3_384 : lbytes 48 = createL test4_expected_sha3_384 in
  let test4_result_sha3_384 : lbytes 48 = Spec.Keccak.sha3_384 test4_plaintext_len test4_plaintext in
  let result384_1 = print_and_compare 48 test4_expected_sha3_384 test4_result_sha3_384 in
  IO.print_string "\n";
  let test5_expected_sha3_384 : lbytes 48 = createL test5_expected_sha3_384 in
  let test5_result_sha3_384 : lbytes 48 = Spec.Keccak.sha3_384 test5_plaintext_len test5_plaintext in
  let result384_2 = print_and_compare 48 test5_expected_sha3_384 test5_result_sha3_384 in
  IO.print_string "\n";
  let test6_expected_sha3_384 : lbytes 48 = createL test6_expected_sha3_384 in
  let test6_result_sha3_384 : lbytes 48 = Spec.Keccak.sha3_384 test6_plaintext_len test6_plaintext in
  let result384_3 = print_and_compare 48 test6_expected_sha3_384 test6_result_sha3_384 in
  IO.print_string "\n";
  let test7_expected_sha3_384 : lbytes 48 = createL test7_expected_sha3_384 in
  let test7_result_sha3_384 : lbytes 48 = Spec.Keccak.sha3_384 test7_plaintext_len test7_plaintext in
  let result384_4 = print_and_compare 48 test7_expected_sha3_384 test7_result_sha3_384 in

  let result384 = result384_1 && result384_2 && result384_3 && result384_4 in

  IO.print_string "\n \nTEST SHA3_512 \n";
  let test4_expected_sha3_512 : lbytes 64 = createL test4_expected_sha3_512 in
  let test4_result_sha3_512 : lbytes 64 = Spec.Keccak.sha3_512 test4_plaintext_len test4_plaintext in
  let result512_1 = print_and_compare 64 test4_expected_sha3_512 test4_result_sha3_512 in
  IO.print_string "\n";
  let test5_expected_sha3_512 : lbytes 64 = createL test5_expected_sha3_512 in
  let test5_result_sha3_512 : lbytes 64 = Spec.Keccak.sha3_512 test5_plaintext_len test5_plaintext in
  let result512_2 = print_and_compare 64 test5_expected_sha3_512 test5_result_sha3_512 in
  IO.print_string "\n";
  let test6_expected_sha3_512 : lbytes 64 = createL test6_expected_sha3_512 in
  let test6_result_sha3_512 : lbytes 64 = Spec.Keccak.sha3_512 test6_plaintext_len test6_plaintext in
  let result512_3 = print_and_compare 64 test6_expected_sha3_512 test6_result_sha3_512 in
  IO.print_string "\n";
  let test7_expected_sha3_512 : lbytes 64 = createL test7_expected_sha3_512 in
  let test7_result_sha3_512 : lbytes 64 = Spec.Keccak.sha3_512 test7_plaintext_len test7_plaintext in
  let result512_4 = print_and_compare 64 test7_expected_sha3_512 test7_result_sha3_512 in

  let result512 = result512_1 && result512_2 && result512_3 && result512_4 in

  let result = result1 && result2 && result3 && result224 && result256 && result384 && result512 in
  if result then IO.print_string "\n\nKeccak : Success!\n"
  else IO.print_string "\n\nKeccak: Failure :(\n"
