#
# TODO
# - MSVC and Compcert compilation tests
# - Adding extract-c-apps to extract-c when libsodium is on the build machine
#

.PHONY: snapshot snapshot-gcc snapshot-ccomp snapshot-msvc snapshot-gcc-unrolled

#
# General extraction
#

extract-c: extract-c-code extract-c-crypto # extract-c-apps

extract-c-code:
	$(GFIND) $(HACL_HOME)/code -name out.krml -exec touch {} \;
	$(MAKE) -C $(HACL_HOME)/code extract-c

extract-c-code-experimental:
	$(MAKE) -C $(HACL_HOME)/code/experimental extract-c

#
# Snapshot targets
#

SNAPSHOT_DIR=snapshot

SNAPSHOT_FILES= ./test/c/* \
	$(addprefix ./code/poly1305/poly-c/, Poly1305_64.* AEAD_Poly1305_64.*) \
	./code/curve25519/x25519-c/Curve25519.* \
	./code/salsa-family/chacha-c/Chacha20.* \
	./code/salsa-family/salsa-c/Salsa20.* \
	$(addprefix ./code/api/aead-c/, Chacha20Poly1305.*) \
	$(addprefix ./code/api/box-c/, NaCl.*) \
	$(addprefix ./code/api/policies-c/, Hacl_Policies.* ) \
	$(addprefix ./code/ed25519/ed25519-c/, Ed25519.*) \
	$(addprefix ./code/hash/sha2-c/, SHA2_256.*) \
	$(addprefix ./code/hash/sha2-c/, SHA2_384.*) \
	$(addprefix ./code/hash/sha2-c/, SHA2_512.*) \
	$(addprefix ./code/hmac/hmac-c/, HMAC_SHA2_256.*) \
	$(addprefix ./code/salsa-family/chacha-vec128-c/, Chacha20_Vec128.* ../vec128.h)

ifeq ($(OS),Windows_NT)
  GCC=x86_64-w64-mingw32-gcc.exe
else
  GCC=$(shell which gcc-7 >/dev/null 2>&1 && echo gcc-7 || (which gcc-6 >/dev/null 2>&1 && echo gcc-6 || echo gcc))
  ENABLE_LTO=-flto
endif
GCC_OPTS=$(ENABLE_LTO) -std=c11 -D_GNU_SOURCE

snapshot/libhacl.so: snapshot
	$(MAKE) -C snapshot CC="$(GCC) $(GCC_OPTS) -fPIC" lib

snapshot-collect:
	mkdir -p $(SNAPSHOT_DIR)
	cp $(SNAPSHOT_FILES) $(SNAPSHOT_DIR)/
	$(MAKE) -C $(SNAPSHOT_DIR) clean

snapshot: extract-c-code extract-c-code-experimental snapshot-collect

snapshot-ccomp:
	if $(HAS_CCOMP); then $(MAKE) -B extract-c-code extract-c-code-experimental KOPTS="-cc compcert -funroll-loops 10 -fnouint128 -fnostruct-passing"; fi
	if $(HAS_CCOMP); then $(MAKE) -B snapshot-collect SNAPSHOT_DIR=snapshot-ccomp; fi

snapshot-msvc:
	if $(HAS_CL); then $(MAKE) extract-c-code extract-c-code-experimental KOPTS="-cc msvc -drop FStar"; fi
	if $(HAS_CL); then $(MAKE) snapshot-collect SNAPSHOT_DIR=snapshot-msvc; fi

snapshot-gcc:
	$(MAKE) -B extract-c-code extract-c-code-experimental KOPTS="-drop FStar"
	$(MAKE) -B snapshot-collect SNAPSHOT_DIR=snapshot-gcc

snapshot-gcc-unrolled:
	$(MAKE) -B extract-c-code extract-c-code-experimental KOPTS="-funroll-loops 5 -drop FStar"
	$(MAKE) -B snapshot-collect SNAPSHOT_DIR=snapshot-gcc-unrolled

snapshot-all:
	$(MAKE) snapshot
	$(MAKE) -C $(HACL_HOME)/code clean
	$(MAKE) snapshot-ccomp
	$(MAKE) -C $(HACL_HOME)/code clean
	$(MAKE) snapshot-msvc
	$(MAKE) -C $(HACL_HOME)/code clean
	$(MAKE) snapshot-gcc
	$(MAKE) -C $(HACL_HOME)/code clean
	$(MAKE) snapshot-gcc-unrolled
	$(MAKE) -C $(HACL_HOME)/code clean

snapshot-update:
	$(MAKE) snapshot-gcc
	$(MAKE) -C $(HACL_HOME)/code clean
	$(MAKE) snapshot-gcc-unrolled
	$(MAKE) -C $(HACL_HOME)/code clean
	$(MAKE) -C snapshot-gcc-unrolled clean
	$(MAKE) -C snapshot-gcc clean
	cp $(addprefix snapshot-gcc/, AEAD_Poly1305_64.* Chacha20.* Chacha20Poly1305.* Chacha20_Vec128.* gcc_compat.h Hacl_Policies.* hacl_test_utils.* NaCl.* Poly1305_64.* Salsa20.* SHA2_* test* vec128.h) \
	   $(addprefix snapshot-gcc-unrolled/, Curve25519* Ed25519*) \
	   $(addprefix c/, kremlib.h kremlib.c FStar.h Makefile)  \
		$(HACL_HOME)/snapshots/hacl-c
	$(MAKE) -C $(HACL_HOME)/snapshots/hacl-c unit-tests
	$(MAKE) -C $(HACL_HOME)/snapshots/hacl-c unit-tests-32
	$(MAKE) -C $(HACL_HOME)/snapshots/hacl-c perf
	$(MAKE) -C $(HACL_HOME)/snapshots/hacl-c clean

snapshot-nss:
	$(MAKE) snapshot-gcc
	$(MAKE) -C $(HACL_HOME)/code clean
	$(MAKE) snapshot-gcc-unrolled
	$(MAKE) -C $(HACL_HOME)/code clean
	$(MAKE) -C snapshot-gcc-unrolled clean
	$(MAKE) -C snapshot-gcc clean
	mkdir -p $(HACL_HOME)/snapshots/nss
	cp $(addprefix snapshot-gcc/, AEAD_Poly1305_64.* Chacha20.* Chacha20Poly1305.* Chacha20_Vec128.* gcc_compat.h Hacl_Policies.* hacl_test_utils.* kremlib.* NaCl.* Poly1305_64.* Salsa20.* SHA2_* test* vec128.h) $(HACL_HOME)/snapshots/nss
	cp $(addprefix snapshot-gcc-unrolled/, Curve25519* Ed25519*) $(HACL_HOME)/snapshots/nss
	cp $(addprefix c/, kremlib.h kremlib?c FStar.h Makefile)  $(HACL_HOME)/snapshots/nss
	$(MAKE) -C $(HACL_HOME)/snapshots/nss unit-tests
	$(MAKE) -C $(HACL_HOME)/snapshots/nss unit-tests-32
	$(MAKE) -C $(HACL_HOME)/snapshots/nss clean
