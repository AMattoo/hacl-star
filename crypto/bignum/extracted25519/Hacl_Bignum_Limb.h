/* This file auto-generated by KreMLin! */
#ifndef __Hacl_Bignum_Limb_H
#define __Hacl_Bignum_Limb_H


#include "Prims.h"
#include "FStar_Mul.h"
#include "FStar_Squash.h"
#include "FStar_StrongExcludedMiddle.h"
#include "FStar_List_Tot.h"
#include "FStar_Classical.h"
#include "FStar_ListProperties.h"
#include "FStar_SeqProperties.h"
#include "FStar_Math_Lemmas.h"
#include "FStar_BitVector.h"
#include "FStar_UInt.h"
#include "FStar_Int.h"
#include "FStar_FunctionalExtensionality.h"
#include "FStar_PropositionalExtensionality.h"
#include "FStar_PredicateExtensionality.h"
#include "FStar_TSet.h"
#include "FStar_Set.h"
#include "FStar_Map.h"
#include "FStar_Ghost.h"
#include "FStar_All.h"
#include "Hacl_UInt64.h"
#include "Hacl_UInt128.h"
#include "Hacl_UInt32.h"
#include "Hacl_UInt8.h"
#include "Hacl_Cast.h"
#include "Hacl_Bignum_Constants.h"
#include "FStar_Buffer.h"
#include "Hacl_Bignum_Parameters.h"
#include "Hacl_Bignum_Predicates.h"
#include "kremlib.h"
#include "testlib.h"

extern Prims_int Hacl_Bignum_Limb_n;

typedef uint64_t Hacl_Bignum_Limb_t;

Prims_int Hacl_Bignum_Limb_v(uint64_t x);

uint64_t Hacl_Bignum_Limb_add(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_add_mod(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_sub(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_sub_mod(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_mul(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_mul_mod(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_logand(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_logxor(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_logor(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_lognot(uint64_t a);

uint64_t Hacl_Bignum_Limb_shift_right(uint64_t a, uint32_t s);

uint64_t Hacl_Bignum_Limb_shift_left(uint64_t a, uint32_t s);

uint64_t Hacl_Bignum_Limb_eq_mask(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_gte_mask(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_gt_mask(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_lt_mask(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_lte_mask(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_op_Plus_Hat(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_op_Plus_Percent_Hat(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_op_Subtraction_Hat(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_op_Subtraction_Percent_Hat(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_op_Star_Hat(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_op_Star_Percent_Hat(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_op_Amp_Hat(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_op_Hat_Hat(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_op_Bar_Hat(uint64_t a, uint64_t b);

uint64_t Hacl_Bignum_Limb_op_Greater_Greater_Hat(uint64_t a, uint32_t s);

uint64_t Hacl_Bignum_Limb_op_Less_Less_Hat(uint64_t a, uint32_t s);
#endif
